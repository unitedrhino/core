syntax = "v1"

@server (
	group:      data/staticstics/info
	prefix:     /api/v1/data/staticstics/info
	middleware: CheckTokenWare,InitCtxsWare
)
service data {
	@doc "获取统计数据"
	@handler read
	post /read (StaticsticsInfoReadReq) returns (StaticsticsInfoReadResp)

	@doc "批量获取统计数据"
	@handler index
	post /index (StaticsticsInfoIndexReq) returns (StaticsticsInfoIndexResp)
}

type (
	PageInfo {
		Page   int64      `json:"page,optional" form:"page,optional"` // 页码
		Size   int64      `json:"size,optional" form:"size,optional"` // 每页大小
		Orders []*OrderBy `json:"orders,optional"` //排序
	}
	OrderBy {
		Field string `json:"field,optional"` ////排序的字段名
		Sort  int64  `json:"sort,optional"` //排序方式：0 从小到大, 1 从大到小
	}
	StaticsticsInfoExportReq {
		Columns []Column `json:"columns"`
		Format  string   `json:"format"` //默认xslx
	}
	Column {
		Column   string `json:"column"` //导出的列
		ShowName string `json:"showName"` //展示的名字
	}
	// StaticsticsInfoIndexReq {
	//  Reqs []*StaticsticsInfo `json:"reqs"`
	// }
	StaticsticsInfoReadResp {
		List []map[string]interface{} `json:"list"` //如果返回的是个列表
		One  interface{}              `json:"one"` //如果只返回一个数
	}
	Aggregation {
		Func   string `json:"argFunc,optional"`
		Column string `json:"column,optional"`
	}
	StaticsticsInfoReadReq {
		Code         string                 `json:"code"`
		Page         *PageInfo              `json:"page,optional"`
		Filter       map[string]interface{} `json:"filter,optional"`
		Aggregations []Aggregation          `json:"aggregations,optional"`
		GroupBy      string                 `json:"groupBy,optional"`
		Columns      string                 `json:"columns,optional"`
	}
	StaticsticsInfoIndexReq {
		Finds []*StaticsticsInfoReadReq `json:"finds"`
	}
	StaticsticsInfoIndexResp {
		Lists [][]map[string]interface{} `json:"list"`
	}
)

