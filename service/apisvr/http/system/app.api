info(
	title: "接口管理模块"
	desc: "接口管理"
	author: "L"
	email: "174805676@qq.com"
	version: "v0.1.0"
)
import "common.api"  //公共结构体定义

@server (
	group : system/app/info
	prefix: /api/v1/system/app/info
	middleware: SetupWare, CheckTokenWare,CheckApiWare, DataAuthWare, TeardownWare
)

service api {
    @doc "添加接口"
    @handler create
    post /create (AppInfo) returns (WithIDOrCode)

    @doc "获取接口列表"
    @handler index
    post /index (AppInfoIndexReq) returns (AppInfoIndexResp)

    @doc "获取接口详情"
    @handler read
    post /read (WithIDOrCode) returns (AppInfo)

    @doc "更新接口"
    @handler update
    post /update (AppInfo) returns ()

    @doc "删除接口"
    @handler delete
    post /delete (WithIDOrCode) returns ()
}

@server(
    group: system/app/module
    prefix: /api/v1/system/app/module
    middleware: SetupWare, CheckTokenWare,CheckApiWare, DataAuthWare, TeardownWare
)
service api {
    @doc "更新APP权限"
    @handler multiUpdate
    post /multi-update (AppModuleMultiUpdateReq) returns ()

    @doc "获取APP权限列表"
    @handler index
    post /index (AppModuleIndexReq) returns (AppModuleIndexResp)
}

type (

    AppModuleMultiUpdateReq{
        Code string `json:"code"`                     // 应用编号
        ModuleCodes []string `json:"moduleCodes"`  //App列表数据
    }
    AppModuleIndexReq{
        Code string `json:"code"`                     // 应用编号
    }
    AppModuleIndexResp{
        ModuleCodes []string `json:"moduleCodes"`  //App列表数据
    }

    AppInfoIndexReq struct {
        Page *PageInfo `json:"page,optional"`                   // 分页信息,只获取一个则不填
        Name string `json:"name,optional"`                     // 应用名称
        Code string `json:"code,optional"`                     // 应用编号
    }


    AppInfoIndexResp struct {
        List []*AppInfo `json:"list"`            // 接口列表数据
        Total int64 `json:"total"`                    // 接口列表总记录数
    }

    AppDeleteReq struct {
        ID int64 `json:"id"`                          // 接口编号
    }
)