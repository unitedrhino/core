info(
    desc: "系统配置"
    author: "lbs"
    email: "174805676@qq.com"
)
//import "common.api"  //公共结构体定义

@server (
    group: system/common
    prefix: /api/v1/system/common
    middleware:  CheckTokenWare,InitCtxsWare
)
service api {
    @doc "获取系统配置"
    @handler config
    post /config () returns (ConfigResp)
    @doc "获取文件上传地址"
    @handler uploadUrlCreate
    post /upload-url/create (UploadUrlCreateReq) returns (UploadUrlCreateResp)
    @doc(
        summary: "文件直传"
        injectFormdataParam: "file"
    )
    @handler uploadFile
    post /upload-file() returns (UploadFileResp)
    @doc "获取天气情况"
    @handler weatherRead
    post /weather/read(WeatherReadReq) returns (WeatherReadResp)
    @doc "websocket连接"
    @handler websocketConnect
    get /websocket/connect () returns ()


    @doc "获取小程序二维码"
    @handler qRCodeReadReq
    post /qr-code/read (QRCodeReadReq) returns (QRCodeReadResp)
}

@server (
    group: system/common
    prefix: /api/v1/system/common
    middleware:  InitCtxsWare
)
service api {
    @doc "ntp"
    @handler ntpRead
    post /ntp/read(NtpReadReq) returns (NtpReadResp)
}

type (
    QRCodeReadReq{
         page string `json:"page"` //默认是主页，页面 page，例如 pages/index/index，根路径前不要填加 /，不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面。scancode_time为系统保留参数，不允许配置
         scene string `json:"scene"` //        	最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：!#$&'()*+,/:;=?@-._~，其它字符请自行编码为合法字符（因不支持%，中文无法使用 urlencode 处理，请使用其他编码方式）
         envVersion string `json:"envVersion"` //要打开的小程序版本。正式版为 "release"，体验版为 "trial"，开发版为 "develop"。默认是正式版。
    }
    QRCodeReadResp{
        Buffer []byte `json:"buffer"`
    }
    WebsocketSubscribeInfo{
        Code string  `json:"code"`//订阅的code
        Params map[string]interface{} `json:"params"`//订阅参数
    }

    WebsocketSubscribeIndexResp{
        List []*WebsocketSubscribeInfo `json:"list"`
    }
    NtpReadReq{
        DeviceSendTime int64  `json:"deviceSendTime,string"`
    }
    NtpReadResp{
        DeviceSendTime int64 `json:"deviceSendTime,string"`
        ServerSendTime int64 `json:"serverSendTime,string"`
        ServerRecvTime int64 `json:"serverRecvTime,string"`
    }
    Map  {
        Mode string `json:"mode,options=gaode"`              //坐标系 默认百度坐标系
        AccessKey    string `json:"accessKey"` //设备地图key
        AccessSecret string `json:"accessSecret"`//地图秘钥
    }
    Oss  {
        Host string `json:"host"` //oss访问前缀
    }
    ConfigResp  {
        Map Map `json:"map"`  //设备地图相关配置
        Oss Oss `json:"oss"`//oss相关配置
    }
    UploadUrlCreateReq  {
        Business string `json:"business"` //业务(如产品管理 productManage)
        Scene string `json:"scene"` //场景(业务定义 如产品图片 productImg)
        FilePath string `json:"filePath"` //文件路径(带文件名)
        Rename bool `json:"rename,optional"` //true 文件重命名，false 不重命名(默认)
    }

    UploadUrlCreateResp  {
        FilePath string `json:"filePath"` //文件路径(带文件名)
        UploadUri string `json:"uploadUri"` //附件直传地址
    }

    UploadFileResp  {
        FilePath string `json:"filePath"` //文件路径(带文件名)
        FileUri string `json:"fileUri"` //文件uri 相对路径
    }
    WeatherAir {
        Aqi      string `json:"aqi"`
        Level    string `json:"level"`
        Category string `json:"category"`
        Primary  string `json:"primary"`
        Pm10     string `json:"pm10"`
        Pm2P5    string `json:"pm2p5"`
        No2      string `json:"no2"`
        So2      string `json:"so2"`
        Co       string `json:"co"`
        O3       string `json:"o3"`
    }
  WeatherReadResp{
        ObsTime   string `json:"obsTime"`
        Temp      string `json:"temp"`
        FeelsLike string `json:"feelsLike"`
        Icon      string `json:"icon"`
        Text      string `json:"text"`
        Wind360   string `json:"wind360"`
        WindDir   string `json:"windDir"`
        WindScale string `json:"windScale"`
        WindSpeed string `json:"windSpeed"`
        Humidity  string `json:"humidity"`
        Precip    string `json:"precip"`
        Pressure  string `json:"pressure"`
        Vis       string `json:"vis"`
        Cloud     string `json:"cloud"`
        Dew       string `json:"dew"`
        Air   WeatherAir     `json:"air"`
    }
    WeatherReadReq{
        Position Point `json:"position,optional"`
        ProjectID int64 `json:"projectID,optional,string"`
    }
)

