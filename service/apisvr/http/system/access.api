info(
	title: "接口管理模块"
	desc: "接口管理"
	author: "L"
	email: "174805676@qq.com"
	version: "v0.1.0"
)

@server (
	group: system/access/api
	prefix: /api/v1/system/access/api
    accessCodePrefix: "systemAccessManage"
    accessNamePrefix: "接口管理"
    accessGroup: "授权管理"
    defaultAuthType: "supper"
    defaultNeedAuth: "true"
    middleware:  CheckTokenWare,CheckApiWare, DataAuthWare,InitCtxsWare
)

service api {
    @doc "添加接口"
    @handler create
    post /create (ApiInfo) returns (WithID)

    @doc "获取接口列表"
    @handler index
    post /index (ApiInfoIndexReq) returns (ApiInfoIndexResp)

    @doc "更新接口"
    @handler update
    post /update (ApiInfo) returns ()

    @doc "删除接口"
    @handler delete
    post /delete (WithID) returns ()
}

@server (
    group: system/access/info
    prefix: /api/v1/system/access/info
    accessCodePrefix: "systemAccessManage"
    accessNamePrefix: "授权管理"
    accessGroup: "授权管理"
    defaultAuthType: "supper"
    defaultNeedAuth: "true"
    middleware:  CheckTokenWare,CheckApiWare, DataAuthWare,InitCtxsWare
)

service api {
    @doc "添加访问权限信息"
    @handler create
    post /create (AccessInfo) returns (WithID)

    @doc "获取访问权限信息"
    @handler index
    post /index (AccessIndexReq) returns (AccessIndexResp)

    @doc "获取访问权限信息树结构"
    @handler tree
    post /tree (AccessIndexReq) returns (AccessIndexResp)

    @doc "更新访问权限信息"
    @handler update
    post /update (AccessInfo) returns ()

    @doc "删除访问权限信息"
    @handler delete
    post /delete (WithID) returns ()

    @doc(
        summary: "批量导入授权"
        injectFormdataParam: "file"
        isNeedAuth: "true"
        authType: "admin"
    )
    @handler multiImport
    post /multi-import (AccessMultiImportReq) returns (AccessMultiImportResp)
}

type (
    AccessMultiImportReq {
        Module string  `form:"module,optional"` //模块
    }
    AccessMultiImportResp {
        Total int64 `json:"total"`                                 //导入总接口数
        ErrCount int64  `json:"errCount"` //失败数
        IgnoreCount int64  `json:"ignoreCount"` //忽略数
        SuccCount int64  `json:"succCount"` //成功数
    }

    ApiInfoIndexReq  {
        Page *PageInfo `json:"page,optional"`                   // 分页信息,只获取一个则不填
        Route string `json:"route,optional"`                   // 接口路由
        Method string `json:"method,optional"`      // 接口请求方式: （1 GET 2 POST 3 HEAD 4 OPTIONS 5 PUT 6 DELETE 7 TRACE 8 CONNECT 9 其它）
        Name string `json:"name,optional"`                     // 接口名称
        AccessCode string `json:"accessCode,optional"`                               // 应用编号
        AuthType int64 `json:"authType,optional,range=[0:3]"`        //  1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
    }


    ApiInfoIndexResp  {
        List []*ApiInfo `json:"list"`            // 接口列表数据
        Total int64 `json:"total"`                    // 接口列表总记录数
    }

    AccessIndexReq  {
        Page *PageInfo `json:"page,optional"`                   // 分页信息,只获取一个则不填
        Module string  `json:"module,optional"` //模块
        Group string `json:"group,optional"`                   // 接口路由
        Name string `json:"name,optional"`                     // 接口名称
        Code string `json:"code,optional"`                               // 应用编号
        IsNeedAuth int64 `json:"isNeedAuth,optional,range=[0:2]"`        // 是否需要权限认证 1是 2否
        AuthTypes []int64 `json:"authType,optional,range=[0:3]"`        //  1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
        WithApis bool `json:"withApis,optional"`
    }


    AccessIndexResp  {
        List []*AccessInfo `json:"list"`            // 接口列表数据
        Total int64 `json:"total"`                    // 接口列表总记录数
    }
    AccessTreeResp  {
        List []*AccessModuleInfo `json:"list"`            // 接口列表数据
    }
)