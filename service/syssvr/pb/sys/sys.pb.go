// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: proto/sys.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeoutToFail  int64 `protobuf:"varint,1,opt,name=timeoutToFail,proto3" json:"timeoutToFail,omitempty"`   //超时失败时间
	RequestTimeout int64 `protobuf:"varint,2,opt,name=requestTimeout,proto3" json:"requestTimeout,omitempty"` //请求超时,超时后会进行重试
	RetryInterval  int64 `protobuf:"varint,3,opt,name=retryInterval,proto3" json:"retryInterval,omitempty"`   //重试间隔
}

func (x *SendOption) Reset() {
	*x = SendOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOption) ProtoMessage() {}

func (x *SendOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOption.ProtoReflect.Descriptor instead.
func (*SendOption) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{0}
}

func (x *SendOption) GetTimeoutToFail() int64 {
	if x != nil {
		return x.TimeoutToFail
	}
	return 0
}

func (x *SendOption) GetRequestTimeout() int64 {
	if x != nil {
		return x.RequestTimeout
	}
	return 0
}

func (x *SendOption) GetRetryInterval() int64 {
	if x != nil {
		return x.RetryInterval
	}
	return 0
}

type ThirdAppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID     string `protobuf:"bytes,1,opt,name=appID,proto3" json:"appID,omitempty"`
	AppKey    string `protobuf:"bytes,2,opt,name=appKey,proto3" json:"appKey,omitempty"` //微信小程序无需填写
	AppSecret string `protobuf:"bytes,3,opt,name=appSecret,proto3" json:"appSecret,omitempty"`
}

func (x *ThirdAppConfig) Reset() {
	*x = ThirdAppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdAppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdAppConfig) ProtoMessage() {}

func (x *ThirdAppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdAppConfig.ProtoReflect.Descriptor instead.
func (*ThirdAppConfig) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{1}
}

func (x *ThirdAppConfig) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ThirdAppConfig) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

func (x *ThirdAppConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

type ThirdApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version          string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                    // 应用版本
	VersionDesc      string `protobuf:"bytes,2,opt,name=versionDesc,proto3" json:"versionDesc,omitempty"`            //版本说明
	FilePath         string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`                  // 文件路径,拿来下载文件
	IsUpdateFilePath bool   `protobuf:"varint,4,opt,name=isUpdateFilePath,proto3" json:"isUpdateFilePath,omitempty"` // 文件路径,拿来下载文件
}

func (x *ThirdApp) Reset() {
	*x = ThirdApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdApp) ProtoMessage() {}

func (x *ThirdApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdApp.ProtoReflect.Descriptor instead.
func (*ThirdApp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{2}
}

func (x *ThirdApp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ThirdApp) GetVersionDesc() string {
	if x != nil {
		return x.VersionDesc
	}
	return ""
}

func (x *ThirdApp) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ThirdApp) GetIsUpdateFilePath() bool {
	if x != nil {
		return x.IsUpdateFilePath
	}
	return false
}

type IDList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IDList) Reset() {
	*x = IDList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDList) ProtoMessage() {}

func (x *IDList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDList.ProtoReflect.Descriptor instead.
func (*IDList) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{3}
}

func (x *IDList) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type NotifyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                 // id编号
	Group        string            `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`                                                                                            //分组
	Code         string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`                                                                                              // 通知类型编码
	Name         string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                                              //通知的命名
	SupportTypes []string          `protobuf:"bytes,5,rep,name=supportTypes,proto3" json:"supportTypes,omitempty"`                                                                              //支持的通知类型
	EnableTypes  []string          `protobuf:"bytes,8,rep,name=enableTypes,proto3" json:"enableTypes,omitempty"`                                                                                //启用的通知类型
	Desc         string            `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                              // 项目备注
	IsRecord     int64             `protobuf:"varint,7,opt,name=isRecord,proto3" json:"isRecord,omitempty"`                                                                                     //是否记录该消息,是的情况下会将消息存一份到消息中心
	Params       map[string]string `protobuf:"bytes,12,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //变量属性 key是参数,value是描述
}

func (x *NotifyConfig) Reset() {
	*x = NotifyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfig) ProtoMessage() {}

func (x *NotifyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfig.ProtoReflect.Descriptor instead.
func (*NotifyConfig) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{4}
}

func (x *NotifyConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyConfig) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NotifyConfig) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NotifyConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyConfig) GetSupportTypes() []string {
	if x != nil {
		return x.SupportTypes
	}
	return nil
}

func (x *NotifyConfig) GetEnableTypes() []string {
	if x != nil {
		return x.EnableTypes
	}
	return nil
}

func (x *NotifyConfig) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NotifyConfig) GetIsRecord() int64 {
	if x != nil {
		return x.IsRecord
	}
	return 0
}

func (x *NotifyConfig) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type NotifyConfigIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Group string    `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"` //分组
	Code  string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`   // 通知类型编码
	Name  string    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`   //通知的命名
}

func (x *NotifyConfigIndexReq) Reset() {
	*x = NotifyConfigIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigIndexReq) ProtoMessage() {}

func (x *NotifyConfigIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigIndexReq.ProtoReflect.Descriptor instead.
func (*NotifyConfigIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{5}
}

func (x *NotifyConfigIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *NotifyConfigIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NotifyConfigIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *NotifyConfigIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NotifyConfigIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NotifyConfig `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *NotifyConfigIndexResp) Reset() {
	*x = NotifyConfigIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigIndexResp) ProtoMessage() {}

func (x *NotifyConfigIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigIndexResp.ProtoReflect.Descriptor instead.
func (*NotifyConfigIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{6}
}

func (x *NotifyConfigIndexResp) GetList() []*NotifyConfig {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NotifyConfigIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type NotifyTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                    // id编号
	TenantCode   string         `protobuf:"bytes,2,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`     //限定租户,不填是通用的
	Name         string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                 //通知的命名
	NotifyCode   string         `protobuf:"bytes,4,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`     //对应的配置Code
	Type         string         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                 //对应的配置类型 sms email
	TemplateCode string         `protobuf:"bytes,6,opt,name=templateCode,proto3" json:"templateCode,omitempty"` // 通知类型编码
	SignName     string         `protobuf:"bytes,7,opt,name=signName,proto3" json:"signName,omitempty"`         //签名(短信)
	Subject      string         `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`           //默认消息主题
	Body         string         `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`                 //默认模版内容
	Desc         string         `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`                // 备注
	ChannelID    int64          `protobuf:"varint,11,opt,name=channelID,proto3" json:"channelID,omitempty"`     //通道ID
	Channel      *NotifyChannel `protobuf:"bytes,12,opt,name=Channel,proto3" json:"Channel,omitempty"`
}

func (x *NotifyTemplate) Reset() {
	*x = NotifyTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTemplate) ProtoMessage() {}

func (x *NotifyTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTemplate.ProtoReflect.Descriptor instead.
func (*NotifyTemplate) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyTemplate) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *NotifyTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyTemplate) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyTemplate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyTemplate) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *NotifyTemplate) GetSignName() string {
	if x != nil {
		return x.SignName
	}
	return ""
}

func (x *NotifyTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *NotifyTemplate) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *NotifyTemplate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NotifyTemplate) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *NotifyTemplate) GetChannel() *NotifyChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type NotifyChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // id编号
	Name    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       //通知的命名
	Type    string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`       //对应的配置类型 sms email
	Desc    string          `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`       // 备注
	Webhook string          `protobuf:"bytes,5,opt,name=webhook,proto3" json:"webhook,omitempty"` //钉钉webhook及企微webhook
	Email   *ThirdEmail     `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`     //邮箱配置
	App     *ThirdAppConfig `protobuf:"bytes,7,opt,name=app,proto3" json:"app,omitempty"`         //第三方应用配置
	Sms     *ThirdSms       `protobuf:"bytes,8,opt,name=sms,proto3" json:"sms,omitempty"`         //短信配置
}

func (x *NotifyChannel) Reset() {
	*x = NotifyChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannel) ProtoMessage() {}

func (x *NotifyChannel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannel.ProtoReflect.Descriptor instead.
func (*NotifyChannel) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyChannel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyChannel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyChannel) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NotifyChannel) GetWebhook() string {
	if x != nil {
		return x.Webhook
	}
	return ""
}

func (x *NotifyChannel) GetEmail() *ThirdEmail {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *NotifyChannel) GetApp() *ThirdAppConfig {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *NotifyChannel) GetSms() *ThirdSms {
	if x != nil {
		return x.Sms
	}
	return nil
}

type NotifyChannelIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Name string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` //通知的命名
	Type string    `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` //对应的配置类型 sms email
}

func (x *NotifyChannelIndexReq) Reset() {
	*x = NotifyChannelIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyChannelIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannelIndexReq) ProtoMessage() {}

func (x *NotifyChannelIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannelIndexReq.ProtoReflect.Descriptor instead.
func (*NotifyChannelIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{9}
}

func (x *NotifyChannelIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *NotifyChannelIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyChannelIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifyChannelIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NotifyChannel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *NotifyChannelIndexResp) Reset() {
	*x = NotifyChannelIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyChannelIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyChannelIndexResp) ProtoMessage() {}

func (x *NotifyChannelIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyChannelIndexResp.ProtoReflect.Descriptor instead.
func (*NotifyChannelIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{10}
}

func (x *NotifyChannelIndexResp) GetList() []*NotifyChannel {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NotifyChannelIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ThirdEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`         // 发件人  你自己要发邮件的邮箱
	Host     string `protobuf:"bytes,2,opt,name=Host,proto3" json:"Host,omitempty"`         // 服务器地址 例如 smtp.qq.com  请前往QQ或者你要发邮件的邮箱查看其smtp协议
	Secret   string `protobuf:"bytes,3,opt,name=Secret,proto3" json:"Secret,omitempty"`     // 密钥    用于登录的密钥 最好不要用邮箱密码 去邮箱smtp申请一个用于登录的密钥
	Nickname string `protobuf:"bytes,4,opt,name=Nickname,proto3" json:"Nickname,omitempty"` // 昵称    发件人昵称 通常为自己的邮箱
	Port     int64  `protobuf:"varint,5,opt,name=Port,proto3" json:"Port,omitempty"`        // 端口     请前往QQ或者你要发邮件的邮箱查看其smtp协议 大多为 465
	IsSSL    int64  `protobuf:"varint,6,opt,name=IsSSL,proto3" json:"IsSSL,omitempty"`      // 是否SSL   是否开启SSL
}

func (x *ThirdEmail) Reset() {
	*x = ThirdEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdEmail) ProtoMessage() {}

func (x *ThirdEmail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdEmail.ProtoReflect.Descriptor instead.
func (*ThirdEmail) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{11}
}

func (x *ThirdEmail) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ThirdEmail) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ThirdEmail) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *ThirdEmail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ThirdEmail) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ThirdEmail) GetIsSSL() int64 {
	if x != nil {
		return x.IsSSL
	}
	return 0
}

type ThirdSms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` //ali|tencent
	AccessKeyID     string `protobuf:"bytes,2,opt,name=accessKeyID,proto3" json:"accessKeyID,omitempty"`
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	AppID           string `protobuf:"bytes,4,opt,name=appID,proto3" json:"appID,omitempty"`
	AppKey          string `protobuf:"bytes,5,opt,name=appKey,proto3" json:"appKey,omitempty"`
}

func (x *ThirdSms) Reset() {
	*x = ThirdSms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdSms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdSms) ProtoMessage() {}

func (x *ThirdSms) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdSms.ProtoReflect.Descriptor instead.
func (*ThirdSms) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{12}
}

func (x *ThirdSms) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ThirdSms) GetAccessKeyID() string {
	if x != nil {
		return x.AccessKeyID
	}
	return ""
}

func (x *ThirdSms) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *ThirdSms) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ThirdSms) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

type NotifyTemplateIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Name       string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`             //通知的命名
	NotifyCode string    `protobuf:"bytes,4,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"` //对应的配置Code
	Type       string    `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`             //对应的配置类型 sms email
}

func (x *NotifyTemplateIndexReq) Reset() {
	*x = NotifyTemplateIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTemplateIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTemplateIndexReq) ProtoMessage() {}

func (x *NotifyTemplateIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTemplateIndexReq.ProtoReflect.Descriptor instead.
func (*NotifyTemplateIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyTemplateIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *NotifyTemplateIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyTemplateIndexReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyTemplateIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifyTemplateIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NotifyTemplate `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *NotifyTemplateIndexResp) Reset() {
	*x = NotifyTemplateIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyTemplateIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTemplateIndexResp) ProtoMessage() {}

func (x *NotifyTemplateIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTemplateIndexResp.ProtoReflect.Descriptor instead.
func (*NotifyTemplateIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyTemplateIndexResp) GetList() []*NotifyTemplate {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *NotifyTemplateIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MessageInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Group      string    `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"` //分组
	NotifyCode string    `protobuf:"bytes,4,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
}

func (x *MessageInfoIndexReq) Reset() {
	*x = MessageInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfoIndexReq) ProtoMessage() {}

func (x *MessageInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfoIndexReq.ProtoReflect.Descriptor instead.
func (*MessageInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{15}
}

func (x *MessageInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *MessageInfoIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *MessageInfoIndexReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

type MessageInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*MessageInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MessageInfoIndexResp) Reset() {
	*x = MessageInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfoIndexResp) ProtoMessage() {}

func (x *MessageInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfoIndexResp.ProtoReflect.Descriptor instead.
func (*MessageInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{16}
}

func (x *MessageInfoIndexResp) GetList() []*MessageInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *MessageInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MessageInfoSendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs    []int64  `protobuf:"varint,1,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"` //指定用户ID
	IsGlobal   int64    `protobuf:"varint,2,opt,name=isGlobal,proto3" json:"isGlobal,omitempty"`      //全局消息
	NotifyCode string   `protobuf:"bytes,4,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`   //通知的code
	Subject    string   `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`         //通知主题
	Body       string   `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	Str1       string   `protobuf:"bytes,7,opt,name=str1,proto3" json:"str1,omitempty"`
	Str2       string   `protobuf:"bytes,8,opt,name=str2,proto3" json:"str2,omitempty"`
	Str3       string   `protobuf:"bytes,9,opt,name=str3,proto3" json:"str3,omitempty"`
	WithTypes  []string `protobuf:"bytes,10,rep,name=withTypes,proto3" json:"withTypes,omitempty"`    //同时推送指定方式 sms email
	NotifyTime int64    `protobuf:"varint,11,opt,name=NotifyTime,proto3" json:"NotifyTime,omitempty"` //通知时间,不传为立刻通知
}

func (x *MessageInfoSendReq) Reset() {
	*x = MessageInfoSendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfoSendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfoSendReq) ProtoMessage() {}

func (x *MessageInfoSendReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfoSendReq.ProtoReflect.Descriptor instead.
func (*MessageInfoSendReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{17}
}

func (x *MessageInfoSendReq) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *MessageInfoSendReq) GetIsGlobal() int64 {
	if x != nil {
		return x.IsGlobal
	}
	return 0
}

func (x *MessageInfoSendReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *MessageInfoSendReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MessageInfoSendReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessageInfoSendReq) GetStr1() string {
	if x != nil {
		return x.Str1
	}
	return ""
}

func (x *MessageInfoSendReq) GetStr2() string {
	if x != nil {
		return x.Str2
	}
	return ""
}

func (x *MessageInfoSendReq) GetStr3() string {
	if x != nil {
		return x.Str3
	}
	return ""
}

func (x *MessageInfoSendReq) GetWithTypes() []string {
	if x != nil {
		return x.WithTypes
	}
	return nil
}

func (x *MessageInfoSendReq) GetNotifyTime() int64 {
	if x != nil {
		return x.NotifyTime
	}
	return 0
}

type MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	Group       string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	NotifyCode  string `protobuf:"bytes,2,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
	NotifyName  string `protobuf:"bytes,12,opt,name=notifyName,proto3" json:"notifyName,omitempty"`
	Subject     string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Body        string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Str1        string `protobuf:"bytes,5,opt,name=str1,proto3" json:"str1,omitempty"`
	Str2        string `protobuf:"bytes,6,opt,name=str2,proto3" json:"str2,omitempty"`
	Str3        string `protobuf:"bytes,7,opt,name=str3,proto3" json:"str3,omitempty"`
	IsGlobal    int64  `protobuf:"varint,8,opt,name=isGlobal,proto3" json:"isGlobal,omitempty"`
	CreatedTime int64  `protobuf:"varint,9,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	NotifyTime  int64  `protobuf:"varint,11,opt,name=notifyTime,proto3" json:"notifyTime,omitempty"` //通知时间,不传为立刻通知
}

func (x *MessageInfo) Reset() {
	*x = MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageInfo) ProtoMessage() {}

func (x *MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{18}
}

func (x *MessageInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *MessageInfo) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *MessageInfo) GetNotifyName() string {
	if x != nil {
		return x.NotifyName
	}
	return ""
}

func (x *MessageInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MessageInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MessageInfo) GetStr1() string {
	if x != nil {
		return x.Str1
	}
	return ""
}

func (x *MessageInfo) GetStr2() string {
	if x != nil {
		return x.Str2
	}
	return ""
}

func (x *MessageInfo) GetStr3() string {
	if x != nil {
		return x.Str3
	}
	return ""
}

func (x *MessageInfo) GetIsGlobal() int64 {
	if x != nil {
		return x.IsGlobal
	}
	return 0
}

func (x *MessageInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *MessageInfo) GetNotifyTime() int64 {
	if x != nil {
		return x.NotifyTime
	}
	return 0
}

type NotifyConfigTemplateDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotifyCode string `protobuf:"bytes,2,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *NotifyConfigTemplateDeleteReq) Reset() {
	*x = NotifyConfigTemplateDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigTemplateDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigTemplateDeleteReq) ProtoMessage() {}

func (x *NotifyConfigTemplateDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigTemplateDeleteReq.ProtoReflect.Descriptor instead.
func (*NotifyConfigTemplateDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{19}
}

func (x *NotifyConfigTemplateDeleteReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyConfigTemplateDeleteReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifyConfigTemplateIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotifyCode string `protobuf:"bytes,2,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *NotifyConfigTemplateIndexReq) Reset() {
	*x = NotifyConfigTemplateIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigTemplateIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigTemplateIndexReq) ProtoMessage() {}

func (x *NotifyConfigTemplateIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigTemplateIndexReq.ProtoReflect.Descriptor instead.
func (*NotifyConfigTemplateIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{20}
}

func (x *NotifyConfigTemplateIndexReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyConfigTemplateIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NotifyConfigTemplateIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*NotifyConfigTemplate `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *NotifyConfigTemplateIndexResp) Reset() {
	*x = NotifyConfigTemplateIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigTemplateIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigTemplateIndexResp) ProtoMessage() {}

func (x *NotifyConfigTemplateIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigTemplateIndexResp.ProtoReflect.Descriptor instead.
func (*NotifyConfigTemplateIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{21}
}

func (x *NotifyConfigTemplateIndexResp) GetList() []*NotifyConfigTemplate {
	if x != nil {
		return x.List
	}
	return nil
}

type NotifyConfigTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NotifyCode string `protobuf:"bytes,2,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	TemplateID int64  `protobuf:"varint,4,opt,name=templateID,proto3" json:"templateID,omitempty"`
}

func (x *NotifyConfigTemplate) Reset() {
	*x = NotifyConfigTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigTemplate) ProtoMessage() {}

func (x *NotifyConfigTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigTemplate.ProtoReflect.Descriptor instead.
func (*NotifyConfigTemplate) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{22}
}

func (x *NotifyConfigTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotifyConfigTemplate) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyConfigTemplate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyConfigTemplate) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

type TenantAgreement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"` //协议编码
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` //协议名称
	Title   string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TenantAgreement) Reset() {
	*x = TenantAgreement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAgreement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAgreement) ProtoMessage() {}

func (x *TenantAgreement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAgreement.ProtoReflect.Descriptor instead.
func (*TenantAgreement) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{23}
}

func (x *TenantAgreement) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantAgreement) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAgreement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantAgreement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TenantAgreement) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type TenantAgreementIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *TenantAgreementIndexReq) Reset() {
	*x = TenantAgreementIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAgreementIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAgreementIndexReq) ProtoMessage() {}

func (x *TenantAgreementIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAgreementIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAgreementIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{24}
}

func (x *TenantAgreementIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type TenantAgreementIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*TenantAgreement `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *TenantAgreementIndexResp) Reset() {
	*x = TenantAgreementIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAgreementIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAgreementIndexResp) ProtoMessage() {}

func (x *TenantAgreementIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAgreementIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAgreementIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{25}
}

func (x *TenantAgreementIndexResp) GetList() []*TenantAgreement {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TenantAgreementIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TenantOpenCheckTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Ip    string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *TenantOpenCheckTokenReq) Reset() {
	*x = TenantOpenCheckTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantOpenCheckTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantOpenCheckTokenReq) ProtoMessage() {}

func (x *TenantOpenCheckTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantOpenCheckTokenReq.ProtoReflect.Descriptor instead.
func (*TenantOpenCheckTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{26}
}

func (x *TenantOpenCheckTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TenantOpenCheckTokenReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type TenantOpenCheckTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	TenantCode string `protobuf:"bytes,5,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"` //租户编码
	IsAdmin    int64  `protobuf:"varint,6,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`      //是否是超级管理员
	UserName   string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`     //用户名
}

func (x *TenantOpenCheckTokenResp) Reset() {
	*x = TenantOpenCheckTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantOpenCheckTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantOpenCheckTokenResp) ProtoMessage() {}

func (x *TenantOpenCheckTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantOpenCheckTokenResp.ProtoReflect.Descriptor instead.
func (*TenantOpenCheckTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{27}
}

func (x *TenantOpenCheckTokenResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TenantOpenCheckTokenResp) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *TenantOpenCheckTokenResp) GetIsAdmin() int64 {
	if x != nil {
		return x.IsAdmin
	}
	return 0
}

func (x *TenantOpenCheckTokenResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type TenantOpenWebHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantCode string            `protobuf:"bytes,2,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`
	Code       string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Uri        string            `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	Hosts      []string          `protobuf:"bytes,6,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Desc       string            `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	Handler    map[string]string `protobuf:"bytes,8,rep,name=handler,proto3" json:"handler,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TenantOpenWebHook) Reset() {
	*x = TenantOpenWebHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantOpenWebHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantOpenWebHook) ProtoMessage() {}

func (x *TenantOpenWebHook) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantOpenWebHook.ProtoReflect.Descriptor instead.
func (*TenantOpenWebHook) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{28}
}

func (x *TenantOpenWebHook) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantOpenWebHook) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *TenantOpenWebHook) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantOpenWebHook) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *TenantOpenWebHook) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *TenantOpenWebHook) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TenantOpenWebHook) GetHandler() map[string]string {
	if x != nil {
		return x.Handler
	}
	return nil
}

type OpenAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantCode   string   `protobuf:"bytes,2,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`
	Code         string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	UserID       int64    `protobuf:"varint,4,opt,name=userID,proto3" json:"userID,omitempty"`
	AccessSecret string   `protobuf:"bytes,5,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
	IpRange      []string `protobuf:"bytes,6,rep,name=ipRange,proto3" json:"ipRange,omitempty"`
	Desc         string   `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OpenAccess) Reset() {
	*x = OpenAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAccess) ProtoMessage() {}

func (x *OpenAccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAccess.ProtoReflect.Descriptor instead.
func (*OpenAccess) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{29}
}

func (x *OpenAccess) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpenAccess) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *OpenAccess) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OpenAccess) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OpenAccess) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

func (x *OpenAccess) GetIpRange() []string {
	if x != nil {
		return x.IpRange
	}
	return nil
}

func (x *OpenAccess) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type OpenAccessIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	TenantCode string    `protobuf:"bytes,2,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`
	Code       string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	UserID     int64     `protobuf:"varint,4,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *OpenAccessIndexReq) Reset() {
	*x = OpenAccessIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAccessIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAccessIndexReq) ProtoMessage() {}

func (x *OpenAccessIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAccessIndexReq.ProtoReflect.Descriptor instead.
func (*OpenAccessIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{30}
}

func (x *OpenAccessIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *OpenAccessIndexReq) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *OpenAccessIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OpenAccessIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type OpenAccessIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*OpenAccess `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OpenAccessIndexResp) Reset() {
	*x = OpenAccessIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAccessIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAccessIndexResp) ProtoMessage() {}

func (x *OpenAccessIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAccessIndexResp.ProtoReflect.Descriptor instead.
func (*OpenAccessIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{31}
}

func (x *OpenAccessIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpenAccessIndexResp) GetList() []*OpenAccess {
	if x != nil {
		return x.List
	}
	return nil
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Params string `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{32}
}

func (x *UserProfile) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserProfile) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type UserProfileIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *UserProfileIndexReq) Reset() {
	*x = UserProfileIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileIndexReq) ProtoMessage() {}

func (x *UserProfileIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileIndexReq.ProtoReflect.Descriptor instead.
func (*UserProfileIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{33}
}

func (x *UserProfileIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type UserProfileIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*UserProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *UserProfileIndexResp) Reset() {
	*x = UserProfileIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileIndexResp) ProtoMessage() {}

func (x *UserProfileIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileIndexResp.ProtoReflect.Descriptor instead.
func (*UserProfileIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{34}
}

func (x *UserProfileIndexResp) GetProfiles() []*UserProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID  int64        `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	IsRead  int64        `protobuf:"varint,3,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Message *MessageInfo `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UserMessage) Reset() {
	*x = UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessage) ProtoMessage() {}

func (x *UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessage.ProtoReflect.Descriptor instead.
func (*UserMessage) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{35}
}

func (x *UserMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMessage) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserMessage) GetIsRead() int64 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *UserMessage) GetMessage() *MessageInfo {
	if x != nil {
		return x.Message
	}
	return nil
}

type UserMessageStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UserMessageStatistics `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMessageStatisticsResp) Reset() {
	*x = UserMessageStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessageStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessageStatisticsResp) ProtoMessage() {}

func (x *UserMessageStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessageStatisticsResp.ProtoReflect.Descriptor instead.
func (*UserMessageStatisticsResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{36}
}

func (x *UserMessageStatisticsResp) GetList() []*UserMessageStatistics {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMessageStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UserMessageStatistics) Reset() {
	*x = UserMessageStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessageStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessageStatistics) ProtoMessage() {}

func (x *UserMessageStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessageStatistics.ProtoReflect.Descriptor instead.
func (*UserMessageStatistics) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{37}
}

func (x *UserMessageStatistics) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UserMessageStatistics) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UserMessageIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Group       string     `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	NotifyCode  string     `protobuf:"bytes,3,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"`
	IsRead      int64      `protobuf:"varint,4,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Str1        string     `protobuf:"bytes,5,opt,name=str1,proto3" json:"str1,omitempty"`
	Str2        string     `protobuf:"bytes,6,opt,name=str2,proto3" json:"str2,omitempty"`
	Str3        string     `protobuf:"bytes,7,opt,name=str3,proto3" json:"str3,omitempty"`
	CreatedTime *TimeRange `protobuf:"bytes,8,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //
}

func (x *UserMessageIndexReq) Reset() {
	*x = UserMessageIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessageIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessageIndexReq) ProtoMessage() {}

func (x *UserMessageIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessageIndexReq.ProtoReflect.Descriptor instead.
func (*UserMessageIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{38}
}

func (x *UserMessageIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserMessageIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UserMessageIndexReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *UserMessageIndexReq) GetIsRead() int64 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *UserMessageIndexReq) GetStr1() string {
	if x != nil {
		return x.Str1
	}
	return ""
}

func (x *UserMessageIndexReq) GetStr2() string {
	if x != nil {
		return x.Str2
	}
	return ""
}

func (x *UserMessageIndexReq) GetStr3() string {
	if x != nil {
		return x.Str3
	}
	return ""
}

func (x *UserMessageIndexReq) GetCreatedTime() *TimeRange {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

type UserMessageIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserMessage `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMessageIndexResp) Reset() {
	*x = UserMessageIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessageIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessageIndexResp) ProtoMessage() {}

func (x *UserMessageIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessageIndexResp.ProtoReflect.Descriptor instead.
func (*UserMessageIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{39}
}

func (x *UserMessageIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserMessageIndexResp) GetList() []*UserMessage {
	if x != nil {
		return x.List
	}
	return nil
}

type NotifyConfigSendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIDs  []int64  `protobuf:"varint,1,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"` //只有填写了用户ID才会记录
	Accounts []string `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// string accountType =3;
	NotifyCode string            `protobuf:"bytes,4,opt,name=notifyCode,proto3" json:"notifyCode,omitempty"` //通知的code
	Type       string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`             //通知类型
	Params     map[string]string `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Str1       string            `protobuf:"bytes,7,opt,name=str1,proto3" json:"str1,omitempty"`
	Str2       string            `protobuf:"bytes,8,opt,name=str2,proto3" json:"str2,omitempty"`
	Str3       string            `protobuf:"bytes,9,opt,name=str3,proto3" json:"str3,omitempty"`
	TemplateID int64             `protobuf:"varint,10,opt,name=templateID,proto3" json:"templateID,omitempty"` //指定模版
}

func (x *NotifyConfigSendReq) Reset() {
	*x = NotifyConfigSendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyConfigSendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyConfigSendReq) ProtoMessage() {}

func (x *NotifyConfigSendReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyConfigSendReq.ProtoReflect.Descriptor instead.
func (*NotifyConfigSendReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{40}
}

func (x *NotifyConfigSendReq) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *NotifyConfigSendReq) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *NotifyConfigSendReq) GetNotifyCode() string {
	if x != nil {
		return x.NotifyCode
	}
	return ""
}

func (x *NotifyConfigSendReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NotifyConfigSendReq) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *NotifyConfigSendReq) GetStr1() string {
	if x != nil {
		return x.Str1
	}
	return ""
}

func (x *NotifyConfigSendReq) GetStr2() string {
	if x != nil {
		return x.Str2
	}
	return ""
}

func (x *NotifyConfigSendReq) GetStr3() string {
	if x != nil {
		return x.Str3
	}
	return ""
}

func (x *NotifyConfigSendReq) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

type TenantInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *TenantInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	AdminUserInfo *UserInfo   `protobuf:"bytes,2,opt,name=adminUserInfo,proto3" json:"adminUserInfo,omitempty"`
}

func (x *TenantInfoCreateReq) Reset() {
	*x = TenantInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoCreateReq) ProtoMessage() {}

func (x *TenantInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoCreateReq.ProtoReflect.Descriptor instead.
func (*TenantInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{41}
}

func (x *TenantInfoCreateReq) GetInfo() *TenantInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TenantInfoCreateReq) GetAdminUserInfo() *UserInfo {
	if x != nil {
		return x.AdminUserInfo
	}
	return nil
}

type TenantInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code                  string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	AdminUserID           int64                   `protobuf:"varint,4,opt,name=adminUserID,proto3" json:"adminUserID,omitempty"`
	AdminRoleID           int64                   `protobuf:"varint,5,opt,name=adminRoleID,proto3" json:"adminRoleID,omitempty"`
	Desc                  *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	DefaultProjectID      int64                   `protobuf:"varint,7,opt,name=defaultProjectID,proto3" json:"defaultProjectID,omitempty"`
	DefaultAreaID         int64                   `protobuf:"varint,8,opt,name=defaultAreaID,proto3" json:"defaultAreaID,omitempty"`
	BackgroundImg         string                  `protobuf:"bytes,9,opt,name=backgroundImg,proto3" json:"backgroundImg,omitempty"`
	IsUpdateBackgroundImg bool                    `protobuf:"varint,10,opt,name=isUpdateBackgroundImg,proto3" json:"isUpdateBackgroundImg,omitempty"`
	BackgroundColour      string                  `protobuf:"bytes,15,opt,name=backgroundColour,proto3" json:"backgroundColour,omitempty"` //背景颜色
	BackgroundDesc        *wrapperspb.StringValue `protobuf:"bytes,19,opt,name=backgroundDesc,proto3" json:"backgroundDesc,omitempty"`     //背景描述
	LogoImg               string                  `protobuf:"bytes,11,opt,name=logoImg,proto3" json:"logoImg,omitempty"`
	IsUpdateLogoImg       bool                    `protobuf:"varint,12,opt,name=isUpdateLogoImg,proto3" json:"isUpdateLogoImg,omitempty"`
	Title                 string                  `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	TitleEn               string                  `protobuf:"bytes,14,opt,name=titleEn,proto3" json:"titleEn,omitempty"`
	CreatedTime           int64                   `protobuf:"varint,16,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Status                int64                   `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	Footer                string                  `protobuf:"bytes,18,opt,name=footer,proto3" json:"footer,omitempty"`        //页尾
	UserCount             int64                   `protobuf:"varint,20,opt,name=userCount,proto3" json:"userCount,omitempty"` //用户统计
}

func (x *TenantInfo) Reset() {
	*x = TenantInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfo) ProtoMessage() {}

func (x *TenantInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfo.ProtoReflect.Descriptor instead.
func (*TenantInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{42}
}

func (x *TenantInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantInfo) GetAdminUserID() int64 {
	if x != nil {
		return x.AdminUserID
	}
	return 0
}

func (x *TenantInfo) GetAdminRoleID() int64 {
	if x != nil {
		return x.AdminRoleID
	}
	return 0
}

func (x *TenantInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *TenantInfo) GetDefaultProjectID() int64 {
	if x != nil {
		return x.DefaultProjectID
	}
	return 0
}

func (x *TenantInfo) GetDefaultAreaID() int64 {
	if x != nil {
		return x.DefaultAreaID
	}
	return 0
}

func (x *TenantInfo) GetBackgroundImg() string {
	if x != nil {
		return x.BackgroundImg
	}
	return ""
}

func (x *TenantInfo) GetIsUpdateBackgroundImg() bool {
	if x != nil {
		return x.IsUpdateBackgroundImg
	}
	return false
}

func (x *TenantInfo) GetBackgroundColour() string {
	if x != nil {
		return x.BackgroundColour
	}
	return ""
}

func (x *TenantInfo) GetBackgroundDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.BackgroundDesc
	}
	return nil
}

func (x *TenantInfo) GetLogoImg() string {
	if x != nil {
		return x.LogoImg
	}
	return ""
}

func (x *TenantInfo) GetIsUpdateLogoImg() bool {
	if x != nil {
		return x.IsUpdateLogoImg
	}
	return false
}

func (x *TenantInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TenantInfo) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *TenantInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *TenantInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TenantInfo) GetFooter() string {
	if x != nil {
		return x.Footer
	}
	return ""
}

func (x *TenantInfo) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

type TenantInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code    string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Status  int64     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AppCode string    `protobuf:"bytes,5,opt,name=appCode,proto3" json:"appCode,omitempty"` //过滤绑定了指定app的租户
}

func (x *TenantInfoIndexReq) Reset() {
	*x = TenantInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoIndexReq) ProtoMessage() {}

func (x *TenantInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoIndexReq.ProtoReflect.Descriptor instead.
func (*TenantInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{43}
}

func (x *TenantInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TenantInfoIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type TenantInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*TenantInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *TenantInfoIndexResp) Reset() {
	*x = TenantInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantInfoIndexResp) ProtoMessage() {}

func (x *TenantInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantInfoIndexResp.ProtoReflect.Descriptor instead.
func (*TenantInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{44}
}

func (x *TenantInfoIndexResp) GetList() []*TenantInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *TenantInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TenantConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int64                                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string                                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TenantCode                string                                   `protobuf:"bytes,3,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`                               //租户编码
	RegisterRoleID            int64                                    `protobuf:"varint,4,opt,name=registerRoleID,proto3" json:"registerRoleID,omitempty"`                      //注册分配的角色id
	WeatherKey                string                                   `protobuf:"bytes,7,opt,name=weatherKey,proto3" json:"weatherKey,omitempty"`                               //和风天气秘钥 参考: https://dev.qweather.com/
	CheckUserDelete           int64                                    `protobuf:"varint,5,opt,name=checkUserDelete,proto3" json:"checkUserDelete,omitempty"`                    //1(禁止项目管理员注销账号) 2(不禁止项目管理员注销账号)
	DeviceLimit               *wrapperspb.Int64Value                   `protobuf:"bytes,8,opt,name=deviceLimit,proto3" json:"deviceLimit,omitempty"`                             //租户下的设备数量限制,0为不限制
	RegisterAutoCreateProject []*TenantConfigRegisterAutoCreateProject `protobuf:"bytes,6,rep,name=registerAutoCreateProject,proto3" json:"registerAutoCreateProject,omitempty"` //注册自动创建项目
	FeedbackNotifyUserIDs     []int64                                  `protobuf:"varint,9,rep,packed,name=feedbackNotifyUserIDs,proto3" json:"feedbackNotifyUserIDs,omitempty"` //产生问题反馈通知的用户ID列表
	OperLogKeepDays           *wrapperspb.Int64Value                   `protobuf:"bytes,10,opt,name=operLogKeepDays,proto3" json:"operLogKeepDays,omitempty"`                    //操作日志保留时间,如果为0则为永久
	LoginLogKeepDays          *wrapperspb.Int64Value                   `protobuf:"bytes,11,opt,name=loginLogKeepDays,proto3" json:"loginLogKeepDays,omitempty"`                  //登录日志保留时间,如果为0则为永久
}

func (x *TenantConfig) Reset() {
	*x = TenantConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantConfig) ProtoMessage() {}

func (x *TenantConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantConfig.ProtoReflect.Descriptor instead.
func (*TenantConfig) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{45}
}

func (x *TenantConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TenantConfig) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *TenantConfig) GetRegisterRoleID() int64 {
	if x != nil {
		return x.RegisterRoleID
	}
	return 0
}

func (x *TenantConfig) GetWeatherKey() string {
	if x != nil {
		return x.WeatherKey
	}
	return ""
}

func (x *TenantConfig) GetCheckUserDelete() int64 {
	if x != nil {
		return x.CheckUserDelete
	}
	return 0
}

func (x *TenantConfig) GetDeviceLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeviceLimit
	}
	return nil
}

func (x *TenantConfig) GetRegisterAutoCreateProject() []*TenantConfigRegisterAutoCreateProject {
	if x != nil {
		return x.RegisterAutoCreateProject
	}
	return nil
}

func (x *TenantConfig) GetFeedbackNotifyUserIDs() []int64 {
	if x != nil {
		return x.FeedbackNotifyUserIDs
	}
	return nil
}

func (x *TenantConfig) GetOperLogKeepDays() *wrapperspb.Int64Value {
	if x != nil {
		return x.OperLogKeepDays
	}
	return nil
}

func (x *TenantConfig) GetLoginLogKeepDays() *wrapperspb.Int64Value {
	if x != nil {
		return x.LoginLogKeepDays
	}
	return nil
}

type TenantConfigRegisterAutoCreateProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                                 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	ProjectName  string                                `protobuf:"bytes,1,opt,name=projectName,proto3" json:"projectName,omitempty"`
	IsSysCreated int64                                 `protobuf:"varint,2,opt,name=isSysCreated,proto3" json:"isSysCreated,omitempty"` //是否是系统创建的,系统创建的只有管理员可以删除
	Areas        []*TenantConfigRegisterAutoCreateArea `protobuf:"bytes,3,rep,name=areas,proto3" json:"areas,omitempty"`
}

func (x *TenantConfigRegisterAutoCreateProject) Reset() {
	*x = TenantConfigRegisterAutoCreateProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantConfigRegisterAutoCreateProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantConfigRegisterAutoCreateProject) ProtoMessage() {}

func (x *TenantConfigRegisterAutoCreateProject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantConfigRegisterAutoCreateProject.ProtoReflect.Descriptor instead.
func (*TenantConfigRegisterAutoCreateProject) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{46}
}

func (x *TenantConfigRegisterAutoCreateProject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantConfigRegisterAutoCreateProject) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *TenantConfigRegisterAutoCreateProject) GetIsSysCreated() int64 {
	if x != nil {
		return x.IsSysCreated
	}
	return 0
}

func (x *TenantConfigRegisterAutoCreateProject) GetAreas() []*TenantConfigRegisterAutoCreateArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

type TenantConfigRegisterAutoCreateArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	AreaName        string `protobuf:"bytes,1,opt,name=areaName,proto3" json:"areaName,omitempty"`
	AreaImg         string `protobuf:"bytes,2,opt,name=areaImg,proto3" json:"areaImg,omitempty"`
	IsSysCreated    int64  `protobuf:"varint,3,opt,name=isSysCreated,proto3" json:"isSysCreated,omitempty"`       //是否是系统创建的,系统创建的只有管理员可以删除
	IsUpdateAreaImg bool   `protobuf:"varint,4,opt,name=isUpdateAreaImg,proto3" json:"isUpdateAreaImg,omitempty"` //是否更新区域图片
}

func (x *TenantConfigRegisterAutoCreateArea) Reset() {
	*x = TenantConfigRegisterAutoCreateArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantConfigRegisterAutoCreateArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantConfigRegisterAutoCreateArea) ProtoMessage() {}

func (x *TenantConfigRegisterAutoCreateArea) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantConfigRegisterAutoCreateArea.ProtoReflect.Descriptor instead.
func (*TenantConfigRegisterAutoCreateArea) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{47}
}

func (x *TenantConfigRegisterAutoCreateArea) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantConfigRegisterAutoCreateArea) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *TenantConfigRegisterAutoCreateArea) GetAreaImg() string {
	if x != nil {
		return x.AreaImg
	}
	return ""
}

func (x *TenantConfigRegisterAutoCreateArea) GetIsSysCreated() int64 {
	if x != nil {
		return x.IsSysCreated
	}
	return 0
}

func (x *TenantConfigRegisterAutoCreateArea) GetIsUpdateAreaImg() bool {
	if x != nil {
		return x.IsUpdateAreaImg
	}
	return false
}

type TenantAccessMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AccessCodes []string `protobuf:"bytes,4,rep,name=accessCodes,proto3" json:"accessCodes,omitempty"`
}

func (x *TenantAccessMultiSaveReq) Reset() {
	*x = TenantAccessMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAccessMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAccessMultiSaveReq) ProtoMessage() {}

func (x *TenantAccessMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAccessMultiSaveReq.ProtoReflect.Descriptor instead.
func (*TenantAccessMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{48}
}

func (x *TenantAccessMultiSaveReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAccessMultiSaveReq) GetAccessCodes() []string {
	if x != nil {
		return x.AccessCodes
	}
	return nil
}

type TenantAccessIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *TenantAccessIndexReq) Reset() {
	*x = TenantAccessIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAccessIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAccessIndexReq) ProtoMessage() {}

func (x *TenantAccessIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAccessIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAccessIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{49}
}

func (x *TenantAccessIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TenantAccessIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessCodes []string `protobuf:"bytes,1,rep,name=accessCodes,proto3" json:"accessCodes,omitempty"`
}

func (x *TenantAccessIndexResp) Reset() {
	*x = TenantAccessIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAccessIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAccessIndexResp) ProtoMessage() {}

func (x *TenantAccessIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAccessIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAccessIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{50}
}

func (x *TenantAccessIndexResp) GetAccessCodes() []string {
	if x != nil {
		return x.AccessCodes
	}
	return nil
}

type TenantAppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64              `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Code           string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode        string             `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Modules        []*TenantAppModule `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`                //模块列表
	DingMini       *ThirdAppConfig    `protobuf:"bytes,4,opt,name=dingMini,proto3" json:"dingMini,omitempty"`              //钉钉小程序
	WxMini         *ThirdAppConfig    `protobuf:"bytes,5,opt,name=wxMini,proto3" json:"wxMini,omitempty"`                  //微信小程序
	WxOpen         *ThirdAppConfig    `protobuf:"bytes,7,opt,name=wxOpen,proto3" json:"wxOpen,omitempty"`                  //微信开放 web app需要填写
	Android        *ThirdApp          `protobuf:"bytes,10,opt,name=android,proto3" json:"android,omitempty"`               //安卓应用
	LoginTypes     []string           `protobuf:"bytes,8,rep,name=LoginTypes,proto3" json:"LoginTypes,omitempty"`          //支持的登录类型(不填支持全部登录方式):  	 "email":邮箱 "phone":手机号  "wxMiniP":微信小程序  "wxOpen": 微信开放平台登录   "dingApp":钉钉应用(包含小程序,h5等方式)  "pwd":账号密码注册
	IsAutoRegister int64              `protobuf:"varint,9,opt,name=isAutoRegister,proto3" json:"isAutoRegister,omitempty"` //登录未注册是否自动注册
}

func (x *TenantAppInfo) Reset() {
	*x = TenantAppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppInfo) ProtoMessage() {}

func (x *TenantAppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppInfo.ProtoReflect.Descriptor instead.
func (*TenantAppInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{51}
}

func (x *TenantAppInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantAppInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppInfo) GetModules() []*TenantAppModule {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *TenantAppInfo) GetDingMini() *ThirdAppConfig {
	if x != nil {
		return x.DingMini
	}
	return nil
}

func (x *TenantAppInfo) GetWxMini() *ThirdAppConfig {
	if x != nil {
		return x.WxMini
	}
	return nil
}

func (x *TenantAppInfo) GetWxOpen() *ThirdAppConfig {
	if x != nil {
		return x.WxOpen
	}
	return nil
}

func (x *TenantAppInfo) GetAndroid() *ThirdApp {
	if x != nil {
		return x.Android
	}
	return nil
}

func (x *TenantAppInfo) GetLoginTypes() []string {
	if x != nil {
		return x.LoginTypes
	}
	return nil
}

func (x *TenantAppInfo) GetIsAutoRegister() int64 {
	if x != nil {
		return x.IsAutoRegister
	}
	return 0
}

type TenantAppWithIDOrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TenantAppWithIDOrCode) Reset() {
	*x = TenantAppWithIDOrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppWithIDOrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppWithIDOrCode) ProtoMessage() {}

func (x *TenantAppWithIDOrCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppWithIDOrCode.ProtoReflect.Descriptor instead.
func (*TenantAppWithIDOrCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{52}
}

func (x *TenantAppWithIDOrCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppWithIDOrCode) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppWithIDOrCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TenantAppModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	MenuIDs []int64 `protobuf:"varint,2,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *TenantAppModule) Reset() {
	*x = TenantAppModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppModule) ProtoMessage() {}

func (x *TenantAppModule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppModule.ProtoReflect.Descriptor instead.
func (*TenantAppModule) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{53}
}

func (x *TenantAppModule) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppModule) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type TenantAppIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code     string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCodes []string  `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
	Type     string    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`       //应用类型 web:web页面  app:应用  mini:小程序
	SubType  string    `protobuf:"bytes,5,opt,name=subType,proto3" json:"subType,omitempty"` //子类型  wx:微信小程序  dingTalk:钉钉小程序
	AppID    string    `protobuf:"bytes,6,opt,name=appID,proto3" json:"appID,omitempty"`
}

func (x *TenantAppIndexReq) Reset() {
	*x = TenantAppIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppIndexReq) ProtoMessage() {}

func (x *TenantAppIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAppIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{54}
}

func (x *TenantAppIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantAppIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppIndexReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

func (x *TenantAppIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TenantAppIndexReq) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *TenantAppIndexReq) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type TenantAppIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*TenantAppInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //app列表数据
}

func (x *TenantAppIndexResp) Reset() {
	*x = TenantAppIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppIndexResp) ProtoMessage() {}

func (x *TenantAppIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAppIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{55}
}

func (x *TenantAppIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TenantAppIndexResp) GetList() []*TenantAppInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *TenantAppMultiUpdateReq) Reset() {
	*x = TenantAppMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMultiUpdateReq) ProtoMessage() {}

func (x *TenantAppMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*TenantAppMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{56}
}

func (x *TenantAppMultiUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMultiUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type TenantModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code        string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode     string    `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCodes []string  `protobuf:"bytes,4,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *TenantModuleIndexReq) Reset() {
	*x = TenantModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleIndexReq) ProtoMessage() {}

func (x *TenantModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleIndexReq.ProtoReflect.Descriptor instead.
func (*TenantModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{57}
}

func (x *TenantModuleIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantModuleIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleIndexReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type TenantModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ModuleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TenantModuleIndexResp) Reset() {
	*x = TenantModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleIndexResp) ProtoMessage() {}

func (x *TenantModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleIndexResp.ProtoReflect.Descriptor instead.
func (*TenantModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{58}
}

func (x *TenantModuleIndexResp) GetList() []*ModuleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMenuIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Code       string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string    `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string    `protobuf:"bytes,4,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	IsRetTree  bool      `protobuf:"varint,5,opt,name=isRetTree,proto3" json:"isRetTree,omitempty"`
	MenuIDs    []int64   `protobuf:"varint,6,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
	IsCommon   int64     `protobuf:"varint,7,opt,name=isCommon,proto3" json:"isCommon,omitempty"`
}

func (x *TenantAppMenuIndexReq) Reset() {
	*x = TenantAppMenuIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenuIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenuIndexReq) ProtoMessage() {}

func (x *TenantAppMenuIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenuIndexReq.ProtoReflect.Descriptor instead.
func (*TenantAppMenuIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{59}
}

func (x *TenantAppMenuIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *TenantAppMenuIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantAppMenuIndexReq) GetIsRetTree() bool {
	if x != nil {
		return x.IsRetTree
	}
	return false
}

func (x *TenantAppMenuIndexReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

func (x *TenantAppMenuIndexReq) GetIsCommon() int64 {
	if x != nil {
		return x.IsCommon
	}
	return 0
}

type TenantAppMenuIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*TenantAppMenu `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TenantAppMenuIndexResp) Reset() {
	*x = TenantAppMenuIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenuIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenuIndexResp) ProtoMessage() {}

func (x *TenantAppMenuIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenuIndexResp.ProtoReflect.Descriptor instead.
func (*TenantAppMenuIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{60}
}

func (x *TenantAppMenuIndexResp) GetList() []*TenantAppMenu {
	if x != nil {
		return x.List
	}
	return nil
}

type TenantAppMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateID int64            `protobuf:"varint,1,opt,name=templateID,proto3" json:"templateID,omitempty"`
	Code       string           `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string           `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Info       *MenuInfo        `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Children   []*TenantAppMenu `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *TenantAppMenu) Reset() {
	*x = TenantAppMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantAppMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantAppMenu) ProtoMessage() {}

func (x *TenantAppMenu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantAppMenu.ProtoReflect.Descriptor instead.
func (*TenantAppMenu) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{61}
}

func (x *TenantAppMenu) GetTemplateID() int64 {
	if x != nil {
		return x.TemplateID
	}
	return 0
}

func (x *TenantAppMenu) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantAppMenu) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantAppMenu) GetInfo() *MenuInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TenantAppMenu) GetChildren() []*TenantAppMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type TenantModuleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	MenuIDs    []int64 `protobuf:"varint,4,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *TenantModuleCreateReq) Reset() {
	*x = TenantModuleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleCreateReq) ProtoMessage() {}

func (x *TenantModuleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleCreateReq.ProtoReflect.Descriptor instead.
func (*TenantModuleCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{62}
}

func (x *TenantModuleCreateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleCreateReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantModuleCreateReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type TenantModuleWithIDOrCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	AppCode    string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	Id         int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TenantModuleWithIDOrCode) Reset() {
	*x = TenantModuleWithIDOrCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModuleWithIDOrCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModuleWithIDOrCode) ProtoMessage() {}

func (x *TenantModuleWithIDOrCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModuleWithIDOrCode.ProtoReflect.Descriptor instead.
func (*TenantModuleWithIDOrCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{63}
}

func (x *TenantModuleWithIDOrCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *TenantModuleWithIDOrCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` //经度
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   //纬度
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{64}
}

func (x *Point) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Point) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{65}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 排序信息
	Orders []*PageInfo_OrderBy `protobuf:"bytes,3,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{66}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageInfo) GetOrders() []*PageInfo_OrderBy {
	if x != nil {
		return x.Orders
	}
	return nil
}

type CompareString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmpType string `protobuf:"bytes,1,opt,name=CmpType,proto3" json:"CmpType,omitempty"` //"=":相等 "!=":不相等 ">":大于">=":大于等于"<":小于"<=":小于等于 "like":模糊查询
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`     //值
}

func (x *CompareString) Reset() {
	*x = CompareString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareString) ProtoMessage() {}

func (x *CompareString) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareString.ProtoReflect.Descriptor instead.
func (*CompareString) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{67}
}

func (x *CompareString) GetCmpType() string {
	if x != nil {
		return x.CmpType
	}
	return ""
}

func (x *CompareString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CompareInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmpType string `protobuf:"bytes,1,opt,name=CmpType,proto3" json:"CmpType,omitempty"` //"=":相等 "!=":不相等 ">":大于">=":大于等于"<":小于"<=":小于等于 "like":模糊查询
	Value   int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`    //值
}

func (x *CompareInt64) Reset() {
	*x = CompareInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareInt64) ProtoMessage() {}

func (x *CompareInt64) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareInt64.ProtoReflect.Descriptor instead.
func (*CompareInt64) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{68}
}

func (x *CompareInt64) GetCmpType() string {
	if x != nil {
		return x.CmpType
	}
	return ""
}

func (x *CompareInt64) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WithID) Reset() {
	*x = WithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithID) ProtoMessage() {}

func (x *WithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithID.ProtoReflect.Descriptor instead.
func (*WithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{69}
}

func (x *WithID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WithIDCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WithIDCode) Reset() {
	*x = WithIDCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithIDCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithIDCode) ProtoMessage() {}

func (x *WithIDCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithIDCode.ProtoReflect.Descriptor instead.
func (*WithIDCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{70}
}

func (x *WithIDCode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithIDCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WithCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *WithCode) Reset() {
	*x = WithCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithCode) ProtoMessage() {}

func (x *WithCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithCode.ProtoReflect.Descriptor instead.
func (*WithCode) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{71}
}

func (x *WithCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type WithAppCodeID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode string `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` //租户code
}

func (x *WithAppCodeID) Reset() {
	*x = WithAppCodeID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithAppCodeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithAppCodeID) ProtoMessage() {}

func (x *WithAppCodeID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithAppCodeID.ProtoReflect.Descriptor instead.
func (*WithAppCodeID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{72}
}

func (x *WithAppCodeID) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithAppCodeID) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *WithAppCodeID) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ProjectWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID    int64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"`       //项目id（只读）
	WithTopAreas bool  `protobuf:"varint,5,opt,name=withTopAreas,proto3" json:"withTopAreas,omitempty"` //同时返回顶层的区域列表
}

func (x *ProjectWithID) Reset() {
	*x = ProjectWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWithID) ProtoMessage() {}

func (x *ProjectWithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWithID.ProtoReflect.Descriptor instead.
func (*ProjectWithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{73}
}

func (x *ProjectWithID) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *ProjectWithID) GetWithTopAreas() bool {
	if x != nil {
		return x.WithTopAreas
	}
	return false
}

type ProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantCode  string `protobuf:"bytes,20,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`   //租户号
	CreatedTime int64  `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间（只读）
	ProjectID   int64  `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`     //项目id（只读）
	ProjectName string `protobuf:"bytes,3,opt,name=projectName,proto3" json:"projectName,omitempty"`  //项目名称（读写）
	AdminUserID int64  `protobuf:"varint,5,opt,name=adminUserID,proto3" json:"adminUserID,omitempty"` //管理员
	// google.protobuf.StringValue region = 6; //项目省市区县（读写）
	Position           *Point                  `protobuf:"bytes,6,opt,name=Position,proto3" json:"Position,omitempty"`                       //项目区域定位
	Area               *wrapperspb.FloatValue  `protobuf:"bytes,7,opt,name=area,proto3" json:"area,omitempty"`                               //建筑面积(单位平米)
	Ppsm               int64                   `protobuf:"varint,10,opt,name=ppsm,proto3" json:"ppsm,omitempty"`                             //w.h/m2 每平方米功耗 建筑定额能耗 Power per square meter
	Desc               *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`                               //项目备注（读写）
	Address            *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`                        //项目详细地址
	DeviceCount        *wrapperspb.Int64Value  `protobuf:"bytes,12,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`                //设备统计
	AreaCount          int64                   `protobuf:"varint,9,opt,name=areaCount,proto3" json:"areaCount,omitempty"`                    //项目下的区域统计(只读)
	UserCount          int64                   `protobuf:"varint,17,opt,name=userCount,proto3" json:"userCount,omitempty"`                   //项目下用户统计
	ProjectImg         string                  `protobuf:"bytes,15,opt,name=projectImg,proto3" json:"projectImg,omitempty"`                  //项目图片
	IsUpdateProjectImg bool                    `protobuf:"varint,16,opt,name=isUpdateProjectImg,proto3" json:"isUpdateProjectImg,omitempty"` //是否更新项目的图片
	IsSysCreated       int64                   `protobuf:"varint,18,opt,name=isSysCreated,proto3" json:"isSysCreated,omitempty"`             //是否是系统创建的,系统创建的只有管理员可以删除
	Areas              []*AreaInfo             `protobuf:"bytes,19,rep,name=areas,proto3" json:"areas,omitempty"`                            //
	Tags               map[string]string       `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{74}
}

func (x *ProjectInfo) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *ProjectInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ProjectInfo) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *ProjectInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectInfo) GetAdminUserID() int64 {
	if x != nil {
		return x.AdminUserID
	}
	return 0
}

func (x *ProjectInfo) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ProjectInfo) GetArea() *wrapperspb.FloatValue {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *ProjectInfo) GetPpsm() int64 {
	if x != nil {
		return x.Ppsm
	}
	return 0
}

func (x *ProjectInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ProjectInfo) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *ProjectInfo) GetDeviceCount() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeviceCount
	}
	return nil
}

func (x *ProjectInfo) GetAreaCount() int64 {
	if x != nil {
		return x.AreaCount
	}
	return 0
}

func (x *ProjectInfo) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *ProjectInfo) GetProjectImg() string {
	if x != nil {
		return x.ProjectImg
	}
	return ""
}

func (x *ProjectInfo) GetIsUpdateProjectImg() bool {
	if x != nil {
		return x.IsUpdateProjectImg
	}
	return false
}

func (x *ProjectInfo) GetIsSysCreated() int64 {
	if x != nil {
		return x.IsSysCreated
	}
	return 0
}

func (x *ProjectInfo) GetAreas() []*AreaInfo {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *ProjectInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProjectProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Params string `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *ProjectProfile) Reset() {
	*x = ProjectProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectProfile) ProtoMessage() {}

func (x *ProjectProfile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectProfile.ProtoReflect.Descriptor instead.
func (*ProjectProfile) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{75}
}

func (x *ProjectProfile) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectProfile) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type ProjectProfileReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ProjectProfileReadReq) Reset() {
	*x = ProjectProfileReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectProfileReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectProfileReadReq) ProtoMessage() {}

func (x *ProjectProfileReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectProfileReadReq.ProtoReflect.Descriptor instead.
func (*ProjectProfileReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{76}
}

func (x *ProjectProfileReadReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ProjectProfileIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *ProjectProfileIndexReq) Reset() {
	*x = ProjectProfileIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectProfileIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectProfileIndexReq) ProtoMessage() {}

func (x *ProjectProfileIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectProfileIndexReq.ProtoReflect.Descriptor instead.
func (*ProjectProfileIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{77}
}

func (x *ProjectProfileIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type ProjectProfileIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*ProjectProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *ProjectProfileIndexResp) Reset() {
	*x = ProjectProfileIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectProfileIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectProfileIndexResp) ProtoMessage() {}

func (x *ProjectProfileIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectProfileIndexResp.ProtoReflect.Descriptor instead.
func (*ProjectProfileIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{78}
}

func (x *ProjectProfileIndexResp) GetProfiles() []*ProjectProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type ProjectInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                     //进行数据分页（不传默认2000相当于全部）
	ProjectName  string    `protobuf:"bytes,2,opt,name=projectName,proto3" json:"projectName,omitempty"`       //过滤条件: 项目名称
	IsGetAll     bool      `protobuf:"varint,4,opt,name=isGetAll,proto3" json:"isGetAll,omitempty"`            //是否获取所有(管理员获取所有)
	ProjectIDs   []int64   `protobuf:"varint,3,rep,packed,name=projectIDs,proto3" json:"projectIDs,omitempty"` //过滤条件: 过滤项目id列表
	WithTopAreas bool      `protobuf:"varint,5,opt,name=withTopAreas,proto3" json:"withTopAreas,omitempty"`    //同时返回顶层的区域列表
	TenantCode   string    `protobuf:"bytes,6,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`         //指定租户(只有default租户下的管理员才有效)
}

func (x *ProjectInfoIndexReq) Reset() {
	*x = ProjectInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfoIndexReq) ProtoMessage() {}

func (x *ProjectInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ProjectInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{79}
}

func (x *ProjectInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ProjectInfoIndexReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectInfoIndexReq) GetIsGetAll() bool {
	if x != nil {
		return x.IsGetAll
	}
	return false
}

func (x *ProjectInfoIndexReq) GetProjectIDs() []int64 {
	if x != nil {
		return x.ProjectIDs
	}
	return nil
}

func (x *ProjectInfoIndexReq) GetWithTopAreas() bool {
	if x != nil {
		return x.WithTopAreas
	}
	return false
}

func (x *ProjectInfoIndexReq) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

type ProjectInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*ProjectInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //项目列表
}

func (x *ProjectInfoIndexResp) Reset() {
	*x = ProjectInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfoIndexResp) ProtoMessage() {}

func (x *ProjectInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ProjectInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{80}
}

func (x *ProjectInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProjectInfoIndexResp) GetList() []*ProjectInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AreaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantCode         string                  `protobuf:"bytes,20,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`     //租户号
	CreatedTime        int64                   `protobuf:"varint,1,opt,name=createdTime,proto3" json:"createdTime,omitempty"`   //创建时间（只读）
	AreaID             int64                   `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"`             //项目区域id（只读）
	ParentAreaID       int64                   `protobuf:"varint,3,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"` //上级项目区域id（只读）
	ProjectID          int64                   `protobuf:"varint,4,opt,name=projectID,proto3" json:"projectID,omitempty"`       //项目id（只读）
	AreaName           string                  `protobuf:"bytes,5,opt,name=areaName,proto3" json:"areaName,omitempty"`          //项目区域名称（读写）
	Position           *Point                  `protobuf:"bytes,6,opt,name=Position,proto3" json:"Position,omitempty"`          //项目区域定位，默认百度坐标系（读写）
	Desc               *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`                  //项目区域备注（读写）
	Children           []*AreaInfo             `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`          //下级项目区域列表（只读）
	AreaIDPath         string                  `protobuf:"bytes,9,opt,name=areaIDPath,proto3" json:"areaIDPath,omitempty"`
	AreaNamePath       string                  `protobuf:"bytes,10,opt,name=areaNamePath,proto3" json:"areaNamePath,omitempty"`
	LowerLevelCount    int64                   `protobuf:"varint,11,opt,name=lowerLevelCount,proto3" json:"lowerLevelCount,omitempty"`        //下级区域的数量
	ChildrenAreaIDs    []int64                 `protobuf:"varint,12,rep,packed,name=childrenAreaIDs,proto3" json:"childrenAreaIDs,omitempty"` //所属的子区域id列表
	IsLeaf             int64                   `protobuf:"varint,13,opt,name=isLeaf,proto3" json:"isLeaf,omitempty"`                          //是否是叶子节点
	UseBy              string                  `protobuf:"bytes,14,opt,name=useBy,proto3" json:"useBy,omitempty"`                             //用途
	AreaImg            string                  `protobuf:"bytes,15,opt,name=areaImg,proto3" json:"areaImg,omitempty"`                         //区域图片
	IsUpdateAreaImg    bool                    `protobuf:"varint,16,opt,name=isUpdateAreaImg,proto3" json:"isUpdateAreaImg,omitempty"`        //是否更新区域的图片
	DeviceCount        *wrapperspb.Int64Value  `protobuf:"bytes,17,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`                 //绑定该区域的设备统计
	GroupCount         *wrapperspb.Int64Value  `protobuf:"bytes,19,opt,name=groupCount,proto3" json:"groupCount,omitempty"`                   //绑定该区域的分组统计
	IsSysCreated       int64                   `protobuf:"varint,18,opt,name=isSysCreated,proto3" json:"isSysCreated,omitempty"`              //是否是系统创建的,系统创建的只有管理员可以删除
	ConfigFile         string                  `protobuf:"bytes,21,opt,name=configFile,proto3" json:"configFile,omitempty"`                   //区域配置文件
	IsUpdateConfigFile bool                    `protobuf:"varint,22,opt,name=isUpdateConfigFile,proto3" json:"isUpdateConfigFile,omitempty"`
	Tags               map[string]string       `protobuf:"bytes,23,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AreaInfo) Reset() {
	*x = AreaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfo) ProtoMessage() {}

func (x *AreaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfo.ProtoReflect.Descriptor instead.
func (*AreaInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{81}
}

func (x *AreaInfo) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *AreaInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AreaInfo) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaInfo) GetParentAreaID() int64 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

func (x *AreaInfo) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfo) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *AreaInfo) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AreaInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *AreaInfo) GetChildren() []*AreaInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *AreaInfo) GetAreaIDPath() string {
	if x != nil {
		return x.AreaIDPath
	}
	return ""
}

func (x *AreaInfo) GetAreaNamePath() string {
	if x != nil {
		return x.AreaNamePath
	}
	return ""
}

func (x *AreaInfo) GetLowerLevelCount() int64 {
	if x != nil {
		return x.LowerLevelCount
	}
	return 0
}

func (x *AreaInfo) GetChildrenAreaIDs() []int64 {
	if x != nil {
		return x.ChildrenAreaIDs
	}
	return nil
}

func (x *AreaInfo) GetIsLeaf() int64 {
	if x != nil {
		return x.IsLeaf
	}
	return 0
}

func (x *AreaInfo) GetUseBy() string {
	if x != nil {
		return x.UseBy
	}
	return ""
}

func (x *AreaInfo) GetAreaImg() string {
	if x != nil {
		return x.AreaImg
	}
	return ""
}

func (x *AreaInfo) GetIsUpdateAreaImg() bool {
	if x != nil {
		return x.IsUpdateAreaImg
	}
	return false
}

func (x *AreaInfo) GetDeviceCount() *wrapperspb.Int64Value {
	if x != nil {
		return x.DeviceCount
	}
	return nil
}

func (x *AreaInfo) GetGroupCount() *wrapperspb.Int64Value {
	if x != nil {
		return x.GroupCount
	}
	return nil
}

func (x *AreaInfo) GetIsSysCreated() int64 {
	if x != nil {
		return x.IsSysCreated
	}
	return 0
}

func (x *AreaInfo) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *AreaInfo) GetIsUpdateConfigFile() bool {
	if x != nil {
		return x.IsUpdateConfigFile
	}
	return false
}

func (x *AreaInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AreaWithID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64 `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目区域id
}

func (x *AreaWithID) Reset() {
	*x = AreaWithID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaWithID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaWithID) ProtoMessage() {}

func (x *AreaWithID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaWithID.ProtoReflect.Descriptor instead.
func (*AreaWithID) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{82}
}

func (x *AreaWithID) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

type AreaProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64  `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目区域id
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Params string `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *AreaProfile) Reset() {
	*x = AreaProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaProfile) ProtoMessage() {}

func (x *AreaProfile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaProfile.ProtoReflect.Descriptor instead.
func (*AreaProfile) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{83}
}

func (x *AreaProfile) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaProfile) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AreaProfile) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

type AreaProfileReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64  `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目区域id
	Code   string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AreaProfileReadReq) Reset() {
	*x = AreaProfileReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaProfileReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaProfileReadReq) ProtoMessage() {}

func (x *AreaProfileReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaProfileReadReq.ProtoReflect.Descriptor instead.
func (*AreaProfileReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{84}
}

func (x *AreaProfileReadReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaProfileReadReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AreaProfileIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID int64    `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"` //项目区域id
	Codes  []string `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *AreaProfileIndexReq) Reset() {
	*x = AreaProfileIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaProfileIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaProfileIndexReq) ProtoMessage() {}

func (x *AreaProfileIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaProfileIndexReq.ProtoReflect.Descriptor instead.
func (*AreaProfileIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{85}
}

func (x *AreaProfileIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaProfileIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type AreaProfileIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*AreaProfile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *AreaProfileIndexResp) Reset() {
	*x = AreaProfileIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaProfileIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaProfileIndexResp) ProtoMessage() {}

func (x *AreaProfileIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaProfileIndexResp.ProtoReflect.Descriptor instead.
func (*AreaProfileIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{86}
}

func (x *AreaProfileIndexResp) GetProfiles() []*AreaProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type AreaInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID    int64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"`       //项目ids
	AreaID       int64 `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"`             //项目区域id
	WithChildren bool  `protobuf:"varint,3,opt,name=withChildren,proto3" json:"withChildren,omitempty"` //是否返回子节点
}

func (x *AreaInfoReadReq) Reset() {
	*x = AreaInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoReadReq) ProtoMessage() {}

func (x *AreaInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoReadReq.ProtoReflect.Descriptor instead.
func (*AreaInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{87}
}

func (x *AreaInfoReadReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfoReadReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *AreaInfoReadReq) GetWithChildren() bool {
	if x != nil {
		return x.WithChildren
	}
	return false
}

type AreaInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          *PageInfo     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //进行数据分页（不传默认2000相当于全部）
	ProjectID     int64         `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目ids
	ParentAreaID  int64         `protobuf:"varint,4,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
	AreaIDs       []int64       `protobuf:"varint,5,rep,packed,name=areaIDs,proto3" json:"areaIDs,omitempty"`      //区域ids
	IsRetTopLevel bool          `protobuf:"varint,6,opt,name=isRetTopLevel,proto3" json:"isRetTopLevel,omitempty"` //如果该参数为true则返回除了root节点的有权限的最高层的区域列表
	IsLeaf        int64         `protobuf:"varint,7,opt,name=isLeaf,proto3" json:"isLeaf,omitempty"`               //是否是叶子节点
	DeviceCount   *CompareInt64 `protobuf:"bytes,8,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`
	GroupCount    *CompareInt64 `protobuf:"bytes,9,opt,name=groupCount,proto3" json:"groupCount,omitempty"`
}

func (x *AreaInfoIndexReq) Reset() {
	*x = AreaInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoIndexReq) ProtoMessage() {}

func (x *AreaInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AreaInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{88}
}

func (x *AreaInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AreaInfoIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *AreaInfoIndexReq) GetParentAreaID() int64 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

func (x *AreaInfoIndexReq) GetAreaIDs() []int64 {
	if x != nil {
		return x.AreaIDs
	}
	return nil
}

func (x *AreaInfoIndexReq) GetIsRetTopLevel() bool {
	if x != nil {
		return x.IsRetTopLevel
	}
	return false
}

func (x *AreaInfoIndexReq) GetIsLeaf() int64 {
	if x != nil {
		return x.IsLeaf
	}
	return 0
}

func (x *AreaInfoIndexReq) GetDeviceCount() *CompareInt64 {
	if x != nil {
		return x.DeviceCount
	}
	return nil
}

func (x *AreaInfoIndexReq) GetGroupCount() *CompareInt64 {
	if x != nil {
		return x.GroupCount
	}
	return nil
}

type AreaInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*AreaInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //项目区域列表
}

func (x *AreaInfoIndexResp) Reset() {
	*x = AreaInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfoIndexResp) ProtoMessage() {}

func (x *AreaInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AreaInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{89}
}

func (x *AreaInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AreaInfoIndexResp) GetList() []*AreaInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// ----------------------------------------------------------------------------------------------
type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`       //服务编码
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`       //服务名
	Version     string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"` //服务版本
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedTime int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"` //创建时间
	UpdatedTime int64  `protobuf:"varint,6,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"` //更新时间
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{90}
}

func (x *ServiceInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ServiceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ServiceInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ServiceInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type SlotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code     string            `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                                                                               // 主编码
	SubCode  string            `protobuf:"bytes,3,opt,name=subCode,proto3" json:"subCode,omitempty"`                                                                                         // 子编码
	SlotCode string            `protobuf:"bytes,4,opt,name=slotCode,proto3" json:"slotCode,omitempty"`                                                                                       //slot的编码
	Method   string            `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                                                                                           // 请求方式 GET  POST
	Uri      string            `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"`                                                                                                 // 参考: /api/v1/system/user/self/captcha?fwefwf=gwgweg&wefaef=gwegwe
	Hosts    []string          `protobuf:"bytes,7,rep,name=hosts,proto3" json:"hosts,omitempty"`                                                                                             //访问的地址 host or host:port
	Body     string            `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`                                                                                               // body 参数模板
	Handler  map[string]string `protobuf:"bytes,9,rep,name=handler,proto3" json:"handler,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //http头
	AuthType string            `protobuf:"bytes,10,opt,name=authType,proto3" json:"authType,omitempty"`                                                                                      //鉴权类型 core
	Desc     string            `protobuf:"bytes,11,opt,name=desc,proto3" json:"desc,omitempty"`                                                                                              //描述类型
}

func (x *SlotInfo) Reset() {
	*x = SlotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfo) ProtoMessage() {}

func (x *SlotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfo.ProtoReflect.Descriptor instead.
func (*SlotInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{91}
}

func (x *SlotInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SlotInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SlotInfo) GetSubCode() string {
	if x != nil {
		return x.SubCode
	}
	return ""
}

func (x *SlotInfo) GetSlotCode() string {
	if x != nil {
		return x.SlotCode
	}
	return ""
}

func (x *SlotInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SlotInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *SlotInfo) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *SlotInfo) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SlotInfo) GetHandler() map[string]string {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *SlotInfo) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *SlotInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type WeatherAir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aqi      string `protobuf:"bytes,1,opt,name=aqi,proto3" json:"aqi,omitempty"`
	Level    string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Primary  string `protobuf:"bytes,4,opt,name=primary,proto3" json:"primary,omitempty"`
	Pm10     string `protobuf:"bytes,5,opt,name=pm10,proto3" json:"pm10,omitempty"`
	Pm2P5    string `protobuf:"bytes,6,opt,name=pm2p5,proto3" json:"pm2p5,omitempty"`
	No2      string `protobuf:"bytes,7,opt,name=no2,proto3" json:"no2,omitempty"`
	So2      string `protobuf:"bytes,8,opt,name=so2,proto3" json:"so2,omitempty"`
	Co       string `protobuf:"bytes,9,opt,name=co,proto3" json:"co,omitempty"`
	O3       string `protobuf:"bytes,10,opt,name=o3,proto3" json:"o3,omitempty"`
}

func (x *WeatherAir) Reset() {
	*x = WeatherAir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherAir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherAir) ProtoMessage() {}

func (x *WeatherAir) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherAir.ProtoReflect.Descriptor instead.
func (*WeatherAir) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{92}
}

func (x *WeatherAir) GetAqi() string {
	if x != nil {
		return x.Aqi
	}
	return ""
}

func (x *WeatherAir) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *WeatherAir) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *WeatherAir) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *WeatherAir) GetPm10() string {
	if x != nil {
		return x.Pm10
	}
	return ""
}

func (x *WeatherAir) GetPm2P5() string {
	if x != nil {
		return x.Pm2P5
	}
	return ""
}

func (x *WeatherAir) GetNo2() string {
	if x != nil {
		return x.No2
	}
	return ""
}

func (x *WeatherAir) GetSo2() string {
	if x != nil {
		return x.So2
	}
	return ""
}

func (x *WeatherAir) GetCo() string {
	if x != nil {
		return x.Co
	}
	return ""
}

func (x *WeatherAir) GetO3() string {
	if x != nil {
		return x.O3
	}
	return ""
}

type WeatherReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position  *Point `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	ProjectID int64  `protobuf:"varint,2,opt,name=ProjectID,proto3" json:"ProjectID,omitempty"`
}

func (x *WeatherReadReq) Reset() {
	*x = WeatherReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherReadReq) ProtoMessage() {}

func (x *WeatherReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherReadReq.ProtoReflect.Descriptor instead.
func (*WeatherReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{93}
}

func (x *WeatherReadReq) GetPosition() *Point {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *WeatherReadReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type WeatherReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObsTime   string      `protobuf:"bytes,1,opt,name=obsTime,proto3" json:"obsTime,omitempty"`
	Temp      string      `protobuf:"bytes,2,opt,name=temp,proto3" json:"temp,omitempty"`
	FeelsLike string      `protobuf:"bytes,3,opt,name=feelsLike,proto3" json:"feelsLike,omitempty"`
	Icon      string      `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Text      string      `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	Wind360   string      `protobuf:"bytes,6,opt,name=wind360,proto3" json:"wind360,omitempty"`
	WindDir   string      `protobuf:"bytes,7,opt,name=windDir,proto3" json:"windDir,omitempty"`
	WindScale string      `protobuf:"bytes,8,opt,name=windScale,proto3" json:"windScale,omitempty"`
	WindSpeed string      `protobuf:"bytes,9,opt,name=windSpeed,proto3" json:"windSpeed,omitempty"`
	Humidity  string      `protobuf:"bytes,10,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Precip    string      `protobuf:"bytes,11,opt,name=precip,proto3" json:"precip,omitempty"`
	Pressure  string      `protobuf:"bytes,12,opt,name=pressure,proto3" json:"pressure,omitempty"`
	Vis       string      `protobuf:"bytes,13,opt,name=vis,proto3" json:"vis,omitempty"`
	Cloud     string      `protobuf:"bytes,14,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Dew       string      `protobuf:"bytes,15,opt,name=dew,proto3" json:"dew,omitempty"`
	Air       *WeatherAir `protobuf:"bytes,17,opt,name=air,proto3" json:"air,omitempty"`
}

func (x *WeatherReadResp) Reset() {
	*x = WeatherReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherReadResp) ProtoMessage() {}

func (x *WeatherReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherReadResp.ProtoReflect.Descriptor instead.
func (*WeatherReadResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{94}
}

func (x *WeatherReadResp) GetObsTime() string {
	if x != nil {
		return x.ObsTime
	}
	return ""
}

func (x *WeatherReadResp) GetTemp() string {
	if x != nil {
		return x.Temp
	}
	return ""
}

func (x *WeatherReadResp) GetFeelsLike() string {
	if x != nil {
		return x.FeelsLike
	}
	return ""
}

func (x *WeatherReadResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *WeatherReadResp) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *WeatherReadResp) GetWind360() string {
	if x != nil {
		return x.Wind360
	}
	return ""
}

func (x *WeatherReadResp) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

func (x *WeatherReadResp) GetWindScale() string {
	if x != nil {
		return x.WindScale
	}
	return ""
}

func (x *WeatherReadResp) GetWindSpeed() string {
	if x != nil {
		return x.WindSpeed
	}
	return ""
}

func (x *WeatherReadResp) GetHumidity() string {
	if x != nil {
		return x.Humidity
	}
	return ""
}

func (x *WeatherReadResp) GetPrecip() string {
	if x != nil {
		return x.Precip
	}
	return ""
}

func (x *WeatherReadResp) GetPressure() string {
	if x != nil {
		return x.Pressure
	}
	return ""
}

func (x *WeatherReadResp) GetVis() string {
	if x != nil {
		return x.Vis
	}
	return ""
}

func (x *WeatherReadResp) GetCloud() string {
	if x != nil {
		return x.Cloud
	}
	return ""
}

func (x *WeatherReadResp) GetDew() string {
	if x != nil {
		return x.Dew
	}
	return ""
}

func (x *WeatherReadResp) GetAir() *WeatherAir {
	if x != nil {
		return x.Air
	}
	return nil
}

type QRCodeReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`             //默认是主页，页面 page，例如 pages/index/index，根路径前不要填加 /，不能携带参数（参数请放在scene字段里），如果不填写这个字段，默认跳主页面。scancode_time为系统保留参数，不允许配置
	Scene      string `protobuf:"bytes,2,opt,name=scene,proto3" json:"scene,omitempty"`           //        	最大32个可见字符，只支持数字，大小写英文以及部分特殊字符：!#$&'()*+,/:;=?@-._~，其它字符请自行编码为合法字符（因不支持%，中文无法使用 urlencode 处理，请使用其他编码方式）
	EnvVersion string `protobuf:"bytes,3,opt,name=envVersion,proto3" json:"envVersion,omitempty"` //要打开的小程序版本。正式版为 "release"，体验版为 "trial"，开发版为 "develop"。默认是正式版。
}

func (x *QRCodeReadReq) Reset() {
	*x = QRCodeReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeReadReq) ProtoMessage() {}

func (x *QRCodeReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeReadReq.ProtoReflect.Descriptor instead.
func (*QRCodeReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{95}
}

func (x *QRCodeReadReq) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *QRCodeReadReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *QRCodeReadReq) GetEnvVersion() string {
	if x != nil {
		return x.EnvVersion
	}
	return ""
}

type QRCodeReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffer []byte `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *QRCodeReadResp) Reset() {
	*x = QRCodeReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCodeReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCodeReadResp) ProtoMessage() {}

func (x *QRCodeReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCodeReadResp.ProtoReflect.Descriptor instead.
func (*QRCodeReadResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{96}
}

func (x *QRCodeReadResp) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type SlotInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	SubCode string    `protobuf:"bytes,2,opt,name=subCode,proto3" json:"subCode,omitempty"`
	Page    *PageInfo `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"` // 分页信息 只获取一个则不填
}

func (x *SlotInfoIndexReq) Reset() {
	*x = SlotInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfoIndexReq) ProtoMessage() {}

func (x *SlotInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfoIndexReq.ProtoReflect.Descriptor instead.
func (*SlotInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{97}
}

func (x *SlotInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SlotInfoIndexReq) GetSubCode() string {
	if x != nil {
		return x.SubCode
	}
	return ""
}

func (x *SlotInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

type SlotInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SlotInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SlotInfoIndexResp) Reset() {
	*x = SlotInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfoIndexResp) ProtoMessage() {}

func (x *SlotInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfoIndexResp.ProtoReflect.Descriptor instead.
func (*SlotInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{98}
}

func (x *SlotInfoIndexResp) GetList() []*SlotInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SlotInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AuthApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route  string `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"` //大写 http 方法
}

func (x *AuthApiInfo) Reset() {
	*x = AuthApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthApiInfo) ProtoMessage() {}

func (x *AuthApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthApiInfo.ProtoReflect.Descriptor instead.
func (*AuthApiInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{99}
}

func (x *AuthApiInfo) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *AuthApiInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type RoleAccessMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //角色ID
	AccessCodes []string `protobuf:"bytes,4,rep,name=accessCodes,proto3" json:"accessCodes,omitempty"`
}

func (x *RoleAccessMultiUpdateReq) Reset() {
	*x = RoleAccessMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAccessMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAccessMultiUpdateReq) ProtoMessage() {}

func (x *RoleAccessMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAccessMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleAccessMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{100}
}

func (x *RoleAccessMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAccessMultiUpdateReq) GetAccessCodes() []string {
	if x != nil {
		return x.AccessCodes
	}
	return nil
}

type RoleAccessIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` //角色ID
	Id  int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`          //角色ID
}

func (x *RoleAccessIndexReq) Reset() {
	*x = RoleAccessIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAccessIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAccessIndexReq) ProtoMessage() {}

func (x *RoleAccessIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAccessIndexReq.ProtoReflect.Descriptor instead.
func (*RoleAccessIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{101}
}

func (x *RoleAccessIndexReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoleAccessIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RoleAccessIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	AccessCodes []string `protobuf:"bytes,3,rep,name=accessCodes,proto3" json:"accessCodes,omitempty"`
}

func (x *RoleAccessIndexResp) Reset() {
	*x = RoleAccessIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAccessIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAccessIndexResp) ProtoMessage() {}

func (x *RoleAccessIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAccessIndexResp.ProtoReflect.Descriptor instead.
func (*RoleAccessIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{102}
}

func (x *RoleAccessIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleAccessIndexResp) GetAccessCodes() []string {
	if x != nil {
		return x.AccessCodes
	}
	return nil
}

type RoleMenuIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids        []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`       //角色ID
	Id         int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                //角色ID
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`       //appCode
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
}

func (x *RoleMenuIndexReq) Reset() {
	*x = RoleMenuIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuIndexReq) ProtoMessage() {}

func (x *RoleMenuIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuIndexReq.ProtoReflect.Descriptor instead.
func (*RoleMenuIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{103}
}

func (x *RoleMenuIndexReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoleMenuIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleMenuIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleMenuIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

type RoleMenuIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   int64   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	MenuIDs []int64 `protobuf:"varint,3,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *RoleMenuIndexResp) Reset() {
	*x = RoleMenuIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuIndexResp) ProtoMessage() {}

func (x *RoleMenuIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuIndexResp.ProtoReflect.Descriptor instead.
func (*RoleMenuIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{104}
}

func (x *RoleMenuIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleMenuIndexResp) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type RoleAppIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` //角色ID
	Id  int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`          //角色ID
}

func (x *RoleAppIndexReq) Reset() {
	*x = RoleAppIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppIndexReq) ProtoMessage() {}

func (x *RoleAppIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppIndexReq.ProtoReflect.Descriptor instead.
func (*RoleAppIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{105}
}

func (x *RoleAppIndexReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoleAppIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RoleAppIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppIndexResp) Reset() {
	*x = RoleAppIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppIndexResp) ProtoMessage() {}

func (x *RoleAppIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppIndexResp.ProtoReflect.Descriptor instead.
func (*RoleAppIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{106}
}

func (x *RoleAppIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleAppIndexResp) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type RoleModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids     []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` //角色ID
	Id      int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`          //角色ID
	AppCode string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"` //appCode
}

func (x *RoleModuleIndexReq) Reset() {
	*x = RoleModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleIndexReq) ProtoMessage() {}

func (x *RoleModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleIndexReq.ProtoReflect.Descriptor instead.
func (*RoleModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{107}
}

func (x *RoleModuleIndexReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoleModuleIndexReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleModuleIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type RoleModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *RoleModuleIndexResp) Reset() {
	*x = RoleModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleIndexResp) ProtoMessage() {}

func (x *RoleModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleIndexResp.ProtoReflect.Descriptor instead.
func (*RoleModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{108}
}

func (x *RoleModuleIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleModuleIndexResp) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{109}
}

func (x *DateRange) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *DateRange) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{110}
}

func (x *TimeRange) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TimeRange) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type LoginLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          *PageInfo  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                   // 分页信息 只获取一个则不填
	AppCode       string     `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`             //应用编码
	IpAddr        string     `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string     `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Date          *DateRange `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`                   // 时间范围
	UserID        int64      `protobuf:"varint,6,opt,name=userID,proto3" json:"userID,omitempty"`              // 用户id
	UserName      string     `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`           // 登录账号
	Code          int64      `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`                  // 登录状态（200成功 其它失败）
}

func (x *LoginLogIndexReq) Reset() {
	*x = LoginLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogIndexReq) ProtoMessage() {}

func (x *LoginLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogIndexReq.ProtoReflect.Descriptor instead.
func (*LoginLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{111}
}

func (x *LoginLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *LoginLogIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *LoginLogIndexReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogIndexReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogIndexReq) GetDate() *DateRange {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *LoginLogIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginLogIndexReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogIndexReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type LoginLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`              // 用户id
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`           // 登录账号
	IpAddr        string `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Browser       string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`             // 浏览器
	Os            string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                       // 操作系统
	Code          int64  `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`                  // 登录状态（200成功 其它失败）
	Msg           string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                     // 提示消息
	CreatedTime   int64  `protobuf:"varint,9,opt,name=createdTime,proto3" json:"createdTime,omitempty"`    // 登录时间
	AppCode       string `protobuf:"bytes,10,opt,name=appCode,proto3" json:"appCode,omitempty"`            //应用编码
}

func (x *LoginLogInfo) Reset() {
	*x = LoginLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogInfo) ProtoMessage() {}

func (x *LoginLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogInfo.ProtoReflect.Descriptor instead.
func (*LoginLogInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{112}
}

func (x *LoginLogInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginLogInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogInfo) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogInfo) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogInfo) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogInfo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginLogInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginLogInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *LoginLogInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type LoginLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*LoginLogInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总记录数
}

func (x *LoginLogIndexResp) Reset() {
	*x = LoginLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogIndexResp) ProtoMessage() {}

func (x *LoginLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogIndexResp.ProtoReflect.Descriptor instead.
func (*LoginLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{113}
}

func (x *LoginLogIndexResp) GetList() []*LoginLogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *LoginLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OperLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                  //分页信息 只获取一个则不填
	OperName     string    `protobuf:"bytes,2,opt,name=operName,proto3" json:"operName,omitempty"`          //按操作名称查找
	OperUserName string    `protobuf:"bytes,3,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //按操作人员名称查找
	BusinessType int64     `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //按业务类型（1新增 2修改 3删除 4查询）查找
	AppCode      string    `protobuf:"bytes,5,opt,name=appCode,proto3" json:"appCode,omitempty"`            //应用编码
	Code         int64     `protobuf:"varint,6,opt,name=code,proto3" json:"code,omitempty"`                 //登录状态（200成功 其它失败）
	UserID       int64     `protobuf:"varint,7,opt,name=userID,proto3" json:"userID,omitempty"`             //用户id
}

func (x *OperLogIndexReq) Reset() {
	*x = OperLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogIndexReq) ProtoMessage() {}

func (x *OperLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogIndexReq.ProtoReflect.Descriptor instead.
func (*OperLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{114}
}

func (x *OperLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *OperLogIndexReq) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogIndexReq) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogIndexReq) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *OperLogIndexReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OperLogIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type OperLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`             //用户id
	OperUserName string `protobuf:"bytes,2,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //操作人员名称
	OperName     string `protobuf:"bytes,3,opt,name=operName,proto3" json:"operName,omitempty"`          //操作名称
	BusinessType int64  `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //业务类型（1新增 2修改 3删除 4查询）
	Uri          string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`                    //请求地址
	OperIpAddr   string `protobuf:"bytes,6,opt,name=operIpAddr,proto3" json:"operIpAddr,omitempty"`      //操作主机地址
	OperLocation string `protobuf:"bytes,7,opt,name=operLocation,proto3" json:"operLocation,omitempty"`  //操作地点
	Req          string `protobuf:"bytes,8,opt,name=req,proto3" json:"req,omitempty"`                    //请求参数
	Resp         string `protobuf:"bytes,9,opt,name=resp,proto3" json:"resp,omitempty"`                  //返回参数
	Code         int64  `protobuf:"varint,10,opt,name=code,proto3" json:"code,omitempty"`                //登录状态（200成功 其它失败）
	Msg          string `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`                   //提示消息
	CreatedTime  int64  `protobuf:"varint,12,opt,name=createdTime,proto3" json:"createdTime,omitempty"`  //操作时间
	AppCode      string `protobuf:"bytes,13,opt,name=appCode,proto3" json:"appCode,omitempty"`           //应用编码
}

func (x *OperLogInfo) Reset() {
	*x = OperLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogInfo) ProtoMessage() {}

func (x *OperLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogInfo.ProtoReflect.Descriptor instead.
func (*OperLogInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{115}
}

func (x *OperLogInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OperLogInfo) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogInfo) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogInfo) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OperLogInfo) GetOperIpAddr() string {
	if x != nil {
		return x.OperIpAddr
	}
	return ""
}

func (x *OperLogInfo) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogInfo) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *OperLogInfo) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *OperLogInfo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OperLogInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OperLogInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *OperLogInfo) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type OperLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*OperLogInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总记录数
}

func (x *OperLogIndexResp) Reset() {
	*x = OperLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogIndexResp) ProtoMessage() {}

func (x *OperLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogIndexResp.ProtoReflect.Descriptor instead.
func (*OperLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{116}
}

func (x *OperLogIndexResp) GetList() []*OperLogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OperLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LoginLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`              // 用户id
	UserName      string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`           // 登录账号
	IpAddr        string `protobuf:"bytes,3,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`               // 登录IP地址
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"` // 登录地点
	Browser       string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`             // 浏览器
	Os            string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                       // 操作系统
	Code          int64  `protobuf:"varint,7,opt,name=code,proto3" json:"code,omitempty"`                  // 登录状态（200成功 其它失败）
	Msg           string `protobuf:"bytes,8,opt,name=msg,proto3" json:"msg,omitempty"`                     // 提示消息
	AppCode       string `protobuf:"bytes,9,opt,name=appCode,proto3" json:"appCode,omitempty"`             //应用编码
}

func (x *LoginLogCreateReq) Reset() {
	*x = LoginLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogCreateReq) ProtoMessage() {}

func (x *LoginLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogCreateReq.ProtoReflect.Descriptor instead.
func (*LoginLogCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{117}
}

func (x *LoginLogCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LoginLogCreateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginLogCreateReq) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *LoginLogCreateReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *LoginLogCreateReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *LoginLogCreateReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *LoginLogCreateReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginLogCreateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginLogCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

type OperLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int64  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`             //用户id
	OperUserName string `protobuf:"bytes,2,opt,name=operUserName,proto3" json:"operUserName,omitempty"`  //操作人员名称
	OperName     string `protobuf:"bytes,3,opt,name=operName,proto3" json:"operName,omitempty"`          //操作名称
	BusinessType int64  `protobuf:"varint,4,opt,name=businessType,proto3" json:"businessType,omitempty"` //业务类型（1新增 2修改 3删除 4查询）
	Uri          string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`                    //请求地址
	Route        string `protobuf:"bytes,6,opt,name=route,proto3" json:"route,omitempty"`                //接口路由
	OperIpAddr   string `protobuf:"bytes,7,opt,name=operIpAddr,proto3" json:"operIpAddr,omitempty"`      //操作主机地址
	OperLocation string `protobuf:"bytes,8,opt,name=operLocation,proto3" json:"operLocation,omitempty"`  //操作地点
	Req          string `protobuf:"bytes,9,opt,name=req,proto3" json:"req,omitempty"`                    //请求参数
	Resp         string `protobuf:"bytes,10,opt,name=resp,proto3" json:"resp,omitempty"`                 //返回参数
	Code         int64  `protobuf:"varint,11,opt,name=code,proto3" json:"code,omitempty"`                //返回状态（200成功 其它失败）
	Msg          string `protobuf:"bytes,12,opt,name=msg,proto3" json:"msg,omitempty"`                   //提示消息
	AppCode      string `protobuf:"bytes,13,opt,name=appCode,proto3" json:"appCode,omitempty"`           //应用编码
}

func (x *OperLogCreateReq) Reset() {
	*x = OperLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLogCreateReq) ProtoMessage() {}

func (x *OperLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLogCreateReq.ProtoReflect.Descriptor instead.
func (*OperLogCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{118}
}

func (x *OperLogCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *OperLogCreateReq) GetOperUserName() string {
	if x != nil {
		return x.OperUserName
	}
	return ""
}

func (x *OperLogCreateReq) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLogCreateReq) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLogCreateReq) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *OperLogCreateReq) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *OperLogCreateReq) GetOperIpAddr() string {
	if x != nil {
		return x.OperIpAddr
	}
	return ""
}

func (x *OperLogCreateReq) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLogCreateReq) GetReq() string {
	if x != nil {
		return x.Req
	}
	return ""
}

func (x *OperLogCreateReq) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

func (x *OperLogCreateReq) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OperLogCreateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OperLogCreateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

// 用户属性信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantCode      string                  `protobuf:"bytes,22,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`
	UserID          int64                   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserName        string                  `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Password        string                  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Email           *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone           *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	WechatUnionID   string                  `protobuf:"bytes,6,opt,name=wechatUnionID,proto3" json:"wechatUnionID,omitempty"`
	WechatOpenID    string                  `protobuf:"bytes,23,opt,name=wechatOpenID,proto3" json:"wechatOpenID,omitempty"`
	LastIP          string                  `protobuf:"bytes,7,opt,name=lastIP,proto3" json:"lastIP,omitempty"`
	RegIP           string                  `protobuf:"bytes,8,opt,name=regIP,proto3" json:"regIP,omitempty"`
	NickName        string                  `protobuf:"bytes,9,opt,name=nickName,proto3" json:"nickName,omitempty"`
	City            string                  `protobuf:"bytes,10,opt,name=city,proto3" json:"city,omitempty"`
	Country         string                  `protobuf:"bytes,11,opt,name=country,proto3" json:"country,omitempty"`
	Province        string                  `protobuf:"bytes,12,opt,name=province,proto3" json:"province,omitempty"`
	Language        string                  `protobuf:"bytes,13,opt,name=language,proto3" json:"language,omitempty"`
	CreatedTime     int64                   `protobuf:"varint,15,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Role            int64                   `protobuf:"varint,16,opt,name=role,proto3" json:"role,omitempty"`
	Sex             int64                   `protobuf:"varint,17,opt,name=sex,proto3" json:"sex,omitempty"`
	IsAllData       int64                   `protobuf:"varint,18,opt,name=isAllData,proto3" json:"isAllData,omitempty"`
	HeadImg         string                  `protobuf:"bytes,19,opt,name=headImg,proto3" json:"headImg,omitempty"`
	IsUpdateHeadImg bool                    `protobuf:"varint,20,opt,name=isUpdateHeadImg,proto3" json:"isUpdateHeadImg,omitempty"` //只有这个参数为true的时候才会更新图片,传参为图片的file path
	Status          int64                   `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	Tags            map[string]string       `protobuf:"bytes,24,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //标签
	DeptIDs         []int64                 `protobuf:"varint,25,rep,packed,name=deptIDs,proto3" json:"deptIDs,omitempty"`                                                                           //部门ID列表,默认展示第一个
	DeviceCount     int64                   `protobuf:"varint,26,opt,name=deviceCount,proto3" json:"deviceCount,omitempty"`                                                                          //拥有的设备统计
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{119}
}

func (x *UserInfo) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *UserInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UserInfo) GetPhone() *wrapperspb.StringValue {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *UserInfo) GetWechatUnionID() string {
	if x != nil {
		return x.WechatUnionID
	}
	return ""
}

func (x *UserInfo) GetWechatOpenID() string {
	if x != nil {
		return x.WechatOpenID
	}
	return ""
}

func (x *UserInfo) GetLastIP() string {
	if x != nil {
		return x.LastIP
	}
	return ""
}

func (x *UserInfo) GetRegIP() string {
	if x != nil {
		return x.RegIP
	}
	return ""
}

func (x *UserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UserInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UserInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *UserInfo) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *UserInfo) GetSex() int64 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfo) GetIsAllData() int64 {
	if x != nil {
		return x.IsAllData
	}
	return 0
}

func (x *UserInfo) GetHeadImg() string {
	if x != nil {
		return x.HeadImg
	}
	return ""
}

func (x *UserInfo) GetIsUpdateHeadImg() bool {
	if x != nil {
		return x.IsUpdateHeadImg
	}
	return false
}

func (x *UserInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserInfo) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UserInfo) GetDeptIDs() []int64 {
	if x != nil {
		return x.DeptIDs
	}
	return nil
}

func (x *UserInfo) GetDeviceCount() int64 {
	if x != nil {
		return x.DeviceCount
	}
	return 0
}

type UserCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"` //用户id
}

func (x *UserCreateResp) Reset() {
	*x = UserCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreateResp) ProtoMessage() {}

func (x *UserCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreateResp.ProtoReflect.Descriptor instead.
func (*UserCreateResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{120}
}

func (x *UserCreateResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserCheckTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Ip       string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	AppCode  string `protobuf:"bytes,3,opt,name=appCode,proto3" json:"appCode,omitempty"`
	AuthType string `protobuf:"bytes,4,opt,name=authType,proto3" json:"authType,omitempty"` //user(普通用户),open(开放第三方认证)
}

func (x *UserCheckTokenReq) Reset() {
	*x = UserCheckTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckTokenReq) ProtoMessage() {}

func (x *UserCheckTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckTokenReq.ProtoReflect.Descriptor instead.
func (*UserCheckTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{121}
}

func (x *UserCheckTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserCheckTokenReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserCheckTokenReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *UserCheckTokenReq) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

type UserCheckTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //如果时间不多会更新jwt，需要判断jwt是否为“” 如果不为空，则需要更新用户的token
	UserID       int64                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleIDs      []int64                `protobuf:"varint,3,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"`
	RoleCodes    []string               `protobuf:"bytes,4,rep,name=roleCodes,proto3" json:"roleCodes,omitempty"`
	IsAllData    int64                  `protobuf:"varint,5,opt,name=isAllData,proto3" json:"isAllData,omitempty"`
	TenantCode   string                 `protobuf:"bytes,6,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`      //租户编码
	IsAdmin      bool                   `protobuf:"varint,7,opt,name=isAdmin,proto3" json:"isAdmin,omitempty"`           //是否是管理员
	IsSuperAdmin bool                   `protobuf:"varint,8,opt,name=isSuperAdmin,proto3" json:"isSuperAdmin,omitempty"` //是否是超级管理员(可以跨租户)
	AppCode      string                 `protobuf:"bytes,9,opt,name=appCode,proto3" json:"appCode,omitempty"`            //应用code
	Account      string                 `protobuf:"bytes,10,opt,name=account,proto3" json:"account,omitempty"`           //账号
	ProjectAuth  map[int64]*ProjectAuth `protobuf:"bytes,11,rep,name=projectAuth,proto3" json:"projectAuth,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserCheckTokenResp) Reset() {
	*x = UserCheckTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckTokenResp) ProtoMessage() {}

func (x *UserCheckTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckTokenResp.ProtoReflect.Descriptor instead.
func (*UserCheckTokenResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{122}
}

func (x *UserCheckTokenResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserCheckTokenResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserCheckTokenResp) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

func (x *UserCheckTokenResp) GetRoleCodes() []string {
	if x != nil {
		return x.RoleCodes
	}
	return nil
}

func (x *UserCheckTokenResp) GetIsAllData() int64 {
	if x != nil {
		return x.IsAllData
	}
	return 0
}

func (x *UserCheckTokenResp) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *UserCheckTokenResp) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *UserCheckTokenResp) GetIsSuperAdmin() bool {
	if x != nil {
		return x.IsSuperAdmin
	}
	return false
}

func (x *UserCheckTokenResp) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *UserCheckTokenResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserCheckTokenResp) GetProjectAuth() map[int64]*ProjectAuth {
	if x != nil {
		return x.ProjectAuth
	}
	return nil
}

type ProjectAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area     map[int64]int64  `protobuf:"bytes,1,rep,name=area,proto3" json:"area,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`        //key是区域ID,value是授权类型
	AreaPath map[string]int64 `protobuf:"bytes,3,rep,name=areaPath,proto3" json:"areaPath,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //包含子节点的授权
	// 1 //管理权限,可以修改别人的权限,及读写权限 管理权限不限制区域权限
	// 2 //读权限,只能读,不能修改
	// 3 //读写权限,可以读写该权限
	AuthType int64 `protobuf:"varint,2,opt,name=AuthType,proto3" json:"AuthType,omitempty"` //项目的授权类型
}

func (x *ProjectAuth) Reset() {
	*x = ProjectAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAuth) ProtoMessage() {}

func (x *ProjectAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAuth.ProtoReflect.Descriptor instead.
func (*ProjectAuth) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{123}
}

func (x *ProjectAuth) GetArea() map[int64]int64 {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *ProjectAuth) GetAreaPath() map[string]int64 {
	if x != nil {
		return x.AreaPath
	}
	return nil
}

func (x *ProjectAuth) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

type RoleAppMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCodes []string `protobuf:"bytes,3,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppMultiUpdateReq) Reset() {
	*x = RoleAppMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppMultiUpdateReq) ProtoMessage() {}

func (x *RoleAppMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleAppMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{124}
}

func (x *RoleAppMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAppMultiUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type RoleModuleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode     string   `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *RoleModuleMultiUpdateReq) Reset() {
	*x = RoleModuleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleModuleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleModuleMultiUpdateReq) ProtoMessage() {}

func (x *RoleModuleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleModuleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleModuleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{125}
}

func (x *RoleModuleMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleModuleMultiUpdateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleModuleMultiUpdateReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type RoleMenuMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCode    string  `protobuf:"bytes,2,opt,name=appCode,proto3" json:"appCode,omitempty"`
	ModuleCode string  `protobuf:"bytes,3,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` //模块编码
	MenuIDs    []int64 `protobuf:"varint,4,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
}

func (x *RoleMenuMultiUpdateReq) Reset() {
	*x = RoleMenuMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuMultiUpdateReq) ProtoMessage() {}

func (x *RoleMenuMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleMenuMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{126}
}

func (x *RoleMenuMultiUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleMenuMultiUpdateReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *RoleMenuMultiUpdateReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *RoleMenuMultiUpdateReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

type RoleApiAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Method string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
}

func (x *RoleApiAuthReq) Reset() {
	*x = RoleApiAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiAuthReq) ProtoMessage() {}

func (x *RoleApiAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiAuthReq.ProtoReflect.Descriptor instead.
func (*RoleApiAuthReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{127}
}

func (x *RoleApiAuthReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RoleApiAuthReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type RoleApiAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessType  int64  `protobuf:"varint,1,opt,name=businessType,proto3" json:"businessType,omitempty"`   // 业务类型（1新增 2修改 3删除 4查询 5其它)
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                    //操作名
	RecordLogMode int64  `protobuf:"varint,3,opt,name=recordLogMode,proto3" json:"recordLogMode,omitempty"` //1为自动模式(读取类型忽略,其他类型记录日志) 2全部记录 3不记录
}

func (x *RoleApiAuthResp) Reset() {
	*x = RoleApiAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleApiAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleApiAuthResp) ProtoMessage() {}

func (x *RoleApiAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleApiAuthResp.ProtoReflect.Descriptor instead.
func (*RoleApiAuthResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{128}
}

func (x *RoleApiAuthResp) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *RoleApiAuthResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleApiAuthResp) GetRecordLogMode() int64 {
	if x != nil {
		return x.RecordLogMode
	}
	return 0
}

type UserInfoCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	RoleIDs []int64   `protobuf:"varint,2,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"`
}

func (x *UserInfoCreateReq) Reset() {
	*x = UserInfoCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoCreateReq) ProtoMessage() {}

func (x *UserInfoCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoCreateReq.ProtoReflect.Descriptor instead.
func (*UserInfoCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{129}
}

func (x *UserInfoCreateReq) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserInfoCreateReq) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

type UserInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           *PageInfo     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息 只获取一个则不填 搜索的字段: userID:用户id userName:登录用户名  email:邮箱  phone:手机号
	UserName       string        `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Phone          string        `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email          string        `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	UserIDs        []int64       `protobuf:"varint,5,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"`
	Account        string        `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	HasAccessAreas []int64       `protobuf:"varint,7,rep,packed,name=hasAccessAreas,proto3" json:"hasAccessAreas,omitempty"`
	RoleCode       string        `protobuf:"bytes,8,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	UpdatedTime    *CompareInt64 `protobuf:"bytes,9,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	DeptID         int64         `protobuf:"varint,10,opt,name=deptID,proto3" json:"deptID,omitempty"`
	NickName       string        `protobuf:"bytes,11,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *UserInfoIndexReq) Reset() {
	*x = UserInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoIndexReq) ProtoMessage() {}

func (x *UserInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoIndexReq.ProtoReflect.Descriptor instead.
func (*UserInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{130}
}

func (x *UserInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserInfoIndexReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfoIndexReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfoIndexReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfoIndexReq) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

func (x *UserInfoIndexReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserInfoIndexReq) GetHasAccessAreas() []int64 {
	if x != nil {
		return x.HasAccessAreas
	}
	return nil
}

func (x *UserInfoIndexReq) GetRoleCode() string {
	if x != nil {
		return x.RoleCode
	}
	return ""
}

func (x *UserInfoIndexReq) GetUpdatedTime() *CompareInt64 {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

func (x *UserInfoIndexReq) GetDeptID() int64 {
	if x != nil {
		return x.DeptID
	}
	return 0
}

func (x *UserInfoIndexReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type UserInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*UserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *UserInfoIndexResp) Reset() {
	*x = UserInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoIndexResp) ProtoMessage() {}

func (x *UserInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoIndexResp.ProtoReflect.Descriptor instead.
func (*UserInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{131}
}

func (x *UserInfoIndexResp) GetList() []*UserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserInfoUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	WithRoot bool      `protobuf:"varint,2,opt,name=WithRoot,proto3" json:"WithRoot,omitempty"` //root可以修改所有字段
}

func (x *UserInfoUpdateReq) Reset() {
	*x = UserInfoUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoUpdateReq) ProtoMessage() {}

func (x *UserInfoUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoUpdateReq.ProtoReflect.Descriptor instead.
func (*UserInfoUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{132}
}

func (x *UserInfoUpdateReq) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserInfoUpdateReq) GetWithRoot() bool {
	if x != nil {
		return x.WithRoot
	}
	return false
}

type UserInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoReadReq) Reset() {
	*x = UserInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReadReq) ProtoMessage() {}

func (x *UserInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReadReq.ProtoReflect.Descriptor instead.
func (*UserInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{133}
}

func (x *UserInfoReadReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserInfoDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoDeleteReq) Reset() {
	*x = UserInfoDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoDeleteReq) ProtoMessage() {}

func (x *UserInfoDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoDeleteReq.ProtoReflect.Descriptor instead.
func (*UserInfoDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{134}
}

func (x *UserInfoDeleteReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type JwtToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,2,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *JwtToken) Reset() {
	*x = JwtToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtToken) ProtoMessage() {}

func (x *JwtToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtToken.ProtoReflect.Descriptor instead.
func (*JwtToken) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{135}
}

func (x *JwtToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *JwtToken) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *JwtToken) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type UserCaptchaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` //短信验证时填写手机号,邮箱验证时填写邮箱
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`       //验证方式:短信验证,图片验证码,邮箱验证
	Use     string `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`         //用途
	CodeID  string `protobuf:"bytes,4,opt,name=codeID,proto3" json:"codeID,omitempty"`   //验证码编码
	Code    string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`       //验证码
	Ip      string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`           //透传请求的 ip
}

func (x *UserCaptchaReq) Reset() {
	*x = UserCaptchaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCaptchaReq) ProtoMessage() {}

func (x *UserCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCaptchaReq.ProtoReflect.Descriptor instead.
func (*UserCaptchaReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{136}
}

func (x *UserCaptchaReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserCaptchaReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserCaptchaReq) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *UserCaptchaReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserCaptchaReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserCaptchaReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type UserCaptchaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeID string `protobuf:"bytes,1,opt,name=codeID,proto3" json:"codeID,omitempty"`  //验证码编码
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`      //验证码--只有图片验证码由apisvr生成,其他方式返回空
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"` //过期时间
}

func (x *UserCaptchaResp) Reset() {
	*x = UserCaptchaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCaptchaResp) ProtoMessage() {}

func (x *UserCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCaptchaResp.ProtoReflect.Descriptor instead.
func (*UserCaptchaResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{137}
}

func (x *UserCaptchaResp) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserCaptchaResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserCaptchaResp) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type UserForgetPwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   //登录账号(支持用户名,手机号登录) 账号密码登录时需要填写
	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`         //账号类型: email:邮箱 phone:手机号
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	Code     string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`         //验证码    微信登录填code
	CodeID   string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`     //验证码编号 微信登录填state
}

func (x *UserForgetPwdReq) Reset() {
	*x = UserForgetPwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserForgetPwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserForgetPwdReq) ProtoMessage() {}

func (x *UserForgetPwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserForgetPwdReq.ProtoReflect.Descriptor instead.
func (*UserForgetPwdReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{138}
}

func (x *UserForgetPwdReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserForgetPwdReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserForgetPwdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserForgetPwdReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserForgetPwdReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

type UserCodeToUserIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginType string `protobuf:"bytes,4,opt,name=loginType,proto3" json:"loginType,omitempty"` //验证类型 phone 手机号 wxOpen 微信开放平台 wxIn 微信内 wxMiniP 微信小程序 pwd 账号密码
	Code      string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`           //验证码    微信登录填code
}

func (x *UserCodeToUserIDReq) Reset() {
	*x = UserCodeToUserIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCodeToUserIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCodeToUserIDReq) ProtoMessage() {}

func (x *UserCodeToUserIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCodeToUserIDReq.ProtoReflect.Descriptor instead.
func (*UserCodeToUserIDReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{139}
}

func (x *UserCodeToUserIDReq) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *UserCodeToUserIDReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type UserCodeToUserIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenID  string `protobuf:"bytes,1,opt,name=openID,proto3" json:"openID,omitempty"`
	UnionID string `protobuf:"bytes,2,opt,name=unionID,proto3" json:"unionID,omitempty"`
}

func (x *UserCodeToUserIDResp) Reset() {
	*x = UserCodeToUserIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCodeToUserIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCodeToUserIDResp) ProtoMessage() {}

func (x *UserCodeToUserIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCodeToUserIDResp.ProtoReflect.Descriptor instead.
func (*UserCodeToUserIDResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{140}
}

func (x *UserCodeToUserIDResp) GetOpenID() string {
	if x != nil {
		return x.OpenID
	}
	return ""
}

func (x *UserCodeToUserIDResp) GetUnionID() string {
	if x != nil {
		return x.UnionID
	}
	return ""
}

type UserChangePwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`         //验证类型: email:邮箱 phone:手机号
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	Code     string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`         //验证码    微信登录填code
	CodeID   string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`     //验证码编号 微信登录填state
}

func (x *UserChangePwdReq) Reset() {
	*x = UserChangePwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChangePwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChangePwdReq) ProtoMessage() {}

func (x *UserChangePwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChangePwdReq.ProtoReflect.Descriptor instead.
func (*UserChangePwdReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{141}
}

func (x *UserChangePwdReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserChangePwdReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserChangePwdReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserChangePwdReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`     //登录账号(支持用户名,手机号登录) 账号密码登录时需要填写
	PwdType   int32  `protobuf:"varint,2,opt,name=pwdType,proto3" json:"pwdType,omitempty"`    //账号密码登录时需要填写.0,无密码 1，明文 2，md5加密
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   //密码，建议md5转换 密码登录时需要填写
	LoginType string `protobuf:"bytes,4,opt,name=loginType,proto3" json:"loginType,omitempty"` //验证类型 phone 手机号 wxOpen 微信开放平台 wxIn 微信内 wxMiniP 微信小程序 pwd 账号密码
	Code      string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`           //验证码    微信登录填code
	CodeID    string `protobuf:"bytes,6,opt,name=codeID,proto3" json:"codeID,omitempty"`       //验证码编号 微信登录填state
	Ip        string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`               //透传请求的 ip
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{142}
}

func (x *UserLoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserLoginReq) GetPwdType() int32 {
	if x != nil {
		return x.PwdType
	}
	return 0
}

func (x *UserLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserLoginReq) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *UserLoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserLoginReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserLoginReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type UserLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *UserInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Token *JwtToken `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserLoginResp) Reset() {
	*x = UserLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginResp) ProtoMessage() {}

func (x *UserLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginResp.ProtoReflect.Descriptor instead.
func (*UserLoginResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{143}
}

func (x *UserLoginResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserLoginResp) GetToken() *JwtToken {
	if x != nil {
		return x.Token
	}
	return nil
}

// 登录信息注册,注册第一步(注册核心登录信息) 返回一个jwt用来第二步注册
type UserRegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegType  string            `protobuf:"bytes,1,opt,name=regType,proto3" json:"regType,omitempty"` //注册方式:	phone手机号注册 email邮箱注册 wxopen 微信开放平台登录 wxin 微信内登录 wxminip 微信小程序 pwd 账号密码注册
	Account  string            `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` //手机号注册时填写手机号 账号密码注册时填写userName
	Code     string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`       //验证码    微信注册填code
	CodeID   string            `protobuf:"bytes,4,opt,name=codeID,proto3" json:"codeID,omitempty"`   //验证码编号 微信注册填state
	Password string            `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Info     *UserInfo         `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`                                                                                             //填写用户信息
	Expand   map[string]string `protobuf:"bytes,7,rep,name=expand,proto3" json:"expand,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //拓展, 微信登录方式 phoneCode:获取手机号code
}

func (x *UserRegisterReq) Reset() {
	*x = UserRegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterReq) ProtoMessage() {}

func (x *UserRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterReq.ProtoReflect.Descriptor instead.
func (*UserRegisterReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{144}
}

func (x *UserRegisterReq) GetRegType() string {
	if x != nil {
		return x.RegType
	}
	return ""
}

func (x *UserRegisterReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserRegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserRegisterReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

func (x *UserRegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserRegisterReq) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UserRegisterReq) GetExpand() map[string]string {
	if x != nil {
		return x.Expand
	}
	return nil
}

type UserRegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserRegisterResp) Reset() {
	*x = UserRegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRegisterResp) ProtoMessage() {}

func (x *UserRegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRegisterResp.ProtoReflect.Descriptor instead.
func (*UserRegisterResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{145}
}

func (x *UserRegisterResp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserBindAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`       //验证方式:phone手机号注册 wxOpen 微信开放平台登录 wxIn 微信内 wxMiniP 微信小程序
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` //手机号,邮箱需要填写
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`       //验证码    微信登录填code
	CodeID  string `protobuf:"bytes,4,opt,name=codeID,proto3" json:"codeID,omitempty"`   //验证码编号 微信登录填state
}

func (x *UserBindAccountReq) Reset() {
	*x = UserBindAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBindAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBindAccountReq) ProtoMessage() {}

func (x *UserBindAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBindAccountReq.ProtoReflect.Descriptor instead.
func (*UserBindAccountReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{146}
}

func (x *UserBindAccountReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserBindAccountReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserBindAccountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UserBindAccountReq) GetCodeID() string {
	if x != nil {
		return x.CodeID
	}
	return ""
}

type UserRoleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserRoleIndexReq) Reset() {
	*x = UserRoleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleIndexReq) ProtoMessage() {}

func (x *UserRoleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleIndexReq.ProtoReflect.Descriptor instead.
func (*UserRoleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{147}
}

func (x *UserRoleIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserRoleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //角色列表
}

func (x *UserRoleIndexResp) Reset() {
	*x = UserRoleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleIndexResp) ProtoMessage() {}

func (x *UserRoleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleIndexResp.ProtoReflect.Descriptor instead.
func (*UserRoleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{148}
}

func (x *UserRoleIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserRoleIndexResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UserRoleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RoleIDs   []int64  `protobuf:"varint,2,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"` //API列表数据
	RoleCodes []string `protobuf:"bytes,3,rep,name=roleCodes,proto3" json:"roleCodes,omitempty"`     //角色code
}

func (x *UserRoleMultiUpdateReq) Reset() {
	*x = UserRoleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRoleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleMultiUpdateReq) ProtoMessage() {}

func (x *UserRoleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*UserRoleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{149}
}

func (x *UserRoleMultiUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserRoleMultiUpdateReq) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

func (x *UserRoleMultiUpdateReq) GetRoleCodes() []string {
	if x != nil {
		return x.RoleCodes
	}
	return nil
}

type UserDeptIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserDeptIndexReq) Reset() {
	*x = UserDeptIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeptIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeptIndexReq) ProtoMessage() {}

func (x *UserDeptIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeptIndexReq.ProtoReflect.Descriptor instead.
func (*UserDeptIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{150}
}

func (x *UserDeptIndexReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserDeptIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*DeptInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //部门列表
}

func (x *UserDeptIndexResp) Reset() {
	*x = UserDeptIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeptIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeptIndexResp) ProtoMessage() {}

func (x *UserDeptIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeptIndexResp.ProtoReflect.Descriptor instead.
func (*UserDeptIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{151}
}

func (x *UserDeptIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserDeptIndexResp) GetList() []*DeptInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UserDeptMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	DeptIDs []int64 `protobuf:"varint,2,rep,packed,name=deptIDs,proto3" json:"deptIDs,omitempty"` //API列表数据
}

func (x *UserDeptMultiSaveReq) Reset() {
	*x = UserDeptMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeptMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeptMultiSaveReq) ProtoMessage() {}

func (x *UserDeptMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeptMultiSaveReq.ProtoReflect.Descriptor instead.
func (*UserDeptMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{152}
}

func (x *UserDeptMultiSaveReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserDeptMultiSaveReq) GetDeptIDs() []int64 {
	if x != nil {
		return x.DeptIDs
	}
	return nil
}

type DeptUserIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptID int64 `protobuf:"varint,1,opt,name=deptID,proto3" json:"deptID,omitempty"`
}

func (x *DeptUserIndexReq) Reset() {
	*x = DeptUserIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUserIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUserIndexReq) ProtoMessage() {}

func (x *DeptUserIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUserIndexReq.ProtoReflect.Descriptor instead.
func (*DeptUserIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{153}
}

func (x *DeptUserIndexReq) GetDeptID() int64 {
	if x != nil {
		return x.DeptID
	}
	return 0
}

type DeptUserIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*UserInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //部门列表
}

func (x *DeptUserIndexResp) Reset() {
	*x = DeptUserIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUserIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUserIndexResp) ProtoMessage() {}

func (x *DeptUserIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUserIndexResp.ProtoReflect.Descriptor instead.
func (*DeptUserIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{154}
}

func (x *DeptUserIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeptUserIndexResp) GetList() []*UserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptUserMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptID  int64   `protobuf:"varint,1,opt,name=deptID,proto3" json:"deptID,omitempty"`
	UserIDs []int64 `protobuf:"varint,2,rep,packed,name=userIDs,proto3" json:"userIDs,omitempty"` //API列表数据
}

func (x *DeptUserMultiSaveReq) Reset() {
	*x = DeptUserMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptUserMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptUserMultiSaveReq) ProtoMessage() {}

func (x *DeptUserMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptUserMultiSaveReq.ProtoReflect.Descriptor instead.
func (*DeptUserMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{155}
}

func (x *DeptUserMultiSaveReq) GetDeptID() int64 {
	if x != nil {
		return x.DeptID
	}
	return 0
}

func (x *DeptUserMultiSaveReq) GetUserIDs() []int64 {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type DeptRoleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptID int64 `protobuf:"varint,1,opt,name=deptID,proto3" json:"deptID,omitempty"`
}

func (x *DeptRoleIndexReq) Reset() {
	*x = DeptRoleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptRoleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptRoleIndexReq) ProtoMessage() {}

func (x *DeptRoleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptRoleIndexReq.ProtoReflect.Descriptor instead.
func (*DeptRoleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{156}
}

func (x *DeptRoleIndexReq) GetDeptID() int64 {
	if x != nil {
		return x.DeptID
	}
	return 0
}

type DeptRoleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*RoleInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"` //部门列表
}

func (x *DeptRoleIndexResp) Reset() {
	*x = DeptRoleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptRoleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptRoleIndexResp) ProtoMessage() {}

func (x *DeptRoleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptRoleIndexResp.ProtoReflect.Descriptor instead.
func (*DeptRoleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{157}
}

func (x *DeptRoleIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeptRoleIndexResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptRoleMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptID  int64   `protobuf:"varint,1,opt,name=deptID,proto3" json:"deptID,omitempty"`
	RoleIDs []int64 `protobuf:"varint,2,rep,packed,name=roleIDs,proto3" json:"roleIDs,omitempty"` //API列表数据
}

func (x *DeptRoleMultiSaveReq) Reset() {
	*x = DeptRoleMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptRoleMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptRoleMultiSaveReq) ProtoMessage() {}

func (x *DeptRoleMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptRoleMultiSaveReq.ProtoReflect.Descriptor instead.
func (*DeptRoleMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{158}
}

func (x *DeptRoleMultiSaveReq) GetDeptID() int64 {
	if x != nil {
		return x.DeptID
	}
	return 0
}

func (x *DeptRoleMultiSaveReq) GetRoleIDs() []int64 {
	if x != nil {
		return x.RoleIDs
	}
	return nil
}

type DataProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   int64 `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"`     //权限数据ID
	AuthType    int64 `protobuf:"varint,2,opt,name=authType,proto3" json:"authType,omitempty"`       // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
	TargetID    int64 `protobuf:"varint,3,opt,name=targetID,proto3" json:"targetID,omitempty"`       //用户ID（必填，雪花ID）
	UpdatedTime int64 `protobuf:"varint,4,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"` //更新时间
}

func (x *DataProject) Reset() {
	*x = DataProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProject) ProtoMessage() {}

func (x *DataProject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProject.ProtoReflect.Descriptor instead.
func (*DataProject) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{159}
}

func (x *DataProject) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataProject) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

func (x *DataProject) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataProject) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DataProjectDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetID   int64  `protobuf:"varint,1,opt,name=targetID,proto3" json:"targetID,omitempty"` //用户ID（必填，雪花ID）
	TargetType string `protobuf:"bytes,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
	ProjectID  int64  `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //权限数据ID
}

func (x *DataProjectDeleteReq) Reset() {
	*x = DataProjectDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectDeleteReq) ProtoMessage() {}

func (x *DataProjectDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectDeleteReq.ProtoReflect.Descriptor instead.
func (*DataProjectDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{160}
}

func (x *DataProjectDeleteReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataProjectDeleteReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataProjectDeleteReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type DataProjectMultiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetIDs  []int64 `protobuf:"varint,1,rep,packed,name=targetIDs,proto3" json:"targetIDs,omitempty"` //用户ID（必填，雪花ID）
	TargetType string  `protobuf:"bytes,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
	ProjectID  int64   `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //权限数据ID
}

func (x *DataProjectMultiDeleteReq) Reset() {
	*x = DataProjectMultiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectMultiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectMultiDeleteReq) ProtoMessage() {}

func (x *DataProjectMultiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectMultiDeleteReq.ProtoReflect.Descriptor instead.
func (*DataProjectMultiDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{161}
}

func (x *DataProjectMultiDeleteReq) GetTargetIDs() []int64 {
	if x != nil {
		return x.TargetIDs
	}
	return nil
}

func (x *DataProjectMultiDeleteReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataProjectMultiDeleteReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

type DataProjectSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetID   int64  `protobuf:"varint,1,opt,name=targetID,proto3" json:"targetID,omitempty"` //用户ID（必填，雪花ID）
	TargetType string `protobuf:"bytes,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
	ProjectID  int64  `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //权限数据ID
	AuthType   int64  `protobuf:"varint,4,opt,name=authType,proto3" json:"authType,omitempty"`   // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
}

func (x *DataProjectSaveReq) Reset() {
	*x = DataProjectSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectSaveReq) ProtoMessage() {}

func (x *DataProjectSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectSaveReq.ProtoReflect.Descriptor instead.
func (*DataProjectSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{162}
}

func (x *DataProjectSaveReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataProjectSaveReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataProjectSaveReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataProjectSaveReq) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

type DataProjectMultiSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetIDs  []int64 `protobuf:"varint,1,rep,packed,name=targetIDs,proto3" json:"targetIDs,omitempty"` //用户ID（必填，雪花ID）
	TargetType string  `protobuf:"bytes,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
	ProjectID  int64   `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //权限数据ID
	AuthType   int64   `protobuf:"varint,4,opt,name=authType,proto3" json:"authType,omitempty"`   // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
}

func (x *DataProjectMultiSaveReq) Reset() {
	*x = DataProjectMultiSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectMultiSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectMultiSaveReq) ProtoMessage() {}

func (x *DataProjectMultiSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectMultiSaveReq.ProtoReflect.Descriptor instead.
func (*DataProjectMultiSaveReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{163}
}

func (x *DataProjectMultiSaveReq) GetTargetIDs() []int64 {
	if x != nil {
		return x.TargetIDs
	}
	return nil
}

func (x *DataProjectMultiSaveReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataProjectMultiSaveReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataProjectMultiSaveReq) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

type DataProjectIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //进行数据分页（不传默认2000相当于全部）
	ProjectID  int64     `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"` //获取该项目实际获得的权限
	TargetID   int64     `protobuf:"varint,3,opt,name=targetID,proto3" json:"targetID,omitempty"`
	TargetType string    `protobuf:"bytes,4,opt,name=targetType,proto3" json:"targetType,omitempty"` //user:用户 role:角色
	AuthType   int64     `protobuf:"varint,5,opt,name=authType,proto3" json:"authType,omitempty"`    // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
}

func (x *DataProjectIndexReq) Reset() {
	*x = DataProjectIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectIndexReq) ProtoMessage() {}

func (x *DataProjectIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectIndexReq.ProtoReflect.Descriptor instead.
func (*DataProjectIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{164}
}

func (x *DataProjectIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DataProjectIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataProjectIndexReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataProjectIndexReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataProjectIndexReq) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

type DataProjectIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DataProject `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //用户数据权限列表
}

func (x *DataProjectIndexResp) Reset() {
	*x = DataProjectIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProjectIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProjectIndexResp) ProtoMessage() {}

func (x *DataProjectIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProjectIndexResp.ProtoReflect.Descriptor instead.
func (*DataProjectIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{165}
}

func (x *DataProjectIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DataProjectIndexResp) GetList() []*DataProject {
	if x != nil {
		return x.List
	}
	return nil
}

type DataArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID         int64  `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"`                 //项目id
	AuthType       int64  `protobuf:"varint,2,opt,name=authType,proto3" json:"authType,omitempty"`             // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
	IsAuthChildren int64  `protobuf:"varint,3,opt,name=isAuthChildren,proto3" json:"isAuthChildren,omitempty"` //是否同时授权子节点,默认为2
	AreaIDPath     int64  `protobuf:"varint,4,opt,name=areaIDPath,proto3" json:"areaIDPath,omitempty"`
	TargetID       int64  `protobuf:"varint,5,opt,name=targetID,proto3" json:"targetID,omitempty"` //用户ID或Roleid（必填，雪花ID）
	TargetType     string `protobuf:"bytes,6,opt,name=targetType,proto3" json:"targetType,omitempty"`
	UpdatedTime    int64  `protobuf:"varint,7,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"` //更新时间
}

func (x *DataArea) Reset() {
	*x = DataArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataArea) ProtoMessage() {}

func (x *DataArea) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataArea.ProtoReflect.Descriptor instead.
func (*DataArea) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{166}
}

func (x *DataArea) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *DataArea) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

func (x *DataArea) GetIsAuthChildren() int64 {
	if x != nil {
		return x.IsAuthChildren
	}
	return 0
}

func (x *DataArea) GetAreaIDPath() int64 {
	if x != nil {
		return x.AreaIDPath
	}
	return 0
}

func (x *DataArea) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataArea) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataArea) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

type DataAreaMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetID   int64       `protobuf:"varint,1,opt,name=targetID,proto3" json:"targetID,omitempty"` //用户ID（必填，雪花ID）
	TargetType string      `protobuf:"bytes,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
	ProjectID  int64       `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id
	Areas      []*DataArea `protobuf:"bytes,4,rep,name=areas,proto3" json:"areas,omitempty"`          //权限数据IDs
}

func (x *DataAreaMultiUpdateReq) Reset() {
	*x = DataAreaMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAreaMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAreaMultiUpdateReq) ProtoMessage() {}

func (x *DataAreaMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAreaMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*DataAreaMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{167}
}

func (x *DataAreaMultiUpdateReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataAreaMultiUpdateReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataAreaMultiUpdateReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataAreaMultiUpdateReq) GetAreas() []*DataArea {
	if x != nil {
		return x.Areas
	}
	return nil
}

type DataAreaIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //进行数据分页（不传默认2000相当于全部）
	ProjectID  int64     `protobuf:"varint,3,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id 必选
	TargetID   int64     `protobuf:"varint,4,opt,name=targetID,proto3" json:"targetID,omitempty"`
	TargetType string    `protobuf:"bytes,5,opt,name=targetType,proto3" json:"targetType,omitempty"`
}

func (x *DataAreaIndexReq) Reset() {
	*x = DataAreaIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAreaIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAreaIndexReq) ProtoMessage() {}

func (x *DataAreaIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAreaIndexReq.ProtoReflect.Descriptor instead.
func (*DataAreaIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{168}
}

func (x *DataAreaIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DataAreaIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataAreaIndexReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataAreaIndexReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

type DataAreaIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*DataArea `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //用户数据权限列表
}

func (x *DataAreaIndexResp) Reset() {
	*x = DataAreaIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAreaIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAreaIndexResp) ProtoMessage() {}

func (x *DataAreaIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAreaIndexResp.ProtoReflect.Descriptor instead.
func (*DataAreaIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{169}
}

func (x *DataAreaIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DataAreaIndexResp) GetList() []*DataArea {
	if x != nil {
		return x.List
	}
	return nil
}

type DataAreaMultiDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID  int64   `protobuf:"varint,1,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目id 必选
	TargetID   int64   `protobuf:"varint,2,opt,name=targetID,proto3" json:"targetID,omitempty"`
	TargetType string  `protobuf:"bytes,3,opt,name=targetType,proto3" json:"targetType,omitempty"`
	AreaIDs    []int64 `protobuf:"varint,4,rep,packed,name=areaIDs,proto3" json:"areaIDs,omitempty"`
}

func (x *DataAreaMultiDeleteReq) Reset() {
	*x = DataAreaMultiDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAreaMultiDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAreaMultiDeleteReq) ProtoMessage() {}

func (x *DataAreaMultiDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAreaMultiDeleteReq.ProtoReflect.Descriptor instead.
func (*DataAreaMultiDeleteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{170}
}

func (x *DataAreaMultiDeleteReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *DataAreaMultiDeleteReq) GetTargetID() int64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *DataAreaMultiDeleteReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *DataAreaMultiDeleteReq) GetAreaIDs() []int64 {
	if x != nil {
		return x.AreaIDs
	}
	return nil
}

type UserAreaApplyCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaID   int64 `protobuf:"varint,1,opt,name=areaID,proto3" json:"areaID,omitempty"`     //项目id
	AuthType int64 `protobuf:"varint,2,opt,name=authType,proto3" json:"authType,omitempty"` // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
}

func (x *UserAreaApplyCreateReq) Reset() {
	*x = UserAreaApplyCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaApplyCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaApplyCreateReq) ProtoMessage() {}

func (x *UserAreaApplyCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaApplyCreateReq.ProtoReflect.Descriptor instead.
func (*UserAreaApplyCreateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{171}
}

func (x *UserAreaApplyCreateReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *UserAreaApplyCreateReq) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

type UserAreaApplyIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                   //进行数据分页（不传默认2000相当于全部）
	AreaID    int64     `protobuf:"varint,2,opt,name=areaID,proto3" json:"areaID,omitempty"`              //项目id
	AuthTypes []int64   `protobuf:"varint,3,rep,packed,name=authTypes,proto3" json:"authTypes,omitempty"` // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
}

func (x *UserAreaApplyIndexReq) Reset() {
	*x = UserAreaApplyIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaApplyIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaApplyIndexReq) ProtoMessage() {}

func (x *UserAreaApplyIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaApplyIndexReq.ProtoReflect.Descriptor instead.
func (*UserAreaApplyIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{172}
}

func (x *UserAreaApplyIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UserAreaApplyIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *UserAreaApplyIndexReq) GetAuthTypes() []int64 {
	if x != nil {
		return x.AuthTypes
	}
	return nil
}

type UserAreaApplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //项目id
	UserID      int64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	AreaID      int64 `protobuf:"varint,3,opt,name=areaID,proto3" json:"areaID,omitempty"`     //项目id
	AuthType    int64 `protobuf:"varint,4,opt,name=authType,proto3" json:"authType,omitempty"` // 1:读权限,只能读,不能写 4:管理权限,可以修改别人的权限
	CreatedTime int64 `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *UserAreaApplyInfo) Reset() {
	*x = UserAreaApplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaApplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaApplyInfo) ProtoMessage() {}

func (x *UserAreaApplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaApplyInfo.ProtoReflect.Descriptor instead.
func (*UserAreaApplyInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{173}
}

func (x *UserAreaApplyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserAreaApplyInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserAreaApplyInfo) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *UserAreaApplyInfo) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

func (x *UserAreaApplyInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type UserAreaApplyIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*UserAreaApplyInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //用户数据权限列表
}

func (x *UserAreaApplyIndexResp) Reset() {
	*x = UserAreaApplyIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaApplyIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaApplyIndexResp) ProtoMessage() {}

func (x *UserAreaApplyIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaApplyIndexResp.ProtoReflect.Descriptor instead.
func (*UserAreaApplyIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{174}
}

func (x *UserAreaApplyIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserAreaApplyIndexResp) GetList() []*UserAreaApplyInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type UserAreaApplyDealReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsApprove bool    `protobuf:"varint,1,opt,name=isApprove,proto3" json:"isApprove,omitempty"` //是否同意
	Ids       []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`      //授权申请的id列表
}

func (x *UserAreaApplyDealReq) Reset() {
	*x = UserAreaApplyDealReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAreaApplyDealReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAreaApplyDealReq) ProtoMessage() {}

func (x *UserAreaApplyDealReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAreaApplyDealReq.ProtoReflect.Descriptor instead.
func (*UserAreaApplyDealReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{175}
}

func (x *UserAreaApplyDealReq) GetIsApprove() bool {
	if x != nil {
		return x.IsApprove
	}
	return false
}

func (x *UserAreaApplyDealReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DictInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group      string                  `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`            //分组
	Name       string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`              // 字典名（中）
	Code       string                  `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`              // 字典编码
	Desc       *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`              // 模块描述
	Body       *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`              // 自定义数据
	StructType int64                   `protobuf:"varint,7,opt,name=structType,proto3" json:"structType,omitempty"` //结构类型(不可修改) 1:列表(默认) 2:树型
}

func (x *DictInfo) Reset() {
	*x = DictInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfo) ProtoMessage() {}

func (x *DictInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfo.ProtoReflect.Descriptor instead.
func (*DictInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{176}
}

func (x *DictInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DictInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DictInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *DictInfo) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *DictInfo) GetStructType() int64 {
	if x != nil {
		return x.StructType
	}
	return 0
}

type DictInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DictInfoReadReq) Reset() {
	*x = DictInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfoReadReq) ProtoMessage() {}

func (x *DictInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfoReadReq.ProtoReflect.Descriptor instead.
func (*DictInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{177}
}

func (x *DictInfoReadReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictInfoReadReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type DictInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name  string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Group string    `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *DictInfoIndexReq) Reset() {
	*x = DictInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfoIndexReq) ProtoMessage() {}

func (x *DictInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfoIndexReq.ProtoReflect.Descriptor instead.
func (*DictInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{178}
}

func (x *DictInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DictInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictInfoIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type DictInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DictInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DictInfoIndexResp) Reset() {
	*x = DictInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfoIndexResp) ProtoMessage() {}

func (x *DictInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfoIndexResp.ProtoReflect.Descriptor instead.
func (*DictInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{179}
}

func (x *DictInfoIndexResp) GetList() []*DictInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DictInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DictDetailReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DictCode     string `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`          // 关联标记
	Value        string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                // 字典值
	WithFather   bool   `protobuf:"varint,4,opt,name=withFather,proto3" json:"withFather,omitempty"`     //是否返回父级
	WithChildren bool   `protobuf:"varint,5,opt,name=withChildren,proto3" json:"withChildren,omitempty"` //是否返回子级
}

func (x *DictDetailReadReq) Reset() {
	*x = DictDetailReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetailReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetailReadReq) ProtoMessage() {}

func (x *DictDetailReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetailReadReq.ProtoReflect.Descriptor instead.
func (*DictDetailReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{180}
}

func (x *DictDetailReadReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictDetailReadReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictDetailReadReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictDetailReadReq) GetWithFather() bool {
	if x != nil {
		return x.WithFather
	}
	return false
}

func (x *DictDetailReadReq) GetWithChildren() bool {
	if x != nil {
		return x.WithChildren
	}
	return false
}

type DictDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DictCode string                  `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`   // 关联标记
	Label    string                  `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`         // 展示值
	Value    string                  `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`         // 字典值
	Sort     int64                   `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`          // 排序标记
	Desc     *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`           // 模块描述
	Status   int64                   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`      // 状态  1:启用,2:禁用
	Body     *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`           // 自定义数据
	IdPath   string                  `protobuf:"bytes,10,opt,name=idPath,proto3" json:"idPath,omitempty"`      //1-2-3-的格式记录顶级区域到当前id的路径
	ParentID int64                   `protobuf:"varint,11,opt,name=parentID,proto3" json:"parentID,omitempty"` //父节点
	Parent   *DictDetail             `protobuf:"bytes,12,opt,name=parent,proto3" json:"parent,omitempty"`
	Children []*DictDetail           `protobuf:"bytes,13,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DictDetail) Reset() {
	*x = DictDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetail) ProtoMessage() {}

func (x *DictDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetail.ProtoReflect.Descriptor instead.
func (*DictDetail) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{181}
}

func (x *DictDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictDetail) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictDetail) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DictDetail) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictDetail) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DictDetail) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *DictDetail) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDetail) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *DictDetail) GetIdPath() string {
	if x != nil {
		return x.IdPath
	}
	return ""
}

func (x *DictDetail) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *DictDetail) GetParent() *DictDetail {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *DictDetail) GetChildren() []*DictDetail {
	if x != nil {
		return x.Children
	}
	return nil
}

type DictDetailIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`           //分页信息
	DictCode string    `protobuf:"bytes,2,opt,name=dictCode,proto3" json:"dictCode,omitempty"`   // 关联标记
	ParentID int64     `protobuf:"varint,11,opt,name=parentID,proto3" json:"parentID,omitempty"` //父节点
	Status   int64     `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`      // 状态  1:启用,2:禁用
	Label    string    `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`         // 展示值
	Value    string    `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`         // 字典值
	Values   []string  `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`       //字典值列表
}

func (x *DictDetailIndexReq) Reset() {
	*x = DictDetailIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetailIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetailIndexReq) ProtoMessage() {}

func (x *DictDetailIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetailIndexReq.ProtoReflect.Descriptor instead.
func (*DictDetailIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{182}
}

func (x *DictDetailIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DictDetailIndexReq) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictDetailIndexReq) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *DictDetailIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DictDetailIndexReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DictDetailIndexReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictDetailIndexReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type DictDetailIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DictDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DictDetailIndexResp) Reset() {
	*x = DictDetailIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDetailIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDetailIndexResp) ProtoMessage() {}

func (x *DictDetailIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDetailIndexResp.ProtoReflect.Descriptor instead.
func (*DictDetailIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{183}
}

func (x *DictDetailIndexResp) GetList() []*DictDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DictDetailIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeptSyncJobReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeptSyncJobReadReq) Reset() {
	*x = DeptSyncJobReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJobReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJobReadReq) ProtoMessage() {}

func (x *DeptSyncJobReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJobReadReq.ProtoReflect.Descriptor instead.
func (*DeptSyncJobReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{184}
}

func (x *DeptSyncJobReadReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeptSyncJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Direction   int64             `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`                                                                                      // 同步的方向,1上游同步到联犀(默认),2联犀同步到下游
	ThirdType   string            `protobuf:"bytes,3,opt,name=thirdType,proto3" json:"thirdType,omitempty"`                                                                                       //同步的类型
	ThirdConfig *ThirdAppConfig   `protobuf:"bytes,4,opt,name=thirdConfig,proto3" json:"thirdConfig,omitempty"`                                                                                   //第三方配置
	FieldMap    map[string]string `protobuf:"bytes,5,rep,name=fieldMap,proto3" json:"fieldMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //用户字段映射,左边是联犀的字段,右边是第三方的,不填写就是全量映射
	SyncDeptIDs []int64           `protobuf:"varint,6,rep,packed,name=syncDeptIDs,proto3" json:"syncDeptIDs,omitempty"`                                                                           //同步的第三方部门id列表,不填为同步全部
	IsAddSync   int64             `protobuf:"varint,7,opt,name=isAddSync,proto3" json:"isAddSync,omitempty"`                                                                                      //新增人员自动同步,默认为1
	SyncMode    int64             `protobuf:"varint,8,opt,name=syncMode,proto3" json:"syncMode,omitempty"`                                                                                        //同步模式: 1:手动(默认) 2: 定时同步(半小时) 3: 实时同步
	CreatedTime int64             `protobuf:"varint,9,opt,name=createdTime,proto3" json:"createdTime,omitempty"`                                                                                  //创建时间
}

func (x *DeptSyncJob) Reset() {
	*x = DeptSyncJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJob) ProtoMessage() {}

func (x *DeptSyncJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJob.ProtoReflect.Descriptor instead.
func (*DeptSyncJob) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{185}
}

func (x *DeptSyncJob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptSyncJob) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *DeptSyncJob) GetThirdType() string {
	if x != nil {
		return x.ThirdType
	}
	return ""
}

func (x *DeptSyncJob) GetThirdConfig() *ThirdAppConfig {
	if x != nil {
		return x.ThirdConfig
	}
	return nil
}

func (x *DeptSyncJob) GetFieldMap() map[string]string {
	if x != nil {
		return x.FieldMap
	}
	return nil
}

func (x *DeptSyncJob) GetSyncDeptIDs() []int64 {
	if x != nil {
		return x.SyncDeptIDs
	}
	return nil
}

func (x *DeptSyncJob) GetIsAddSync() int64 {
	if x != nil {
		return x.IsAddSync
	}
	return 0
}

func (x *DeptSyncJob) GetSyncMode() int64 {
	if x != nil {
		return x.SyncMode
	}
	return 0
}

func (x *DeptSyncJob) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type DeptSyncJobIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`            //分页信息
	Direction int64     `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"` // 同步的方向,1上游同步到联犀(默认),2联犀同步到下游
	ThirdType string    `protobuf:"bytes,3,opt,name=thirdType,proto3" json:"thirdType,omitempty"`  //同步的类型
	SyncMode  int64     `protobuf:"varint,8,opt,name=syncMode,proto3" json:"syncMode,omitempty"`   //同步模式: 1:手动(默认) 2: 定时同步(半小时) 3: 实时同步
}

func (x *DeptSyncJobIndexReq) Reset() {
	*x = DeptSyncJobIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJobIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJobIndexReq) ProtoMessage() {}

func (x *DeptSyncJobIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJobIndexReq.ProtoReflect.Descriptor instead.
func (*DeptSyncJobIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{186}
}

func (x *DeptSyncJobIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeptSyncJobIndexReq) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *DeptSyncJobIndexReq) GetThirdType() string {
	if x != nil {
		return x.ThirdType
	}
	return ""
}

func (x *DeptSyncJobIndexReq) GetSyncMode() int64 {
	if x != nil {
		return x.SyncMode
	}
	return 0
}

type DeptSyncJobIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeptSyncJob `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeptSyncJobIndexResp) Reset() {
	*x = DeptSyncJobIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJobIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJobIndexResp) ProtoMessage() {}

func (x *DeptSyncJobIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJobIndexResp.ProtoReflect.Descriptor instead.
func (*DeptSyncJobIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{187}
}

func (x *DeptSyncJobIndexResp) GetList() []*DeptSyncJob {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeptSyncJobIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeptInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WithFather   bool  `protobuf:"varint,2,opt,name=withFather,proto3" json:"withFather,omitempty"`     //是否返回父级
	WithChildren bool  `protobuf:"varint,3,opt,name=withChildren,proto3" json:"withChildren,omitempty"` //是否返回子级
}

func (x *DeptInfoReadReq) Reset() {
	*x = DeptInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfoReadReq) ProtoMessage() {}

func (x *DeptInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfoReadReq.ProtoReflect.Descriptor instead.
func (*DeptInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{188}
}

func (x *DeptInfoReadReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptInfoReadReq) GetWithFather() bool {
	if x != nil {
		return x.WithFather
	}
	return false
}

func (x *DeptInfoReadReq) GetWithChildren() bool {
	if x != nil {
		return x.WithChildren
	}
	return false
}

type DeptSyncJobExecuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID int64 `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"` //同步任务的ID
}

func (x *DeptSyncJobExecuteReq) Reset() {
	*x = DeptSyncJobExecuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJobExecuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJobExecuteReq) ProtoMessage() {}

func (x *DeptSyncJobExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJobExecuteReq.ProtoReflect.Descriptor instead.
func (*DeptSyncJobExecuteReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{189}
}

func (x *DeptSyncJobExecuteReq) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

type DeptSyncJobExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptSyncJobExecuteResp) Reset() {
	*x = DeptSyncJobExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptSyncJobExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptSyncJobExecuteResp) ProtoMessage() {}

func (x *DeptSyncJobExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptSyncJobExecuteResp.ProtoReflect.Descriptor instead.
func (*DeptSyncJobExecuteResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{190}
}

type ThirdDeptInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo       `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //分页信息
	ParentID    int64           `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`      //父节点
	ThirdType   string          `protobuf:"bytes,3,opt,name=thirdType,proto3" json:"thirdType,omitempty"`     //第三方的类型 ding:钉钉  wxE:企业微信
	ThirdConfig *ThirdAppConfig `protobuf:"bytes,4,opt,name=thirdConfig,proto3" json:"thirdConfig,omitempty"` //第三方配置
}

func (x *ThirdDeptInfoIndexReq) Reset() {
	*x = ThirdDeptInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdDeptInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdDeptInfoIndexReq) ProtoMessage() {}

func (x *ThirdDeptInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdDeptInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ThirdDeptInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{191}
}

func (x *ThirdDeptInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ThirdDeptInfoIndexReq) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *ThirdDeptInfoIndexReq) GetThirdType() string {
	if x != nil {
		return x.ThirdType
	}
	return ""
}

func (x *ThirdDeptInfoIndexReq) GetThirdConfig() *ThirdAppConfig {
	if x != nil {
		return x.ThirdConfig
	}
	return nil
}

type ThirdDeptInfoReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     //需要获取的第三方部门ID,顶级为1
	WithFather   bool            `protobuf:"varint,2,opt,name=withFather,proto3" json:"withFather,omitempty"`     //是否返回父级
	WithChildren bool            `protobuf:"varint,3,opt,name=withChildren,proto3" json:"withChildren,omitempty"` //是否返回子级
	ThirdType    string          `protobuf:"bytes,4,opt,name=thirdType,proto3" json:"thirdType,omitempty"`        //第三方的类型 ding:钉钉  wxE:企业微信
	ThirdConfig  *ThirdAppConfig `protobuf:"bytes,5,opt,name=thirdConfig,proto3" json:"thirdConfig,omitempty"`    //第三方配置
}

func (x *ThirdDeptInfoReadReq) Reset() {
	*x = ThirdDeptInfoReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdDeptInfoReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdDeptInfoReadReq) ProtoMessage() {}

func (x *ThirdDeptInfoReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdDeptInfoReadReq.ProtoReflect.Descriptor instead.
func (*ThirdDeptInfoReadReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{192}
}

func (x *ThirdDeptInfoReadReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThirdDeptInfoReadReq) GetWithFather() bool {
	if x != nil {
		return x.WithFather
	}
	return false
}

func (x *ThirdDeptInfoReadReq) GetWithChildren() bool {
	if x != nil {
		return x.WithChildren
	}
	return false
}

func (x *ThirdDeptInfoReadReq) GetThirdType() string {
	if x != nil {
		return x.ThirdType
	}
	return ""
}

func (x *ThirdDeptInfoReadReq) GetThirdConfig() *ThirdAppConfig {
	if x != nil {
		return x.ThirdConfig
	}
	return nil
}

type DeptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`          // 部门名称
	Desc       *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`          // 模块描述
	Status     int64                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`     // 状态  1:启用,2:禁用
	ParentID   int64                   `protobuf:"varint,5,opt,name=parentID,proto3" json:"parentID,omitempty"` //父节点
	Parent     *DeptInfo               `protobuf:"bytes,6,opt,name=parent,proto3" json:"parent,omitempty"`
	Children   []*DeptInfo             `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
	Sort       int64                   `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"` // 排序标记
	IdPath     string                  `protobuf:"bytes,9,opt,name=idPath,proto3" json:"idPath,omitempty"`
	UserCount  int64                   `protobuf:"varint,10,opt,name=userCount,proto3" json:"userCount,omitempty"`   //只读,用户统计,包含下级部门的人数
	DingTalkID int64                   `protobuf:"varint,11,opt,name=dingTalkID,proto3" json:"dingTalkID,omitempty"` // 钉钉的部门ID
}

func (x *DeptInfo) Reset() {
	*x = DeptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfo) ProtoMessage() {}

func (x *DeptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfo.ProtoReflect.Descriptor instead.
func (*DeptInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{193}
}

func (x *DeptInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeptInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *DeptInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptInfo) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *DeptInfo) GetParent() *DeptInfo {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *DeptInfo) GetChildren() []*DeptInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *DeptInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *DeptInfo) GetIdPath() string {
	if x != nil {
		return x.IdPath
	}
	return ""
}

func (x *DeptInfo) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *DeptInfo) GetDingTalkID() int64 {
	if x != nil {
		return x.DingTalkID
	}
	return 0
}

type DeptInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`                        //分页信息
	ParentID    int64     `protobuf:"varint,2,opt,name=parentID,proto3" json:"parentID,omitempty"`               //父节点
	Status      int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                   // 状态  1:启用,2:禁用
	Name        string    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                        // 部门名称
	DingTalkIDs []int64   `protobuf:"varint,11,rep,packed,name=dingTalkIDs,proto3" json:"dingTalkIDs,omitempty"` // 钉钉的部门ID
}

func (x *DeptInfoIndexReq) Reset() {
	*x = DeptInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfoIndexReq) ProtoMessage() {}

func (x *DeptInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfoIndexReq.ProtoReflect.Descriptor instead.
func (*DeptInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{194}
}

func (x *DeptInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *DeptInfoIndexReq) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *DeptInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeptInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeptInfoIndexReq) GetDingTalkIDs() []int64 {
	if x != nil {
		return x.DingTalkIDs
	}
	return nil
}

type DeptInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DeptInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DeptInfoIndexResp) Reset() {
	*x = DeptInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptInfoIndexResp) ProtoMessage() {}

func (x *DeptInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptInfoIndexResp.ProtoReflect.Descriptor instead.
func (*DeptInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{195}
}

func (x *DeptInfoIndexResp) GetList() []*DeptInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeptInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ModuleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 模块名称
	Code       string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 模块编码
	Desc       *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"` // 模块描述
	Type       int64                   `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	SubType    int64                   `protobuf:"varint,12,opt,name=subType,proto3" json:"subType,omitempty"`
	Path       string                  `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Url        string                  `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Icon       string                  `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`
	Order      int64                   `protobuf:"varint,9,opt,name=order,proto3" json:"order,omitempty"`
	HideInMenu int64                   `protobuf:"varint,10,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	Body       *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=body,proto3" json:"body,omitempty"`
	Tag        int64                   `protobuf:"varint,13,opt,name=tag,proto3" json:"tag,omitempty"` //标签: 1:通用 2:选配
}

func (x *ModuleInfo) Reset() {
	*x = ModuleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfo) ProtoMessage() {}

func (x *ModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfo.ProtoReflect.Descriptor instead.
func (*ModuleInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{196}
}

func (x *ModuleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModuleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ModuleInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ModuleInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ModuleInfo) GetSubType() int64 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *ModuleInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ModuleInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ModuleInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ModuleInfo) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ModuleInfo) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *ModuleInfo) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ModuleInfo) GetTag() int64 {
	if x != nil {
		return x.Tag
	}
	return 0
}

type ModuleInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code    string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Codes   []string  `protobuf:"bytes,4,rep,name=codes,proto3" json:"codes,omitempty"`
	AppCode string    `protobuf:"bytes,5,opt,name=appCode,proto3" json:"appCode,omitempty"`
	Type    int64     `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ModuleInfoIndexReq) Reset() {
	*x = ModuleInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoIndexReq) ProtoMessage() {}

func (x *ModuleInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ModuleInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{197}
}

func (x *ModuleInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ModuleInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModuleInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ModuleInfoIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ModuleInfoIndexReq) GetAppCode() string {
	if x != nil {
		return x.AppCode
	}
	return ""
}

func (x *ModuleInfoIndexReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ModuleInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ModuleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ModuleInfoIndexResp) Reset() {
	*x = ModuleInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleInfoIndexResp) ProtoMessage() {}

func (x *ModuleInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ModuleInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{198}
}

func (x *ModuleInfoIndexResp) GetList() []*ModuleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ModuleInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`        // 应用名称
	Type    string                  `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`        //应用类型 web:web页面  app:应用  mini:小程序
	SubType string                  `protobuf:"bytes,10,opt,name=subType,proto3" json:"subType,omitempty"` //子类型  wx:微信小程序  ding:钉钉小程序
	Code    string                  `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`        // 应用编码
	Desc    *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`        // 应用描述
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{199}
}

func (x *AppInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppInfo) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *AppInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

type AppInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name  string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Code  string    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Codes []string  `protobuf:"bytes,4,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *AppInfoIndexReq) Reset() {
	*x = AppInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoIndexReq) ProtoMessage() {}

func (x *AppInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AppInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{200}
}

func (x *AppInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AppInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppInfoIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type AppInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AppInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AppInfoIndexResp) Reset() {
	*x = AppInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoIndexResp) ProtoMessage() {}

func (x *AppInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AppInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{201}
}

func (x *AppInfoIndexResp) GetList() []*AppInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AppInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AppModuleMultiUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` //应用code
	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *AppModuleMultiUpdateReq) Reset() {
	*x = AppModuleMultiUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleMultiUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleMultiUpdateReq) ProtoMessage() {}

func (x *AppModuleMultiUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleMultiUpdateReq.ProtoReflect.Descriptor instead.
func (*AppModuleMultiUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{202}
}

func (x *AppModuleMultiUpdateReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AppModuleMultiUpdateReq) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type AppModuleIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` //应用code
}

func (x *AppModuleIndexReq) Reset() {
	*x = AppModuleIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleIndexReq) ProtoMessage() {}

func (x *AppModuleIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleIndexReq.ProtoReflect.Descriptor instead.
func (*AppModuleIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{203}
}

func (x *AppModuleIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AppModuleIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCodes []string `protobuf:"bytes,3,rep,name=moduleCodes,proto3" json:"moduleCodes,omitempty"`
}

func (x *AppModuleIndexResp) Reset() {
	*x = AppModuleIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppModuleIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppModuleIndexResp) ProtoMessage() {}

func (x *AppModuleIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppModuleIndexResp.ProtoReflect.Descriptor instead.
func (*AppModuleIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{204}
}

func (x *AppModuleIndexResp) GetModuleCodes() []string {
	if x != nil {
		return x.ModuleCodes
	}
	return nil
}

type RoleInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息
	Name   string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status int64     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Ids    []int64   `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"` //角色id列表
	Codes  []string  `protobuf:"bytes,5,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *RoleInfoIndexReq) Reset() {
	*x = RoleInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoIndexReq) ProtoMessage() {}

func (x *RoleInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoIndexReq.ProtoReflect.Descriptor instead.
func (*RoleInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{205}
}

func (x *RoleInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *RoleInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfoIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleInfoIndexReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoleInfoIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type RoleInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*RoleInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RoleInfoIndexResp) Reset() {
	*x = RoleInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfoIndexResp) ProtoMessage() {}

func (x *RoleInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfoIndexResp.ProtoReflect.Descriptor instead.
func (*RoleInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{206}
}

func (x *RoleInfoIndexResp) GetList() []*RoleInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RoleInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc        *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedTime int64                   `protobuf:"varint,4,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Status      int64                   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Code        string                  `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{207}
}

func (x *RoleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetDesc() *wrapperspb.StringValue {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *RoleInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *RoleInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type RoleAppUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppCodes []string `protobuf:"bytes,2,rep,name=appCodes,proto3" json:"appCodes,omitempty"`
}

func (x *RoleAppUpdateReq) Reset() {
	*x = RoleAppUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleAppUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAppUpdateReq) ProtoMessage() {}

func (x *RoleAppUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAppUpdateReq.ProtoReflect.Descriptor instead.
func (*RoleAppUpdateReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{208}
}

func (x *RoleAppUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleAppUpdateReq) GetAppCodes() []string {
	if x != nil {
		return x.AppCodes
	}
	return nil
}

type MenuMultiImportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string `protobuf:"bytes,1,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` // 应用编号
	Mode       int64  `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`            //同步模式, 1 只新增,不修改(默认) 2 新增并修改 3 新增修改及删除不存在的
	Menu       string `protobuf:"bytes,3,opt,name=menu,proto3" json:"menu,omitempty"`             //菜单json
}

func (x *MenuMultiImportReq) Reset() {
	*x = MenuMultiImportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMultiImportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMultiImportReq) ProtoMessage() {}

func (x *MenuMultiImportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMultiImportReq.ProtoReflect.Descriptor instead.
func (*MenuMultiImportReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{209}
}

func (x *MenuMultiImportReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *MenuMultiImportReq) GetMode() int64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *MenuMultiImportReq) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type MenuMultiImportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`             //导入总接口数
	ErrCount    int64 `protobuf:"varint,2,opt,name=errCount,proto3" json:"errCount,omitempty"`       //失败数
	IgnoreCount int64 `protobuf:"varint,3,opt,name=ignoreCount,proto3" json:"ignoreCount,omitempty"` //忽略数
	SuccCount   int64 `protobuf:"varint,4,opt,name=succCount,proto3" json:"succCount,omitempty"`     //成功数
}

func (x *MenuMultiImportResp) Reset() {
	*x = MenuMultiImportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMultiImportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMultiImportResp) ProtoMessage() {}

func (x *MenuMultiImportResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMultiImportResp.ProtoReflect.Descriptor instead.
func (*MenuMultiImportResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{210}
}

func (x *MenuMultiImportResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MenuMultiImportResp) GetErrCount() int64 {
	if x != nil {
		return x.ErrCount
	}
	return 0
}

func (x *MenuMultiImportResp) GetIgnoreCount() int64 {
	if x != nil {
		return x.IgnoreCount
	}
	return 0
}

func (x *MenuMultiImportResp) GetSuccCount() int64 {
	if x != nil {
		return x.SuccCount
	}
	return 0
}

type MenuMultiExportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string `protobuf:"bytes,1,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"` // 应用编号
}

func (x *MenuMultiExportReq) Reset() {
	*x = MenuMultiExportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMultiExportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMultiExportReq) ProtoMessage() {}

func (x *MenuMultiExportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMultiExportReq.ProtoReflect.Descriptor instead.
func (*MenuMultiExportReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{211}
}

func (x *MenuMultiExportReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

type MenuMultiExportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu string `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"` //导出的菜单json文件
}

func (x *MenuMultiExportResp) Reset() {
	*x = MenuMultiExportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMultiExportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMultiExportResp) ProtoMessage() {}

func (x *MenuMultiExportResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMultiExportResp.ProtoReflect.Descriptor instead.
func (*MenuMultiExportResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{212}
}

func (x *MenuMultiExportResp) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type MenuInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string  `protobuf:"bytes,1,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	MenuIDs    []int64 `protobuf:"varint,2,rep,packed,name=menuIDs,proto3" json:"menuIDs,omitempty"`
	IsRetTree  bool    `protobuf:"varint,3,opt,name=isRetTree,proto3" json:"isRetTree,omitempty"`
	IsCommon   int64   `protobuf:"varint,4,opt,name=isCommon,proto3" json:"isCommon,omitempty"` //是否常用菜单 1-是 2-否
}

func (x *MenuInfoIndexReq) Reset() {
	*x = MenuInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoIndexReq) ProtoMessage() {}

func (x *MenuInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoIndexReq.ProtoReflect.Descriptor instead.
func (*MenuInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{213}
}

func (x *MenuInfoIndexReq) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *MenuInfoIndexReq) GetMenuIDs() []int64 {
	if x != nil {
		return x.MenuIDs
	}
	return nil
}

func (x *MenuInfoIndexReq) GetIsRetTree() bool {
	if x != nil {
		return x.IsRetTree
	}
	return false
}

func (x *MenuInfoIndexReq) GetIsCommon() int64 {
	if x != nil {
		return x.IsCommon
	}
	return 0
}

type MenuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCode string                  `protobuf:"bytes,12,opt,name=moduleCode,proto3" json:"moduleCode,omitempty"`
	Id         int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentID   int64                   `protobuf:"varint,3,opt,name=parentID,proto3" json:"parentID,omitempty"`
	Type       int64                   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Path       string                  `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Component  string                  `protobuf:"bytes,6,opt,name=component,proto3" json:"component,omitempty"`
	Icon       string                  `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	Redirect   string                  `protobuf:"bytes,8,opt,name=redirect,proto3" json:"redirect,omitempty"`
	CreateTime int64                   `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Order      int64                   `protobuf:"varint,10,opt,name=order,proto3" json:"order,omitempty"`
	HideInMenu int64                   `protobuf:"varint,11,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	IsCommon   int64                   `protobuf:"varint,15,opt,name=isCommon,proto3" json:"isCommon,omitempty"` //是否常用菜单 1-是 2-否
	Body       *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=body,proto3" json:"body,omitempty"`
	Children   []*MenuInfo             `protobuf:"bytes,14,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuInfo) Reset() {
	*x = MenuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfo) ProtoMessage() {}

func (x *MenuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfo.ProtoReflect.Descriptor instead.
func (*MenuInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{214}
}

func (x *MenuInfo) GetModuleCode() string {
	if x != nil {
		return x.ModuleCode
	}
	return ""
}

func (x *MenuInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuInfo) GetParentID() int64 {
	if x != nil {
		return x.ParentID
	}
	return 0
}

func (x *MenuInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MenuInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuInfo) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuInfo) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MenuInfo) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *MenuInfo) GetHideInMenu() int64 {
	if x != nil {
		return x.HideInMenu
	}
	return 0
}

func (x *MenuInfo) GetIsCommon() int64 {
	if x != nil {
		return x.IsCommon
	}
	return 0
}

func (x *MenuInfo) GetBody() *wrapperspb.StringValue {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MenuInfo) GetChildren() []*MenuInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

type MenuInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MenuInfoIndexResp) Reset() {
	*x = MenuInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuInfoIndexResp) ProtoMessage() {}

func (x *MenuInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuInfoIndexResp.ProtoReflect.Descriptor instead.
func (*MenuInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{215}
}

func (x *MenuInfoIndexResp) GetList() []*MenuInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode         string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`           //坐标系 默认百度坐标系
	AccessKey    string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"` //设备地图key
	AccessSecret string `protobuf:"bytes,3,opt,name=accessSecret,proto3" json:"accessSecret,omitempty"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{216}
}

func (x *Map) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Map) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Map) GetAccessSecret() string {
	if x != nil {
		return x.AccessSecret
	}
	return ""
}

type ConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map *Map `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"` //设备地图相关配置
}

func (x *ConfigResp) Reset() {
	*x = ConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResp) ProtoMessage() {}

func (x *ConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResp.ProtoReflect.Descriptor instead.
func (*ConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{217}
}

func (x *ConfigResp) GetMap() *Map {
	if x != nil {
		return x.Map
	}
	return nil
}

type ApiInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`             // 分页信息
	Route      string    `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`           // 接口路由
	Method     string    `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`         // 接口请求方式: POST GET
	Name       string    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             // 接口名称
	AuthType   int64     `protobuf:"varint,5,opt,name=authType,proto3" json:"authType,omitempty"`    // 1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
	ApiIDs     []int64   `protobuf:"varint,6,rep,packed,name=apiIDs,proto3" json:"apiIDs,omitempty"` //API列表数据
	AccessCode string    `protobuf:"bytes,7,opt,name=accessCode,proto3" json:"accessCode,omitempty"`
}

func (x *ApiInfoIndexReq) Reset() {
	*x = ApiInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfoIndexReq) ProtoMessage() {}

func (x *ApiInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfoIndexReq.ProtoReflect.Descriptor instead.
func (*ApiInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{218}
}

func (x *ApiInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ApiInfoIndexReq) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ApiInfoIndexReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiInfoIndexReq) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

func (x *ApiInfoIndexReq) GetApiIDs() []int64 {
	if x != nil {
		return x.ApiIDs
	}
	return nil
}

func (x *ApiInfoIndexReq) GetAccessCode() string {
	if x != nil {
		return x.AccessCode
	}
	return ""
}

type ApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessCode    string `protobuf:"bytes,7,opt,name=accessCode,proto3" json:"accessCode,omitempty"`
	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                       // 接口编号
	Route         string `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`                  // 接口路由
	Method        string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`                // 接口请求方式: POST GET
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                    // 接口名称
	BusinessType  int64  `protobuf:"varint,6,opt,name=businessType,proto3" json:"businessType,omitempty"`   // 业务类型（1新增 2修改 3删除 4查询 5其它)
	RecordLogMode int64  `protobuf:"varint,8,opt,name=recordLogMode,proto3" json:"recordLogMode,omitempty"` //1为自动模式(读取类型忽略,其他类型记录日志) 2全部记录 3不记录
	Desc          string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc,omitempty"`                    //描述
}

func (x *ApiInfo) Reset() {
	*x = ApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfo) ProtoMessage() {}

func (x *ApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfo.ProtoReflect.Descriptor instead.
func (*ApiInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{219}
}

func (x *ApiInfo) GetAccessCode() string {
	if x != nil {
		return x.AccessCode
	}
	return ""
}

func (x *ApiInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiInfo) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ApiInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiInfo) GetBusinessType() int64 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *ApiInfo) GetRecordLogMode() int64 {
	if x != nil {
		return x.RecordLogMode
	}
	return 0
}

func (x *ApiInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ApiInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ApiInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 接口列表数据
	Total int64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 接口列表总记录数
}

func (x *ApiInfoIndexResp) Reset() {
	*x = ApiInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiInfoIndexResp) ProtoMessage() {}

func (x *ApiInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiInfoIndexResp.ProtoReflect.Descriptor instead.
func (*ApiInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{220}
}

func (x *ApiInfoIndexResp) GetList() []*ApiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ApiInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AccessInfoMultiImportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"` //模块
	Access string `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *AccessInfoMultiImportReq) Reset() {
	*x = AccessInfoMultiImportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfoMultiImportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfoMultiImportReq) ProtoMessage() {}

func (x *AccessInfoMultiImportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfoMultiImportReq.ProtoReflect.Descriptor instead.
func (*AccessInfoMultiImportReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{221}
}

func (x *AccessInfoMultiImportReq) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AccessInfoMultiImportReq) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type AccessInfoMultiImportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ErrCount    int64 `protobuf:"varint,2,opt,name=errCount,proto3" json:"errCount,omitempty"`
	IgnoreCount int64 `protobuf:"varint,3,opt,name=ignoreCount,proto3" json:"ignoreCount,omitempty"`
	SuccCount   int64 `protobuf:"varint,4,opt,name=succCount,proto3" json:"succCount,omitempty"`
}

func (x *AccessInfoMultiImportResp) Reset() {
	*x = AccessInfoMultiImportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfoMultiImportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfoMultiImportResp) ProtoMessage() {}

func (x *AccessInfoMultiImportResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfoMultiImportResp.ProtoReflect.Descriptor instead.
func (*AccessInfoMultiImportResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{222}
}

func (x *AccessInfoMultiImportResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AccessInfoMultiImportResp) GetErrCount() int64 {
	if x != nil {
		return x.ErrCount
	}
	return 0
}

func (x *AccessInfoMultiImportResp) GetIgnoreCount() int64 {
	if x != nil {
		return x.IgnoreCount
	}
	return 0
}

func (x *AccessInfoMultiImportResp) GetSuccCount() int64 {
	if x != nil {
		return x.SuccCount
	}
	return 0
}

type AccessInfoIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`     // 分页信息
	Module     string    `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"` //模块
	Group      string    `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`   // 接口分组
	Code       string    `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Codes      []string  `protobuf:"bytes,7,rep,name=codes,proto3" json:"codes,omitempty"`
	Name       string    `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`                    // 接口名称
	IsNeedAuth int64     `protobuf:"varint,9,opt,name=isNeedAuth,proto3" json:"isNeedAuth,omitempty"`       //是否需要权限认证 1是 2否
	AuthTypes  []int64   `protobuf:"varint,10,rep,packed,name=authTypes,proto3" json:"authTypes,omitempty"` // 1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
	WithApis   bool      `protobuf:"varint,11,opt,name=WithApis,proto3" json:"WithApis,omitempty"`
}

func (x *AccessInfoIndexReq) Reset() {
	*x = AccessInfoIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfoIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfoIndexReq) ProtoMessage() {}

func (x *AccessInfoIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfoIndexReq.ProtoReflect.Descriptor instead.
func (*AccessInfoIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{223}
}

func (x *AccessInfoIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AccessInfoIndexReq) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AccessInfoIndexReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccessInfoIndexReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AccessInfoIndexReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *AccessInfoIndexReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessInfoIndexReq) GetIsNeedAuth() int64 {
	if x != nil {
		return x.IsNeedAuth
	}
	return 0
}

func (x *AccessInfoIndexReq) GetAuthTypes() []int64 {
	if x != nil {
		return x.AuthTypes
	}
	return nil
}

func (x *AccessInfoIndexReq) GetWithApis() bool {
	if x != nil {
		return x.WithApis
	}
	return false
}

type AccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // 编号
	Module     string     `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`          //模块
	Group      string     `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`            // 分组
	Code       string     `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`              //编码
	Name       string     `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`              // 名称
	IsNeedAuth int64      `protobuf:"varint,6,opt,name=isNeedAuth,proto3" json:"isNeedAuth,omitempty"` //是否需要权限认证 1是 2否
	AuthType   int64      `protobuf:"varint,7,opt,name=authType,proto3" json:"authType,omitempty"`     // 1(all) 全部人可以操作 2(admin) 默认授予租户管理员权限 3(superAdmin,supper) default租户才可以操作(超管是跨租户的)
	Desc       string     `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`              //描述
	Apis       []*ApiInfo `protobuf:"bytes,9,rep,name=Apis,proto3" json:"Apis,omitempty"`
}

func (x *AccessInfo) Reset() {
	*x = AccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfo) ProtoMessage() {}

func (x *AccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfo.ProtoReflect.Descriptor instead.
func (*AccessInfo) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{224}
}

func (x *AccessInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccessInfo) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AccessInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AccessInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AccessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessInfo) GetIsNeedAuth() int64 {
	if x != nil {
		return x.IsNeedAuth
	}
	return 0
}

func (x *AccessInfo) GetAuthType() int64 {
	if x != nil {
		return x.AuthType
	}
	return 0
}

func (x *AccessInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AccessInfo) GetApis() []*ApiInfo {
	if x != nil {
		return x.Apis
	}
	return nil
}

type AccessInfoIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*AccessInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    // 接口列表数据
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 接口列表总记录数
}

func (x *AccessInfoIndexResp) Reset() {
	*x = AccessInfoIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessInfoIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessInfoIndexResp) ProtoMessage() {}

func (x *AccessInfoIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessInfoIndexResp.ProtoReflect.Descriptor instead.
func (*AccessInfoIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{225}
}

func (x *AccessInfoIndexResp) GetList() []*AccessInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AccessInfoIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OpsWorkOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Number       string            `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`                                                                                         //编号
	RaiseUserID  int64             `protobuf:"varint,3,opt,name=raiseUserID,proto3" json:"raiseUserID,omitempty"`                                                                              //问题提出的用户
	AreaID       int64             `protobuf:"varint,4,opt,name=areaID,proto3" json:"areaID,omitempty"`                                                                                        //项目区域id
	Type         string            `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                                                                             //工单类型: deviceMaintenance:设备维修工单 sceneAlarm:场景自动化报警
	Params       map[string]string `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //参数 json格式
	IssueDesc    string            `protobuf:"bytes,8,opt,name=issueDesc,proto3" json:"issueDesc,omitempty"`                                                                                   //问题描述
	Status       int64             `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`                                                                                       // 状态（1 待处理 2:处理中 3:已完成） (可修改)
	CreatedTime  int64             `protobuf:"varint,11,opt,name=createdTime,proto3" json:"createdTime,omitempty"`                                                                             //创建时间
	HandleTime   int64             `protobuf:"varint,12,opt,name=handleTime,proto3" json:"handleTime,omitempty"`
	FinishedTime int64             `protobuf:"varint,13,opt,name=finishedTime,proto3" json:"finishedTime,omitempty"`
}

func (x *OpsWorkOrder) Reset() {
	*x = OpsWorkOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsWorkOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsWorkOrder) ProtoMessage() {}

func (x *OpsWorkOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsWorkOrder.ProtoReflect.Descriptor instead.
func (*OpsWorkOrder) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{226}
}

func (x *OpsWorkOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpsWorkOrder) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *OpsWorkOrder) GetRaiseUserID() int64 {
	if x != nil {
		return x.RaiseUserID
	}
	return 0
}

func (x *OpsWorkOrder) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *OpsWorkOrder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OpsWorkOrder) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *OpsWorkOrder) GetIssueDesc() string {
	if x != nil {
		return x.IssueDesc
	}
	return ""
}

func (x *OpsWorkOrder) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpsWorkOrder) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *OpsWorkOrder) GetHandleTime() int64 {
	if x != nil {
		return x.HandleTime
	}
	return 0
}

func (x *OpsWorkOrder) GetFinishedTime() int64 {
	if x != nil {
		return x.FinishedTime
	}
	return 0
}

type OpsWorkOrderIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`      //分页信息 只获取一个则不填
	Status int64     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //状态（1 待处理 2:处理中 3:已完成）
	AreaID int64     `protobuf:"varint,3,opt,name=areaID,proto3" json:"areaID,omitempty"` //区域ID过滤
	Type   string    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`      //工单类型
	Number string    `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`  //编号
}

func (x *OpsWorkOrderIndexReq) Reset() {
	*x = OpsWorkOrderIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsWorkOrderIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsWorkOrderIndexReq) ProtoMessage() {}

func (x *OpsWorkOrderIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsWorkOrderIndexReq.ProtoReflect.Descriptor instead.
func (*OpsWorkOrderIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{227}
}

func (x *OpsWorkOrderIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *OpsWorkOrderIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OpsWorkOrderIndexReq) GetAreaID() int64 {
	if x != nil {
		return x.AreaID
	}
	return 0
}

func (x *OpsWorkOrderIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OpsWorkOrderIndexReq) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type OpsWorkOrderIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*OpsWorkOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *OpsWorkOrderIndexResp) Reset() {
	*x = OpsWorkOrderIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsWorkOrderIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsWorkOrderIndexResp) ProtoMessage() {}

func (x *OpsWorkOrderIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsWorkOrderIndexResp.ProtoReflect.Descriptor instead.
func (*OpsWorkOrderIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{228}
}

func (x *OpsWorkOrderIndexResp) GetList() []*OpsWorkOrder {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OpsWorkOrderIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OpsFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantCode         string `protobuf:"bytes,2,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`
	RaiseUserID        int64  `protobuf:"varint,3,opt,name=raiseUserID,proto3" json:"raiseUserID,omitempty"`
	ProjectID          int64  `protobuf:"varint,4,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Type               string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ContactInformation string `protobuf:"bytes,6,opt,name=contactInformation,proto3" json:"contactInformation,omitempty"`
	IssueDesc          string `protobuf:"bytes,7,opt,name=issueDesc,proto3" json:"issueDesc,omitempty"`
	CreatedTime        int64  `protobuf:"varint,8,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Status             int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"` //状态（1 待处理 2:处理中 3:已完成）
}

func (x *OpsFeedback) Reset() {
	*x = OpsFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsFeedback) ProtoMessage() {}

func (x *OpsFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsFeedback.ProtoReflect.Descriptor instead.
func (*OpsFeedback) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{229}
}

func (x *OpsFeedback) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OpsFeedback) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *OpsFeedback) GetRaiseUserID() int64 {
	if x != nil {
		return x.RaiseUserID
	}
	return 0
}

func (x *OpsFeedback) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *OpsFeedback) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OpsFeedback) GetContactInformation() string {
	if x != nil {
		return x.ContactInformation
	}
	return ""
}

func (x *OpsFeedback) GetIssueDesc() string {
	if x != nil {
		return x.IssueDesc
	}
	return ""
}

func (x *OpsFeedback) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *OpsFeedback) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OpsFeedbackIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"` //分页信息 只获取一个则不填
	ProjectID   int64     `protobuf:"varint,2,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Type        string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	IsAllTenant bool      `protobuf:"varint,4,opt,name=isAllTenant,proto3" json:"isAllTenant,omitempty"` //default租户获取所有租户的信息
	TenantCode  string    `protobuf:"bytes,5,opt,name=tenantCode,proto3" json:"tenantCode,omitempty"`    //过滤所属租户,isAllTenant为true有效
	Status      int64     `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`           //状态（1 待处理 2:处理中 3:已完成）
}

func (x *OpsFeedbackIndexReq) Reset() {
	*x = OpsFeedbackIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsFeedbackIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsFeedbackIndexReq) ProtoMessage() {}

func (x *OpsFeedbackIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsFeedbackIndexReq.ProtoReflect.Descriptor instead.
func (*OpsFeedbackIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{230}
}

func (x *OpsFeedbackIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *OpsFeedbackIndexReq) GetProjectID() int64 {
	if x != nil {
		return x.ProjectID
	}
	return 0
}

func (x *OpsFeedbackIndexReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OpsFeedbackIndexReq) GetIsAllTenant() bool {
	if x != nil {
		return x.IsAllTenant
	}
	return false
}

func (x *OpsFeedbackIndexReq) GetTenantCode() string {
	if x != nil {
		return x.TenantCode
	}
	return ""
}

func (x *OpsFeedbackIndexReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type OpsFeedbackIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*OpsFeedback `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`    //设备信息
	Total int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` //总数(只有分页的时候会返回)
}

func (x *OpsFeedbackIndexResp) Reset() {
	*x = OpsFeedbackIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpsFeedbackIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpsFeedbackIndexResp) ProtoMessage() {}

func (x *OpsFeedbackIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpsFeedbackIndexResp.ProtoReflect.Descriptor instead.
func (*OpsFeedbackIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{231}
}

func (x *OpsFeedbackIndexResp) GetList() []*OpsFeedback {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OpsFeedbackIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PageInfo_OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 排序的字段名
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// 排序方式：0 aes, 1 desc
	Sort int64 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *PageInfo_OrderBy) Reset() {
	*x = PageInfo_OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sys_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo_OrderBy) ProtoMessage() {}

func (x *PageInfo_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sys_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo_OrderBy.ProtoReflect.Descriptor instead.
func (*PageInfo_OrderBy) Descriptor() ([]byte, []int) {
	return file_proto_sys_proto_rawDescGZIP(), []int{66, 0}
}

func (x *PageInfo_OrderBy) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *PageInfo_OrderBy) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

var File_proto_sys_proto protoreflect.FileDescriptor

var file_proto_sys_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x73, 0x79, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x54, 0x6f, 0x46, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x0e, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x41, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10,
	0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1a, 0x0a, 0x06, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a, 0x14, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd6, 0x02, 0x0a, 0x0e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x22, 0xe4, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x25, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x6d, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x53, 0x6d, 0x73, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x22, 0x62, 0x0a, 0x15, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x56,
	0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x53, 0x53, 0x4c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x53, 0x53, 0x4c, 0x22, 0x98, 0x01, 0x0a, 0x08,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x53, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x22, 0x83, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x17,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x6e, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x92, 0x02, 0x0a, 0x12, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x31, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72,
	0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x32, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x72, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72,
	0x33, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xbb, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x72, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x33, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x69, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a,
	0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x52, 0x0a, 0x1c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x22, 0x79, 0x0a, 0x0f, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3c, 0x0a,
	0x17, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x18, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x3f, 0x0a, 0x17, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x3d, 0x0a, 0x07, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x62, 0x48, 0x6f,
	0x6f, 0x6b, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x0b, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x44, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x43, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x72, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x74, 0x72, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x33, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x33, 0x12, 0x30, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x14, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xd4, 0x02, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x74, 0x72, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x72, 0x33, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x72, 0x33, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x44, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbe, 0x05, 0x0a, 0x0a, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x44, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x34, 0x0a, 0x15,
	0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x6d, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x44,
	0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x49, 0x6d,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x49, 0x6d, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x13,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb3,
	0x04, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x19, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x34,
	0x0a, 0x15, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x15, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4b,
	0x65, 0x65, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x4b, 0x65, 0x65, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4b, 0x65, 0x65, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x4b, 0x65, 0x65, 0x70,
	0x44, 0x61, 0x79, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x25, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75,
	0x74, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x61, 0x72,
	0x65, 0x61, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x22, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72,
	0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72,
	0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6d,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67, 0x22, 0x50,
	0x0a, 0x18, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x2a, 0x0a, 0x14, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x39, 0x0a, 0x15,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xf9, 0x02, 0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x69, 0x6e, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x69, 0x12, 0x2b, 0x0a, 0x06, 0x77, 0x78, 0x4d, 0x69,
	0x6e, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x77,
	0x78, 0x4d, 0x69, 0x6e, 0x69, 0x12, 0x2b, 0x0a, 0x06, 0x77, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x77, 0x78, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41,
	0x70, 0x70, 0x52, 0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x0f, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x11,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x17,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xdc, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x22, 0x40, 0x0a, 0x16, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x7f, 0x0a, 0x15, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x78, 0x0a, 0x18, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x41, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x96, 0x01, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x1a, 0x33, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6d, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6d, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x18, 0x0a, 0x06, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x30, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x51, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x70, 0x41,
	0x72, 0x65, 0x61, 0x73, 0x22, 0x85, 0x06, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x70, 0x73, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x70, 0x73, 0x6d, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6d, 0x67,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6d, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x53, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x61, 0x72,
	0x65, 0x61, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x52, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xa7, 0x07, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x73, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6d,
	0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6d, 0x67, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x79, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x79,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x24,
	0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x22, 0x51, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x12, 0x41, 0x72, 0x65, 0x61, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x41, 0x72, 0x65,
	0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x44,
	0x0a, 0x14, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x10, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x52, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x4c,
	0x65, 0x61, 0x66, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x11, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xda, 0x02, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x34,
	0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd8, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x41, 0x69, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x71, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x71,
	0x69, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6d, 0x31, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6d, 0x31,
	0x30, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6d, 0x32, 0x70, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6d, 0x32, 0x70, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x6f, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6f, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x63,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x33, 0x22, 0x56, 0x0a, 0x0e, 0x57,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x22, 0xa2, 0x03, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x6c, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x6c, 0x73, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x69, 0x6e, 0x64, 0x33, 0x36, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69,
	0x6e, 0x64, 0x33, 0x36, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x69, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x77, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x65, 0x77, 0x12, 0x21, 0x0a, 0x03, 0x61, 0x69, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72,
	0x41, 0x69, 0x72, 0x52, 0x03, 0x61, 0x69, 0x72, 0x22, 0x59, 0x0a, 0x0d, 0x51, 0x52, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x0e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x63, 0x0a,
	0x10, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x4c, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x3b, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x4c, 0x0a,
	0x18, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x12, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x6e, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x33, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x10,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x33, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xf9, 0x01,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x4f,
	0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xe7, 0x02, 0x0a, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xef, 0x01, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc0, 0x06, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x55, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49,
	0x50, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x49, 0x50, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x67, 0x49, 0x50, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49,
	0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6f, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc8, 0x03, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x1a, 0x50, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8b, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x41,
	0x72, 0x65, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x41, 0x72, 0x65, 0x61, 0x50, 0x61, 0x74, 0x68,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x18, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7c,
	0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x44, 0x73, 0x22, 0x3c, 0x0a, 0x0e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x6f, 0x0a, 0x0f, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x22, 0xde, 0x02,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x65, 0x61, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6f, 0x74,
	0x22, 0x29, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x74, 0x0a, 0x08, 0x4a, 0x77, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x8c,
	0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x55, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22,
	0x47, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x6e, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x77, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x57, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x2e,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6e, 0x0a, 0x12, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0x2a, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2a,
	0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x11, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49,
	0x44, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x22, 0x4c,
	0x0a, 0x11, 0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x14,
	0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x22, 0x4c, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x48, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x70, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x22, 0x77, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x22, 0x8a, 0x01,
	0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0xae,
	0x01, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x52, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x61,
	0x72, 0x65, 0x61, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65,
	0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x73, 0x22, 0x4c, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x70, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x72, 0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x72, 0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x08,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x0f, 0x44, 0x69,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x5f, 0x0a, 0x10, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x4c, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x99, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69,
	0x74, 0x68, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xfe, 0x02, 0x0a,
	0x0a, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xcb, 0x01,
	0x0a, 0x12, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x24, 0x0a,
	0x12, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x87, 0x03, 0x0a, 0x0b, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x35, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x70, 0x74, 0x49, 0x44,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x70,
	0x74, 0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x64, 0x64, 0x53, 0x79, 0x6e,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x41, 0x64, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x1a, 0x3b, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x90, 0x01,
	0x0a, 0x13, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65,
	0x22, 0x52, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x46,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74,
	0x68, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x15, 0x44,
	0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65,
	0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x54, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x69, 0x74, 0x68, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x77, 0x69, 0x74, 0x68, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a,
	0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x41, 0x70,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xd0, 0x02, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x6c, 0x6b, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x61, 0x6c, 0x6b, 0x49, 0x44, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x6c, 0x6b, 0x49, 0x44, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x6c, 0x6b, 0x49, 0x44, 0x73, 0x22, 0x4c, 0x0a, 0x11, 0x44, 0x65, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd8, 0x02, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x30,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xa1, 0x01, 0x0a, 0x07, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x72,
	0x0a, 0x0f, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4f,
	0x0a, 0x17, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0x27, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x11,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x12, 0x4d,
	0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x4d, 0x65,
	0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x12, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x4d, 0x65, 0x6e,
	0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x6e, 0x75, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x44, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xaf, 0x03,
	0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22,
	0x36, 0x0a, 0x11, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x28, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1a, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x22, 0xca,
	0x01, 0x0a, 0x0f, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x07,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x8d, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xfd, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x69, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x69, 0x73, 0x22,
	0xe4, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x04, 0x41, 0x70, 0x69, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x41, 0x70, 0x69, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x92, 0x03, 0x0a, 0x0c, 0x4f, 0x70, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x69, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x61, 0x69, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x01,
	0x0a, 0x14, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x15, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x99, 0x02, 0x0a, 0x0b,
	0x4f, 0x70, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x61, 0x69, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x13, 0x4f, 0x70, 0x73, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52,
	0x0a, 0x14, 0x4f, 0x70, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x32, 0xb0, 0x0c, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x34, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x77, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69,
	0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x70, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0b,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x43, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xba, 0x07, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42,
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x3a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44,
	0x0a, 0x16, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a,
	0x13, 0x64, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a,
	0x13, 0x64, 0x61, 0x74, 0x61, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x72, 0x65, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72,
	0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x61,
	0x6c, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a,
	0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x14, 0x64,
	0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x32, 0x92, 0x0b, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x11, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34,
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36,
	0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x12, 0x37, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x14, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x1a,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4c, 0x0a, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x22, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x62, 0x0a, 0x19, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x13, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x35, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xfa, 0x03, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0d,
	0x61, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x12, 0x44, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x9b, 0x06, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2b, 0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29,
	0x0a, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x13, 0x72, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x72, 0x6f, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x12, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x15, 0x72, 0x6f,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38,
	0x0a, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x12, 0x13, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x15, 0x72, 0x6f, 0x6c, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0f,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x32, 0x80, 0x03, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f,
	0x64, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x41, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x82, 0x05, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f,
	0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2f, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4a, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a,
	0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0x98, 0x04, 0x0a, 0x0a, 0x44,
	0x69, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x0e, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x69, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x33, 0x0a, 0x0c, 0x64, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0e, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x30, 0x0a, 0x10, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x10, 0x64, 0x69, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x10, 0x64, 0x69, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xf0, 0x07, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2c, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x3e, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x0e, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3c, 0x0a, 0x13, 0x64, 0x65, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a,
	0x12, 0x64, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f,
	0x62, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44,
	0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x12, 0x32, 0x0a, 0x11, 0x64, 0x65,
	0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f,
	0x62, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x47,
	0x0a, 0x10, 0x64, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x1a, 0x0a,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65,
	0x70, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xfa, 0x04, 0x0a, 0x06, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x38, 0x0a, 0x0b, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0e, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x0e, 0x73, 0x6c, 0x6f,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x2a, 0x0a, 0x0c, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a,
	0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x44, 0x0a, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x44, 0x65, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xec, 0x01, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x3e, 0x0a,
	0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0x86, 0x04, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x31, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44,
	0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x12, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x37, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a,
	0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc9, 0x03,
	0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0e,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2b,
	0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x0e, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3e, 0x0a, 0x0d, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3c, 0x0a, 0x0f, 0x61, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x31, 0x0a,
	0x11, 0x61, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x47, 0x0a, 0x10, 0x61, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x32, 0xa7, 0x0f, 0x0a, 0x0c, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x10, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x0e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x0f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x12, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x10, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x17,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x44, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x17, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a,
	0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3c, 0x0a, 0x1a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a,
	0x15, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d,
	0x0a, 0x14, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x15, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x4f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x36, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65,
	0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x0b, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d,
	0x65, 0x6e, 0x75, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x35, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x14, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x11, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b,
	0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x57, 0x65, 0x62, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x53, 0x0a, 0x14, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x15,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0a, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x15, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x49, 0x44, 0x12, 0x3c, 0x0a, 0x13, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0f, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x14, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x15, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0xec, 0x02, 0x0a, 0x03, 0x6f, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x12, 0x6f,
	0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x49,
	0x44, 0x12, 0x33, 0x0a, 0x12, 0x6f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70,
	0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x11, 0x6f, 0x70, 0x73, 0x57, 0x6f, 0x72,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4f, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73,
	0x57, 0x6f, 0x72, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x32, 0x0a, 0x11, 0x6f, 0x70, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70,
	0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x0b, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x44, 0x12, 0x31, 0x0a, 0x11, 0x6f, 0x70, 0x73, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x4f, 0x70, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x0a, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x6f, 0x70, 0x73,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70, 0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4f, 0x70,
	0x73, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x08, 0x5a, 0x06, 0x70, 0x62, 0x2f, 0x73, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sys_proto_rawDescOnce sync.Once
	file_proto_sys_proto_rawDescData = file_proto_sys_proto_rawDesc
)

func file_proto_sys_proto_rawDescGZIP() []byte {
	file_proto_sys_proto_rawDescOnce.Do(func() {
		file_proto_sys_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sys_proto_rawDescData)
	})
	return file_proto_sys_proto_rawDescData
}

var file_proto_sys_proto_msgTypes = make([]protoimpl.MessageInfo, 246)
var file_proto_sys_proto_goTypes = []interface{}{
	(*SendOption)(nil),                            // 0: sys.SendOption
	(*ThirdAppConfig)(nil),                        // 1: sys.ThirdAppConfig
	(*ThirdApp)(nil),                              // 2: sys.ThirdApp
	(*IDList)(nil),                                // 3: sys.IDList
	(*NotifyConfig)(nil),                          // 4: sys.NotifyConfig
	(*NotifyConfigIndexReq)(nil),                  // 5: sys.NotifyConfigIndexReq
	(*NotifyConfigIndexResp)(nil),                 // 6: sys.NotifyConfigIndexResp
	(*NotifyTemplate)(nil),                        // 7: sys.NotifyTemplate
	(*NotifyChannel)(nil),                         // 8: sys.NotifyChannel
	(*NotifyChannelIndexReq)(nil),                 // 9: sys.NotifyChannelIndexReq
	(*NotifyChannelIndexResp)(nil),                // 10: sys.NotifyChannelIndexResp
	(*ThirdEmail)(nil),                            // 11: sys.ThirdEmail
	(*ThirdSms)(nil),                              // 12: sys.ThirdSms
	(*NotifyTemplateIndexReq)(nil),                // 13: sys.NotifyTemplateIndexReq
	(*NotifyTemplateIndexResp)(nil),               // 14: sys.NotifyTemplateIndexResp
	(*MessageInfoIndexReq)(nil),                   // 15: sys.MessageInfoIndexReq
	(*MessageInfoIndexResp)(nil),                  // 16: sys.MessageInfoIndexResp
	(*MessageInfoSendReq)(nil),                    // 17: sys.MessageInfoSendReq
	(*MessageInfo)(nil),                           // 18: sys.MessageInfo
	(*NotifyConfigTemplateDeleteReq)(nil),         // 19: sys.NotifyConfigTemplateDeleteReq
	(*NotifyConfigTemplateIndexReq)(nil),          // 20: sys.NotifyConfigTemplateIndexReq
	(*NotifyConfigTemplateIndexResp)(nil),         // 21: sys.NotifyConfigTemplateIndexResp
	(*NotifyConfigTemplate)(nil),                  // 22: sys.NotifyConfigTemplate
	(*TenantAgreement)(nil),                       // 23: sys.TenantAgreement
	(*TenantAgreementIndexReq)(nil),               // 24: sys.TenantAgreementIndexReq
	(*TenantAgreementIndexResp)(nil),              // 25: sys.TenantAgreementIndexResp
	(*TenantOpenCheckTokenReq)(nil),               // 26: sys.TenantOpenCheckTokenReq
	(*TenantOpenCheckTokenResp)(nil),              // 27: sys.TenantOpenCheckTokenResp
	(*TenantOpenWebHook)(nil),                     // 28: sys.TenantOpenWebHook
	(*OpenAccess)(nil),                            // 29: sys.OpenAccess
	(*OpenAccessIndexReq)(nil),                    // 30: sys.OpenAccessIndexReq
	(*OpenAccessIndexResp)(nil),                   // 31: sys.OpenAccessIndexResp
	(*UserProfile)(nil),                           // 32: sys.UserProfile
	(*UserProfileIndexReq)(nil),                   // 33: sys.UserProfileIndexReq
	(*UserProfileIndexResp)(nil),                  // 34: sys.UserProfileIndexResp
	(*UserMessage)(nil),                           // 35: sys.UserMessage
	(*UserMessageStatisticsResp)(nil),             // 36: sys.UserMessageStatisticsResp
	(*UserMessageStatistics)(nil),                 // 37: sys.UserMessageStatistics
	(*UserMessageIndexReq)(nil),                   // 38: sys.UserMessageIndexReq
	(*UserMessageIndexResp)(nil),                  // 39: sys.UserMessageIndexResp
	(*NotifyConfigSendReq)(nil),                   // 40: sys.NotifyConfigSendReq
	(*TenantInfoCreateReq)(nil),                   // 41: sys.TenantInfoCreateReq
	(*TenantInfo)(nil),                            // 42: sys.TenantInfo
	(*TenantInfoIndexReq)(nil),                    // 43: sys.TenantInfoIndexReq
	(*TenantInfoIndexResp)(nil),                   // 44: sys.TenantInfoIndexResp
	(*TenantConfig)(nil),                          // 45: sys.TenantConfig
	(*TenantConfigRegisterAutoCreateProject)(nil), // 46: sys.TenantConfigRegisterAutoCreateProject
	(*TenantConfigRegisterAutoCreateArea)(nil),    // 47: sys.TenantConfigRegisterAutoCreateArea
	(*TenantAccessMultiSaveReq)(nil),              // 48: sys.TenantAccessMultiSaveReq
	(*TenantAccessIndexReq)(nil),                  // 49: sys.TenantAccessIndexReq
	(*TenantAccessIndexResp)(nil),                 // 50: sys.TenantAccessIndexResp
	(*TenantAppInfo)(nil),                         // 51: sys.TenantAppInfo
	(*TenantAppWithIDOrCode)(nil),                 // 52: sys.TenantAppWithIDOrCode
	(*TenantAppModule)(nil),                       // 53: sys.TenantAppModule
	(*TenantAppIndexReq)(nil),                     // 54: sys.TenantAppIndexReq
	(*TenantAppIndexResp)(nil),                    // 55: sys.TenantAppIndexResp
	(*TenantAppMultiUpdateReq)(nil),               // 56: sys.TenantAppMultiUpdateReq
	(*TenantModuleIndexReq)(nil),                  // 57: sys.TenantModuleIndexReq
	(*TenantModuleIndexResp)(nil),                 // 58: sys.TenantModuleIndexResp
	(*TenantAppMenuIndexReq)(nil),                 // 59: sys.TenantAppMenuIndexReq
	(*TenantAppMenuIndexResp)(nil),                // 60: sys.TenantAppMenuIndexResp
	(*TenantAppMenu)(nil),                         // 61: sys.TenantAppMenu
	(*TenantModuleCreateReq)(nil),                 // 62: sys.TenantModuleCreateReq
	(*TenantModuleWithIDOrCode)(nil),              // 63: sys.TenantModuleWithIDOrCode
	(*Point)(nil),                                 // 64: sys.Point
	(*Empty)(nil),                                 // 65: sys.Empty
	(*PageInfo)(nil),                              // 66: sys.PageInfo
	(*CompareString)(nil),                         // 67: sys.CompareString
	(*CompareInt64)(nil),                          // 68: sys.CompareInt64
	(*WithID)(nil),                                // 69: sys.WithID
	(*WithIDCode)(nil),                            // 70: sys.WithIDCode
	(*WithCode)(nil),                              // 71: sys.WithCode
	(*WithAppCodeID)(nil),                         // 72: sys.WithAppCodeID
	(*ProjectWithID)(nil),                         // 73: sys.ProjectWithID
	(*ProjectInfo)(nil),                           // 74: sys.ProjectInfo
	(*ProjectProfile)(nil),                        // 75: sys.ProjectProfile
	(*ProjectProfileReadReq)(nil),                 // 76: sys.ProjectProfileReadReq
	(*ProjectProfileIndexReq)(nil),                // 77: sys.ProjectProfileIndexReq
	(*ProjectProfileIndexResp)(nil),               // 78: sys.ProjectProfileIndexResp
	(*ProjectInfoIndexReq)(nil),                   // 79: sys.ProjectInfoIndexReq
	(*ProjectInfoIndexResp)(nil),                  // 80: sys.ProjectInfoIndexResp
	(*AreaInfo)(nil),                              // 81: sys.AreaInfo
	(*AreaWithID)(nil),                            // 82: sys.AreaWithID
	(*AreaProfile)(nil),                           // 83: sys.AreaProfile
	(*AreaProfileReadReq)(nil),                    // 84: sys.AreaProfileReadReq
	(*AreaProfileIndexReq)(nil),                   // 85: sys.AreaProfileIndexReq
	(*AreaProfileIndexResp)(nil),                  // 86: sys.AreaProfileIndexResp
	(*AreaInfoReadReq)(nil),                       // 87: sys.AreaInfoReadReq
	(*AreaInfoIndexReq)(nil),                      // 88: sys.AreaInfoIndexReq
	(*AreaInfoIndexResp)(nil),                     // 89: sys.AreaInfoIndexResp
	(*ServiceInfo)(nil),                           // 90: sys.ServiceInfo
	(*SlotInfo)(nil),                              // 91: sys.SlotInfo
	(*WeatherAir)(nil),                            // 92: sys.WeatherAir
	(*WeatherReadReq)(nil),                        // 93: sys.WeatherReadReq
	(*WeatherReadResp)(nil),                       // 94: sys.WeatherReadResp
	(*QRCodeReadReq)(nil),                         // 95: sys.QRCodeReadReq
	(*QRCodeReadResp)(nil),                        // 96: sys.QRCodeReadResp
	(*SlotInfoIndexReq)(nil),                      // 97: sys.SlotInfoIndexReq
	(*SlotInfoIndexResp)(nil),                     // 98: sys.SlotInfoIndexResp
	(*AuthApiInfo)(nil),                           // 99: sys.AuthApiInfo
	(*RoleAccessMultiUpdateReq)(nil),              // 100: sys.RoleAccessMultiUpdateReq
	(*RoleAccessIndexReq)(nil),                    // 101: sys.RoleAccessIndexReq
	(*RoleAccessIndexResp)(nil),                   // 102: sys.RoleAccessIndexResp
	(*RoleMenuIndexReq)(nil),                      // 103: sys.RoleMenuIndexReq
	(*RoleMenuIndexResp)(nil),                     // 104: sys.RoleMenuIndexResp
	(*RoleAppIndexReq)(nil),                       // 105: sys.RoleAppIndexReq
	(*RoleAppIndexResp)(nil),                      // 106: sys.RoleAppIndexResp
	(*RoleModuleIndexReq)(nil),                    // 107: sys.RoleModuleIndexReq
	(*RoleModuleIndexResp)(nil),                   // 108: sys.RoleModuleIndexResp
	(*DateRange)(nil),                             // 109: sys.DateRange
	(*TimeRange)(nil),                             // 110: sys.TimeRange
	(*LoginLogIndexReq)(nil),                      // 111: sys.LoginLogIndexReq
	(*LoginLogInfo)(nil),                          // 112: sys.LoginLogInfo
	(*LoginLogIndexResp)(nil),                     // 113: sys.LoginLogIndexResp
	(*OperLogIndexReq)(nil),                       // 114: sys.OperLogIndexReq
	(*OperLogInfo)(nil),                           // 115: sys.OperLogInfo
	(*OperLogIndexResp)(nil),                      // 116: sys.OperLogIndexResp
	(*LoginLogCreateReq)(nil),                     // 117: sys.LoginLogCreateReq
	(*OperLogCreateReq)(nil),                      // 118: sys.OperLogCreateReq
	(*UserInfo)(nil),                              // 119: sys.UserInfo
	(*UserCreateResp)(nil),                        // 120: sys.UserCreateResp
	(*UserCheckTokenReq)(nil),                     // 121: sys.UserCheckTokenReq
	(*UserCheckTokenResp)(nil),                    // 122: sys.UserCheckTokenResp
	(*ProjectAuth)(nil),                           // 123: sys.ProjectAuth
	(*RoleAppMultiUpdateReq)(nil),                 // 124: sys.RoleAppMultiUpdateReq
	(*RoleModuleMultiUpdateReq)(nil),              // 125: sys.RoleModuleMultiUpdateReq
	(*RoleMenuMultiUpdateReq)(nil),                // 126: sys.RoleMenuMultiUpdateReq
	(*RoleApiAuthReq)(nil),                        // 127: sys.RoleApiAuthReq
	(*RoleApiAuthResp)(nil),                       // 128: sys.RoleApiAuthResp
	(*UserInfoCreateReq)(nil),                     // 129: sys.UserInfoCreateReq
	(*UserInfoIndexReq)(nil),                      // 130: sys.UserInfoIndexReq
	(*UserInfoIndexResp)(nil),                     // 131: sys.UserInfoIndexResp
	(*UserInfoUpdateReq)(nil),                     // 132: sys.userInfoUpdateReq
	(*UserInfoReadReq)(nil),                       // 133: sys.UserInfoReadReq
	(*UserInfoDeleteReq)(nil),                     // 134: sys.UserInfoDeleteReq
	(*JwtToken)(nil),                              // 135: sys.JwtToken
	(*UserCaptchaReq)(nil),                        // 136: sys.UserCaptchaReq
	(*UserCaptchaResp)(nil),                       // 137: sys.UserCaptchaResp
	(*UserForgetPwdReq)(nil),                      // 138: sys.UserForgetPwdReq
	(*UserCodeToUserIDReq)(nil),                   // 139: sys.UserCodeToUserIDReq
	(*UserCodeToUserIDResp)(nil),                  // 140: sys.UserCodeToUserIDResp
	(*UserChangePwdReq)(nil),                      // 141: sys.UserChangePwdReq
	(*UserLoginReq)(nil),                          // 142: sys.UserLoginReq
	(*UserLoginResp)(nil),                         // 143: sys.UserLoginResp
	(*UserRegisterReq)(nil),                       // 144: sys.UserRegisterReq
	(*UserRegisterResp)(nil),                      // 145: sys.UserRegisterResp
	(*UserBindAccountReq)(nil),                    // 146: sys.UserBindAccountReq
	(*UserRoleIndexReq)(nil),                      // 147: sys.UserRoleIndexReq
	(*UserRoleIndexResp)(nil),                     // 148: sys.UserRoleIndexResp
	(*UserRoleMultiUpdateReq)(nil),                // 149: sys.UserRoleMultiUpdateReq
	(*UserDeptIndexReq)(nil),                      // 150: sys.UserDeptIndexReq
	(*UserDeptIndexResp)(nil),                     // 151: sys.UserDeptIndexResp
	(*UserDeptMultiSaveReq)(nil),                  // 152: sys.UserDeptMultiSaveReq
	(*DeptUserIndexReq)(nil),                      // 153: sys.DeptUserIndexReq
	(*DeptUserIndexResp)(nil),                     // 154: sys.DeptUserIndexResp
	(*DeptUserMultiSaveReq)(nil),                  // 155: sys.DeptUserMultiSaveReq
	(*DeptRoleIndexReq)(nil),                      // 156: sys.DeptRoleIndexReq
	(*DeptRoleIndexResp)(nil),                     // 157: sys.DeptRoleIndexResp
	(*DeptRoleMultiSaveReq)(nil),                  // 158: sys.DeptRoleMultiSaveReq
	(*DataProject)(nil),                           // 159: sys.DataProject
	(*DataProjectDeleteReq)(nil),                  // 160: sys.DataProjectDeleteReq
	(*DataProjectMultiDeleteReq)(nil),             // 161: sys.DataProjectMultiDeleteReq
	(*DataProjectSaveReq)(nil),                    // 162: sys.DataProjectSaveReq
	(*DataProjectMultiSaveReq)(nil),               // 163: sys.DataProjectMultiSaveReq
	(*DataProjectIndexReq)(nil),                   // 164: sys.DataProjectIndexReq
	(*DataProjectIndexResp)(nil),                  // 165: sys.DataProjectIndexResp
	(*DataArea)(nil),                              // 166: sys.DataArea
	(*DataAreaMultiUpdateReq)(nil),                // 167: sys.DataAreaMultiUpdateReq
	(*DataAreaIndexReq)(nil),                      // 168: sys.DataAreaIndexReq
	(*DataAreaIndexResp)(nil),                     // 169: sys.DataAreaIndexResp
	(*DataAreaMultiDeleteReq)(nil),                // 170: sys.DataAreaMultiDeleteReq
	(*UserAreaApplyCreateReq)(nil),                // 171: sys.UserAreaApplyCreateReq
	(*UserAreaApplyIndexReq)(nil),                 // 172: sys.UserAreaApplyIndexReq
	(*UserAreaApplyInfo)(nil),                     // 173: sys.UserAreaApplyInfo
	(*UserAreaApplyIndexResp)(nil),                // 174: sys.UserAreaApplyIndexResp
	(*UserAreaApplyDealReq)(nil),                  // 175: sys.UserAreaApplyDealReq
	(*DictInfo)(nil),                              // 176: sys.DictInfo
	(*DictInfoReadReq)(nil),                       // 177: sys.DictInfoReadReq
	(*DictInfoIndexReq)(nil),                      // 178: sys.DictInfoIndexReq
	(*DictInfoIndexResp)(nil),                     // 179: sys.DictInfoIndexResp
	(*DictDetailReadReq)(nil),                     // 180: sys.DictDetailReadReq
	(*DictDetail)(nil),                            // 181: sys.DictDetail
	(*DictDetailIndexReq)(nil),                    // 182: sys.DictDetailIndexReq
	(*DictDetailIndexResp)(nil),                   // 183: sys.DictDetailIndexResp
	(*DeptSyncJobReadReq)(nil),                    // 184: sys.DeptSyncJobReadReq
	(*DeptSyncJob)(nil),                           // 185: sys.DeptSyncJob
	(*DeptSyncJobIndexReq)(nil),                   // 186: sys.DeptSyncJobIndexReq
	(*DeptSyncJobIndexResp)(nil),                  // 187: sys.DeptSyncJobIndexResp
	(*DeptInfoReadReq)(nil),                       // 188: sys.DeptInfoReadReq
	(*DeptSyncJobExecuteReq)(nil),                 // 189: sys.DeptSyncJobExecuteReq
	(*DeptSyncJobExecuteResp)(nil),                // 190: sys.DeptSyncJobExecuteResp
	(*ThirdDeptInfoIndexReq)(nil),                 // 191: sys.ThirdDeptInfoIndexReq
	(*ThirdDeptInfoReadReq)(nil),                  // 192: sys.ThirdDeptInfoReadReq
	(*DeptInfo)(nil),                              // 193: sys.DeptInfo
	(*DeptInfoIndexReq)(nil),                      // 194: sys.DeptInfoIndexReq
	(*DeptInfoIndexResp)(nil),                     // 195: sys.DeptInfoIndexResp
	(*ModuleInfo)(nil),                            // 196: sys.ModuleInfo
	(*ModuleInfoIndexReq)(nil),                    // 197: sys.ModuleInfoIndexReq
	(*ModuleInfoIndexResp)(nil),                   // 198: sys.ModuleInfoIndexResp
	(*AppInfo)(nil),                               // 199: sys.AppInfo
	(*AppInfoIndexReq)(nil),                       // 200: sys.AppInfoIndexReq
	(*AppInfoIndexResp)(nil),                      // 201: sys.AppInfoIndexResp
	(*AppModuleMultiUpdateReq)(nil),               // 202: sys.AppModuleMultiUpdateReq
	(*AppModuleIndexReq)(nil),                     // 203: sys.AppModuleIndexReq
	(*AppModuleIndexResp)(nil),                    // 204: sys.AppModuleIndexResp
	(*RoleInfoIndexReq)(nil),                      // 205: sys.RoleInfoIndexReq
	(*RoleInfoIndexResp)(nil),                     // 206: sys.RoleInfoIndexResp
	(*RoleInfo)(nil),                              // 207: sys.RoleInfo
	(*RoleAppUpdateReq)(nil),                      // 208: sys.RoleAppUpdateReq
	(*MenuMultiImportReq)(nil),                    // 209: sys.MenuMultiImportReq
	(*MenuMultiImportResp)(nil),                   // 210: sys.MenuMultiImportResp
	(*MenuMultiExportReq)(nil),                    // 211: sys.MenuMultiExportReq
	(*MenuMultiExportResp)(nil),                   // 212: sys.MenuMultiExportResp
	(*MenuInfoIndexReq)(nil),                      // 213: sys.MenuInfoIndexReq
	(*MenuInfo)(nil),                              // 214: sys.MenuInfo
	(*MenuInfoIndexResp)(nil),                     // 215: sys.MenuInfoIndexResp
	(*Map)(nil),                                   // 216: sys.Map
	(*ConfigResp)(nil),                            // 217: sys.configResp
	(*ApiInfoIndexReq)(nil),                       // 218: sys.ApiInfoIndexReq
	(*ApiInfo)(nil),                               // 219: sys.ApiInfo
	(*ApiInfoIndexResp)(nil),                      // 220: sys.ApiInfoIndexResp
	(*AccessInfoMultiImportReq)(nil),              // 221: sys.AccessInfoMultiImportReq
	(*AccessInfoMultiImportResp)(nil),             // 222: sys.AccessInfoMultiImportResp
	(*AccessInfoIndexReq)(nil),                    // 223: sys.AccessInfoIndexReq
	(*AccessInfo)(nil),                            // 224: sys.AccessInfo
	(*AccessInfoIndexResp)(nil),                   // 225: sys.AccessInfoIndexResp
	(*OpsWorkOrder)(nil),                          // 226: sys.OpsWorkOrder
	(*OpsWorkOrderIndexReq)(nil),                  // 227: sys.OpsWorkOrderIndexReq
	(*OpsWorkOrderIndexResp)(nil),                 // 228: sys.OpsWorkOrderIndexResp
	(*OpsFeedback)(nil),                           // 229: sys.OpsFeedback
	(*OpsFeedbackIndexReq)(nil),                   // 230: sys.OpsFeedbackIndexReq
	(*OpsFeedbackIndexResp)(nil),                  // 231: sys.OpsFeedbackIndexResp
	nil,                                           // 232: sys.NotifyConfig.ParamsEntry
	nil,                                           // 233: sys.TenantOpenWebHook.HandlerEntry
	nil,                                           // 234: sys.NotifyConfigSendReq.ParamsEntry
	(*PageInfo_OrderBy)(nil),                      // 235: sys.PageInfo.OrderBy
	nil,                                           // 236: sys.ProjectInfo.TagsEntry
	nil,                                           // 237: sys.AreaInfo.TagsEntry
	nil,                                           // 238: sys.SlotInfo.HandlerEntry
	nil,                                           // 239: sys.UserInfo.TagsEntry
	nil,                                           // 240: sys.UserCheckTokenResp.ProjectAuthEntry
	nil,                                           // 241: sys.ProjectAuth.AreaEntry
	nil,                                           // 242: sys.ProjectAuth.AreaPathEntry
	nil,                                           // 243: sys.UserRegisterReq.ExpandEntry
	nil,                                           // 244: sys.DeptSyncJob.FieldMapEntry
	nil,                                           // 245: sys.OpsWorkOrder.ParamsEntry
	(*wrapperspb.StringValue)(nil),                // 246: google.protobuf.StringValue
	(*wrapperspb.Int64Value)(nil),                 // 247: google.protobuf.Int64Value
	(*wrapperspb.FloatValue)(nil),                 // 248: google.protobuf.FloatValue
}
var file_proto_sys_proto_depIdxs = []int32{
	232, // 0: sys.NotifyConfig.params:type_name -> sys.NotifyConfig.ParamsEntry
	66,  // 1: sys.NotifyConfigIndexReq.page:type_name -> sys.PageInfo
	4,   // 2: sys.NotifyConfigIndexResp.list:type_name -> sys.NotifyConfig
	8,   // 3: sys.NotifyTemplate.Channel:type_name -> sys.NotifyChannel
	11,  // 4: sys.NotifyChannel.email:type_name -> sys.ThirdEmail
	1,   // 5: sys.NotifyChannel.app:type_name -> sys.ThirdAppConfig
	12,  // 6: sys.NotifyChannel.sms:type_name -> sys.ThirdSms
	66,  // 7: sys.NotifyChannelIndexReq.page:type_name -> sys.PageInfo
	8,   // 8: sys.NotifyChannelIndexResp.list:type_name -> sys.NotifyChannel
	66,  // 9: sys.NotifyTemplateIndexReq.page:type_name -> sys.PageInfo
	7,   // 10: sys.NotifyTemplateIndexResp.list:type_name -> sys.NotifyTemplate
	66,  // 11: sys.MessageInfoIndexReq.page:type_name -> sys.PageInfo
	18,  // 12: sys.MessageInfoIndexResp.list:type_name -> sys.MessageInfo
	22,  // 13: sys.NotifyConfigTemplateIndexResp.list:type_name -> sys.NotifyConfigTemplate
	66,  // 14: sys.TenantAgreementIndexReq.page:type_name -> sys.PageInfo
	23,  // 15: sys.TenantAgreementIndexResp.list:type_name -> sys.TenantAgreement
	233, // 16: sys.TenantOpenWebHook.handler:type_name -> sys.TenantOpenWebHook.HandlerEntry
	66,  // 17: sys.OpenAccessIndexReq.page:type_name -> sys.PageInfo
	29,  // 18: sys.OpenAccessIndexResp.list:type_name -> sys.OpenAccess
	32,  // 19: sys.UserProfileIndexResp.profiles:type_name -> sys.UserProfile
	18,  // 20: sys.UserMessage.message:type_name -> sys.MessageInfo
	37,  // 21: sys.UserMessageStatisticsResp.list:type_name -> sys.UserMessageStatistics
	66,  // 22: sys.UserMessageIndexReq.page:type_name -> sys.PageInfo
	110, // 23: sys.UserMessageIndexReq.createdTime:type_name -> sys.TimeRange
	35,  // 24: sys.UserMessageIndexResp.list:type_name -> sys.UserMessage
	234, // 25: sys.NotifyConfigSendReq.params:type_name -> sys.NotifyConfigSendReq.ParamsEntry
	42,  // 26: sys.TenantInfoCreateReq.info:type_name -> sys.TenantInfo
	119, // 27: sys.TenantInfoCreateReq.adminUserInfo:type_name -> sys.UserInfo
	246, // 28: sys.TenantInfo.desc:type_name -> google.protobuf.StringValue
	246, // 29: sys.TenantInfo.backgroundDesc:type_name -> google.protobuf.StringValue
	66,  // 30: sys.TenantInfoIndexReq.page:type_name -> sys.PageInfo
	42,  // 31: sys.TenantInfoIndexResp.list:type_name -> sys.TenantInfo
	247, // 32: sys.TenantConfig.deviceLimit:type_name -> google.protobuf.Int64Value
	46,  // 33: sys.TenantConfig.registerAutoCreateProject:type_name -> sys.TenantConfigRegisterAutoCreateProject
	247, // 34: sys.TenantConfig.operLogKeepDays:type_name -> google.protobuf.Int64Value
	247, // 35: sys.TenantConfig.loginLogKeepDays:type_name -> google.protobuf.Int64Value
	47,  // 36: sys.TenantConfigRegisterAutoCreateProject.areas:type_name -> sys.TenantConfigRegisterAutoCreateArea
	53,  // 37: sys.TenantAppInfo.modules:type_name -> sys.TenantAppModule
	1,   // 38: sys.TenantAppInfo.dingMini:type_name -> sys.ThirdAppConfig
	1,   // 39: sys.TenantAppInfo.wxMini:type_name -> sys.ThirdAppConfig
	1,   // 40: sys.TenantAppInfo.wxOpen:type_name -> sys.ThirdAppConfig
	2,   // 41: sys.TenantAppInfo.android:type_name -> sys.ThirdApp
	66,  // 42: sys.TenantAppIndexReq.page:type_name -> sys.PageInfo
	51,  // 43: sys.TenantAppIndexResp.list:type_name -> sys.TenantAppInfo
	66,  // 44: sys.TenantModuleIndexReq.page:type_name -> sys.PageInfo
	196, // 45: sys.TenantModuleIndexResp.list:type_name -> sys.ModuleInfo
	66,  // 46: sys.TenantAppMenuIndexReq.page:type_name -> sys.PageInfo
	61,  // 47: sys.TenantAppMenuIndexResp.list:type_name -> sys.TenantAppMenu
	214, // 48: sys.TenantAppMenu.info:type_name -> sys.MenuInfo
	61,  // 49: sys.TenantAppMenu.children:type_name -> sys.TenantAppMenu
	235, // 50: sys.PageInfo.orders:type_name -> sys.PageInfo.OrderBy
	64,  // 51: sys.ProjectInfo.Position:type_name -> sys.Point
	248, // 52: sys.ProjectInfo.area:type_name -> google.protobuf.FloatValue
	246, // 53: sys.ProjectInfo.desc:type_name -> google.protobuf.StringValue
	246, // 54: sys.ProjectInfo.address:type_name -> google.protobuf.StringValue
	247, // 55: sys.ProjectInfo.deviceCount:type_name -> google.protobuf.Int64Value
	81,  // 56: sys.ProjectInfo.areas:type_name -> sys.AreaInfo
	236, // 57: sys.ProjectInfo.tags:type_name -> sys.ProjectInfo.TagsEntry
	75,  // 58: sys.ProjectProfileIndexResp.profiles:type_name -> sys.ProjectProfile
	66,  // 59: sys.ProjectInfoIndexReq.page:type_name -> sys.PageInfo
	74,  // 60: sys.ProjectInfoIndexResp.list:type_name -> sys.ProjectInfo
	64,  // 61: sys.AreaInfo.Position:type_name -> sys.Point
	246, // 62: sys.AreaInfo.desc:type_name -> google.protobuf.StringValue
	81,  // 63: sys.AreaInfo.children:type_name -> sys.AreaInfo
	247, // 64: sys.AreaInfo.deviceCount:type_name -> google.protobuf.Int64Value
	247, // 65: sys.AreaInfo.groupCount:type_name -> google.protobuf.Int64Value
	237, // 66: sys.AreaInfo.tags:type_name -> sys.AreaInfo.TagsEntry
	83,  // 67: sys.AreaProfileIndexResp.profiles:type_name -> sys.AreaProfile
	66,  // 68: sys.AreaInfoIndexReq.page:type_name -> sys.PageInfo
	68,  // 69: sys.AreaInfoIndexReq.deviceCount:type_name -> sys.CompareInt64
	68,  // 70: sys.AreaInfoIndexReq.groupCount:type_name -> sys.CompareInt64
	81,  // 71: sys.AreaInfoIndexResp.list:type_name -> sys.AreaInfo
	238, // 72: sys.SlotInfo.handler:type_name -> sys.SlotInfo.HandlerEntry
	64,  // 73: sys.WeatherReadReq.position:type_name -> sys.Point
	92,  // 74: sys.WeatherReadResp.air:type_name -> sys.WeatherAir
	66,  // 75: sys.SlotInfoIndexReq.page:type_name -> sys.PageInfo
	91,  // 76: sys.SlotInfoIndexResp.list:type_name -> sys.SlotInfo
	66,  // 77: sys.LoginLogIndexReq.page:type_name -> sys.PageInfo
	109, // 78: sys.LoginLogIndexReq.date:type_name -> sys.DateRange
	112, // 79: sys.LoginLogIndexResp.list:type_name -> sys.LoginLogInfo
	66,  // 80: sys.OperLogIndexReq.page:type_name -> sys.PageInfo
	115, // 81: sys.OperLogIndexResp.list:type_name -> sys.OperLogInfo
	246, // 82: sys.UserInfo.email:type_name -> google.protobuf.StringValue
	246, // 83: sys.UserInfo.phone:type_name -> google.protobuf.StringValue
	239, // 84: sys.UserInfo.tags:type_name -> sys.UserInfo.TagsEntry
	240, // 85: sys.UserCheckTokenResp.projectAuth:type_name -> sys.UserCheckTokenResp.ProjectAuthEntry
	241, // 86: sys.ProjectAuth.area:type_name -> sys.ProjectAuth.AreaEntry
	242, // 87: sys.ProjectAuth.areaPath:type_name -> sys.ProjectAuth.AreaPathEntry
	119, // 88: sys.UserInfoCreateReq.info:type_name -> sys.UserInfo
	66,  // 89: sys.UserInfoIndexReq.page:type_name -> sys.PageInfo
	68,  // 90: sys.UserInfoIndexReq.updatedTime:type_name -> sys.CompareInt64
	119, // 91: sys.UserInfoIndexResp.list:type_name -> sys.UserInfo
	119, // 92: sys.userInfoUpdateReq.info:type_name -> sys.UserInfo
	119, // 93: sys.UserLoginResp.info:type_name -> sys.UserInfo
	135, // 94: sys.UserLoginResp.token:type_name -> sys.JwtToken
	119, // 95: sys.UserRegisterReq.info:type_name -> sys.UserInfo
	243, // 96: sys.UserRegisterReq.expand:type_name -> sys.UserRegisterReq.ExpandEntry
	207, // 97: sys.UserRoleIndexResp.list:type_name -> sys.RoleInfo
	193, // 98: sys.UserDeptIndexResp.list:type_name -> sys.DeptInfo
	119, // 99: sys.DeptUserIndexResp.list:type_name -> sys.UserInfo
	207, // 100: sys.DeptRoleIndexResp.list:type_name -> sys.RoleInfo
	66,  // 101: sys.DataProjectIndexReq.page:type_name -> sys.PageInfo
	159, // 102: sys.DataProjectIndexResp.list:type_name -> sys.DataProject
	166, // 103: sys.DataAreaMultiUpdateReq.areas:type_name -> sys.DataArea
	66,  // 104: sys.DataAreaIndexReq.page:type_name -> sys.PageInfo
	166, // 105: sys.DataAreaIndexResp.list:type_name -> sys.DataArea
	66,  // 106: sys.UserAreaApplyIndexReq.page:type_name -> sys.PageInfo
	173, // 107: sys.UserAreaApplyIndexResp.list:type_name -> sys.UserAreaApplyInfo
	246, // 108: sys.DictInfo.desc:type_name -> google.protobuf.StringValue
	246, // 109: sys.DictInfo.body:type_name -> google.protobuf.StringValue
	66,  // 110: sys.DictInfoIndexReq.page:type_name -> sys.PageInfo
	176, // 111: sys.DictInfoIndexResp.list:type_name -> sys.DictInfo
	246, // 112: sys.DictDetail.desc:type_name -> google.protobuf.StringValue
	246, // 113: sys.DictDetail.body:type_name -> google.protobuf.StringValue
	181, // 114: sys.DictDetail.parent:type_name -> sys.DictDetail
	181, // 115: sys.DictDetail.children:type_name -> sys.DictDetail
	66,  // 116: sys.DictDetailIndexReq.page:type_name -> sys.PageInfo
	181, // 117: sys.DictDetailIndexResp.list:type_name -> sys.DictDetail
	1,   // 118: sys.DeptSyncJob.thirdConfig:type_name -> sys.ThirdAppConfig
	244, // 119: sys.DeptSyncJob.fieldMap:type_name -> sys.DeptSyncJob.FieldMapEntry
	66,  // 120: sys.DeptSyncJobIndexReq.page:type_name -> sys.PageInfo
	185, // 121: sys.DeptSyncJobIndexResp.list:type_name -> sys.DeptSyncJob
	66,  // 122: sys.ThirdDeptInfoIndexReq.page:type_name -> sys.PageInfo
	1,   // 123: sys.ThirdDeptInfoIndexReq.thirdConfig:type_name -> sys.ThirdAppConfig
	1,   // 124: sys.ThirdDeptInfoReadReq.thirdConfig:type_name -> sys.ThirdAppConfig
	246, // 125: sys.DeptInfo.desc:type_name -> google.protobuf.StringValue
	193, // 126: sys.DeptInfo.parent:type_name -> sys.DeptInfo
	193, // 127: sys.DeptInfo.children:type_name -> sys.DeptInfo
	66,  // 128: sys.DeptInfoIndexReq.page:type_name -> sys.PageInfo
	193, // 129: sys.DeptInfoIndexResp.list:type_name -> sys.DeptInfo
	246, // 130: sys.ModuleInfo.desc:type_name -> google.protobuf.StringValue
	246, // 131: sys.ModuleInfo.body:type_name -> google.protobuf.StringValue
	66,  // 132: sys.ModuleInfoIndexReq.page:type_name -> sys.PageInfo
	196, // 133: sys.ModuleInfoIndexResp.list:type_name -> sys.ModuleInfo
	246, // 134: sys.AppInfo.desc:type_name -> google.protobuf.StringValue
	66,  // 135: sys.AppInfoIndexReq.page:type_name -> sys.PageInfo
	199, // 136: sys.AppInfoIndexResp.list:type_name -> sys.AppInfo
	66,  // 137: sys.RoleInfoIndexReq.page:type_name -> sys.PageInfo
	207, // 138: sys.RoleInfoIndexResp.list:type_name -> sys.RoleInfo
	246, // 139: sys.RoleInfo.desc:type_name -> google.protobuf.StringValue
	246, // 140: sys.MenuInfo.body:type_name -> google.protobuf.StringValue
	214, // 141: sys.MenuInfo.children:type_name -> sys.MenuInfo
	214, // 142: sys.MenuInfoIndexResp.list:type_name -> sys.MenuInfo
	216, // 143: sys.configResp.map:type_name -> sys.Map
	66,  // 144: sys.ApiInfoIndexReq.page:type_name -> sys.PageInfo
	219, // 145: sys.ApiInfoIndexResp.list:type_name -> sys.ApiInfo
	66,  // 146: sys.AccessInfoIndexReq.page:type_name -> sys.PageInfo
	219, // 147: sys.AccessInfo.Apis:type_name -> sys.ApiInfo
	224, // 148: sys.AccessInfoIndexResp.list:type_name -> sys.AccessInfo
	245, // 149: sys.OpsWorkOrder.params:type_name -> sys.OpsWorkOrder.ParamsEntry
	66,  // 150: sys.OpsWorkOrderIndexReq.page:type_name -> sys.PageInfo
	226, // 151: sys.OpsWorkOrderIndexResp.list:type_name -> sys.OpsWorkOrder
	66,  // 152: sys.OpsFeedbackIndexReq.page:type_name -> sys.PageInfo
	229, // 153: sys.OpsFeedbackIndexResp.list:type_name -> sys.OpsFeedback
	123, // 154: sys.UserCheckTokenResp.ProjectAuthEntry.value:type_name -> sys.ProjectAuth
	129, // 155: sys.UserManage.userInfoCreate:input_type -> sys.UserInfoCreateReq
	130, // 156: sys.UserManage.userInfoIndex:input_type -> sys.UserInfoIndexReq
	132, // 157: sys.UserManage.userInfoUpdate:input_type -> sys.userInfoUpdateReq
	133, // 158: sys.UserManage.userInfoRead:input_type -> sys.UserInfoReadReq
	134, // 159: sys.UserManage.userInfoDelete:input_type -> sys.UserInfoDeleteReq
	142, // 160: sys.UserManage.userLogin:input_type -> sys.UserLoginReq
	138, // 161: sys.UserManage.userForgetPwd:input_type -> sys.UserForgetPwdReq
	136, // 162: sys.UserManage.userCaptcha:input_type -> sys.UserCaptchaReq
	121, // 163: sys.UserManage.userCheckToken:input_type -> sys.UserCheckTokenReq
	144, // 164: sys.UserManage.userRegister:input_type -> sys.UserRegisterReq
	141, // 165: sys.UserManage.userChangePwd:input_type -> sys.UserChangePwdReq
	139, // 166: sys.UserManage.userCodeToUserID:input_type -> sys.UserCodeToUserIDReq
	146, // 167: sys.UserManage.userBindAccount:input_type -> sys.UserBindAccountReq
	147, // 168: sys.UserManage.userRoleIndex:input_type -> sys.UserRoleIndexReq
	149, // 169: sys.UserManage.userRoleMultiUpdate:input_type -> sys.UserRoleMultiUpdateReq
	149, // 170: sys.UserManage.userRoleMultiCreate:input_type -> sys.UserRoleMultiUpdateReq
	150, // 171: sys.UserManage.userDeptIndex:input_type -> sys.UserDeptIndexReq
	152, // 172: sys.UserManage.userDeptMultiDelete:input_type -> sys.UserDeptMultiSaveReq
	152, // 173: sys.UserManage.userDeptMultiCreate:input_type -> sys.UserDeptMultiSaveReq
	171, // 174: sys.UserManage.userAreaApplyCreate:input_type -> sys.UserAreaApplyCreateReq
	3,   // 175: sys.UserManage.userMessageMultiIsRead:input_type -> sys.IDList
	38,  // 176: sys.UserManage.userMessageIndex:input_type -> sys.UserMessageIndexReq
	65,  // 177: sys.UserManage.userMessageStatistics:input_type -> sys.Empty
	71,  // 178: sys.UserManage.userProfileRead:input_type -> sys.WithCode
	32,  // 179: sys.UserManage.userProfileUpdate:input_type -> sys.UserProfile
	33,  // 180: sys.UserManage.userProfileIndex:input_type -> sys.UserProfileIndexReq
	162, // 181: sys.DataManage.dataProjectCreate:input_type -> sys.DataProjectSaveReq
	163, // 182: sys.DataManage.dataProjectMultiCreate:input_type -> sys.DataProjectMultiSaveReq
	160, // 183: sys.DataManage.dataProjectDelete:input_type -> sys.DataProjectDeleteReq
	161, // 184: sys.DataManage.dataProjectMultiDelete:input_type -> sys.DataProjectMultiDeleteReq
	164, // 185: sys.DataManage.dataProjectIndex:input_type -> sys.DataProjectIndexReq
	167, // 186: sys.DataManage.dataAreaMultiUpdate:input_type -> sys.DataAreaMultiUpdateReq
	168, // 187: sys.DataManage.dataAreaIndex:input_type -> sys.DataAreaIndexReq
	170, // 188: sys.DataManage.dataAreaMultiDelete:input_type -> sys.DataAreaMultiDeleteReq
	172, // 189: sys.DataManage.userAreaApplyIndex:input_type -> sys.UserAreaApplyIndexReq
	175, // 190: sys.DataManage.userAreaApplyDeal:input_type -> sys.UserAreaApplyDealReq
	30,  // 191: sys.DataManage.dataOpenAccessIndex:input_type -> sys.OpenAccessIndexReq
	69,  // 192: sys.DataManage.dataOpenAccessRead:input_type -> sys.WithID
	29,  // 193: sys.DataManage.dataOpenAccessUpdate:input_type -> sys.OpenAccess
	29,  // 194: sys.DataManage.dataOpenAccessCreate:input_type -> sys.OpenAccess
	69,  // 195: sys.DataManage.dataOpenAccessDelete:input_type -> sys.WithID
	17,  // 196: sys.NotifyManage.messageInfoSend:input_type -> sys.MessageInfoSendReq
	15,  // 197: sys.NotifyManage.messageInfoIndex:input_type -> sys.MessageInfoIndexReq
	18,  // 198: sys.NotifyManage.messageInfoUpdate:input_type -> sys.MessageInfo
	69,  // 199: sys.NotifyManage.messageInfoDelete:input_type -> sys.WithID
	70,  // 200: sys.NotifyManage.notifyConfigRead:input_type -> sys.WithIDCode
	4,   // 201: sys.NotifyManage.notifyConfigCreate:input_type -> sys.NotifyConfig
	4,   // 202: sys.NotifyManage.notifyConfigUpdate:input_type -> sys.NotifyConfig
	5,   // 203: sys.NotifyManage.notifyConfigIndex:input_type -> sys.NotifyConfigIndexReq
	69,  // 204: sys.NotifyManage.notifyConfigDelete:input_type -> sys.WithID
	40,  // 205: sys.NotifyManage.notifyConfigSend:input_type -> sys.NotifyConfigSendReq
	69,  // 206: sys.NotifyManage.notifyTemplateRead:input_type -> sys.WithID
	7,   // 207: sys.NotifyManage.notifyTemplateCreate:input_type -> sys.NotifyTemplate
	7,   // 208: sys.NotifyManage.notifyTemplateUpdate:input_type -> sys.NotifyTemplate
	13,  // 209: sys.NotifyManage.notifyTemplateIndex:input_type -> sys.NotifyTemplateIndexReq
	69,  // 210: sys.NotifyManage.notifyTemplateDelete:input_type -> sys.WithID
	22,  // 211: sys.NotifyManage.notifyConfigTemplateUpdate:input_type -> sys.NotifyConfigTemplate
	19,  // 212: sys.NotifyManage.notifyConfigTemplateDelete:input_type -> sys.NotifyConfigTemplateDeleteReq
	20,  // 213: sys.NotifyManage.notifyConfigTemplateIndex:input_type -> sys.NotifyConfigTemplateIndexReq
	69,  // 214: sys.NotifyManage.notifyChannelRead:input_type -> sys.WithID
	8,   // 215: sys.NotifyManage.notifyChannelCreate:input_type -> sys.NotifyChannel
	8,   // 216: sys.NotifyManage.notifyChannelUpdate:input_type -> sys.NotifyChannel
	9,   // 217: sys.NotifyManage.notifyChannelIndex:input_type -> sys.NotifyChannelIndexReq
	69,  // 218: sys.NotifyManage.notifyChannelDelete:input_type -> sys.WithID
	219, // 219: sys.AccessManage.apiInfoCreate:input_type -> sys.ApiInfo
	218, // 220: sys.AccessManage.apiInfoIndex:input_type -> sys.ApiInfoIndexReq
	219, // 221: sys.AccessManage.apiInfoUpdate:input_type -> sys.ApiInfo
	69,  // 222: sys.AccessManage.apiInfoDelete:input_type -> sys.WithID
	221, // 223: sys.AccessManage.accessInfoMultiImport:input_type -> sys.AccessInfoMultiImportReq
	224, // 224: sys.AccessManage.accessInfoCreate:input_type -> sys.AccessInfo
	223, // 225: sys.AccessManage.accessInfoIndex:input_type -> sys.AccessInfoIndexReq
	224, // 226: sys.AccessManage.accessInfoUpdate:input_type -> sys.AccessInfo
	69,  // 227: sys.AccessManage.accessInfoDelete:input_type -> sys.WithID
	207, // 228: sys.RoleManage.roleInfoCreate:input_type -> sys.RoleInfo
	205, // 229: sys.RoleManage.roleInfoIndex:input_type -> sys.RoleInfoIndexReq
	207, // 230: sys.RoleManage.roleInfoUpdate:input_type -> sys.RoleInfo
	69,  // 231: sys.RoleManage.roleInfoDelete:input_type -> sys.WithID
	103, // 232: sys.RoleManage.roleMenuIndex:input_type -> sys.RoleMenuIndexReq
	126, // 233: sys.RoleManage.roleMenuMultiUpdate:input_type -> sys.RoleMenuMultiUpdateReq
	105, // 234: sys.RoleManage.roleAppIndex:input_type -> sys.RoleAppIndexReq
	124, // 235: sys.RoleManage.roleAppMultiUpdate:input_type -> sys.RoleAppMultiUpdateReq
	107, // 236: sys.RoleManage.roleModuleIndex:input_type -> sys.RoleModuleIndexReq
	125, // 237: sys.RoleManage.roleModuleMultiUpdate:input_type -> sys.RoleModuleMultiUpdateReq
	127, // 238: sys.RoleManage.roleApiAuth:input_type -> sys.RoleApiAuthReq
	100, // 239: sys.RoleManage.roleAccessMultiUpdate:input_type -> sys.RoleAccessMultiUpdateReq
	101, // 240: sys.RoleManage.roleAccessIndex:input_type -> sys.RoleAccessIndexReq
	199, // 241: sys.AppManage.appInfoCreate:input_type -> sys.AppInfo
	200, // 242: sys.AppManage.appInfoIndex:input_type -> sys.AppInfoIndexReq
	199, // 243: sys.AppManage.appInfoUpdate:input_type -> sys.AppInfo
	70,  // 244: sys.AppManage.appInfoDelete:input_type -> sys.WithIDCode
	70,  // 245: sys.AppManage.appInfoRead:input_type -> sys.WithIDCode
	203, // 246: sys.AppManage.appModuleIndex:input_type -> sys.AppModuleIndexReq
	202, // 247: sys.AppManage.appModuleMultiUpdate:input_type -> sys.AppModuleMultiUpdateReq
	196, // 248: sys.ModuleManage.moduleInfoCreate:input_type -> sys.ModuleInfo
	197, // 249: sys.ModuleManage.moduleInfoIndex:input_type -> sys.ModuleInfoIndexReq
	196, // 250: sys.ModuleManage.moduleInfoUpdate:input_type -> sys.ModuleInfo
	70,  // 251: sys.ModuleManage.moduleInfoDelete:input_type -> sys.WithIDCode
	70,  // 252: sys.ModuleManage.moduleInfoRead:input_type -> sys.WithIDCode
	214, // 253: sys.ModuleManage.moduleMenuCreate:input_type -> sys.MenuInfo
	213, // 254: sys.ModuleManage.moduleMenuIndex:input_type -> sys.MenuInfoIndexReq
	214, // 255: sys.ModuleManage.moduleMenuUpdate:input_type -> sys.MenuInfo
	69,  // 256: sys.ModuleManage.moduleMenuDelete:input_type -> sys.WithID
	209, // 257: sys.ModuleManage.moduleMenuMultiImport:input_type -> sys.MenuMultiImportReq
	211, // 258: sys.ModuleManage.moduleMenuMultiExport:input_type -> sys.MenuMultiExportReq
	176, // 259: sys.DictManage.dictInfoCreate:input_type -> sys.DictInfo
	178, // 260: sys.DictManage.dictInfoIndex:input_type -> sys.DictInfoIndexReq
	176, // 261: sys.DictManage.dictInfoUpdate:input_type -> sys.DictInfo
	69,  // 262: sys.DictManage.dictInfoDelete:input_type -> sys.WithID
	177, // 263: sys.DictManage.dictInfoRead:input_type -> sys.DictInfoReadReq
	180, // 264: sys.DictManage.dictDetailRead:input_type -> sys.DictDetailReadReq
	181, // 265: sys.DictManage.dictDetailCreate:input_type -> sys.DictDetail
	182, // 266: sys.DictManage.dictDetailIndex:input_type -> sys.DictDetailIndexReq
	181, // 267: sys.DictManage.dictDetailUpdate:input_type -> sys.DictDetail
	69,  // 268: sys.DictManage.dictDetailDelete:input_type -> sys.WithID
	188, // 269: sys.DepartmentManage.deptInfoRead:input_type -> sys.DeptInfoReadReq
	193, // 270: sys.DepartmentManage.deptInfoCreate:input_type -> sys.DeptInfo
	194, // 271: sys.DepartmentManage.deptInfoIndex:input_type -> sys.DeptInfoIndexReq
	193, // 272: sys.DepartmentManage.deptInfoUpdate:input_type -> sys.DeptInfo
	69,  // 273: sys.DepartmentManage.deptInfoDelete:input_type -> sys.WithID
	153, // 274: sys.DepartmentManage.deptUserIndex:input_type -> sys.DeptUserIndexReq
	155, // 275: sys.DepartmentManage.deptUserMultiDelete:input_type -> sys.DeptUserMultiSaveReq
	155, // 276: sys.DepartmentManage.deptUserMultiCreate:input_type -> sys.DeptUserMultiSaveReq
	156, // 277: sys.DepartmentManage.deptRoleIndex:input_type -> sys.DeptRoleIndexReq
	158, // 278: sys.DepartmentManage.deptRoleMultiDelete:input_type -> sys.DeptRoleMultiSaveReq
	158, // 279: sys.DepartmentManage.deptRoleMultiCreate:input_type -> sys.DeptRoleMultiSaveReq
	189, // 280: sys.DepartmentManage.deptSyncJobExecute:input_type -> sys.DeptSyncJobExecuteReq
	184, // 281: sys.DepartmentManage.deptSyncJobRead:input_type -> sys.DeptSyncJobReadReq
	185, // 282: sys.DepartmentManage.deptSyncJobCreate:input_type -> sys.DeptSyncJob
	186, // 283: sys.DepartmentManage.deptSyncJobIndex:input_type -> sys.DeptSyncJobIndexReq
	185, // 284: sys.DepartmentManage.deptSyncJobUpdate:input_type -> sys.DeptSyncJob
	69,  // 285: sys.DepartmentManage.deptSyncJobDelete:input_type -> sys.WithID
	65,  // 286: sys.Common.config:input_type -> sys.Empty
	95,  // 287: sys.Common.QRCodeRead:input_type -> sys.QRCodeReadReq
	93,  // 288: sys.Common.WeatherRead:input_type -> sys.WeatherReadReq
	97,  // 289: sys.Common.slotInfoIndex:input_type -> sys.SlotInfoIndexReq
	91,  // 290: sys.Common.slotInfoCreate:input_type -> sys.SlotInfo
	91,  // 291: sys.Common.slotInfoUpdate:input_type -> sys.SlotInfo
	69,  // 292: sys.Common.slotInfoDelete:input_type -> sys.WithID
	69,  // 293: sys.Common.slotInfoRead:input_type -> sys.WithID
	71,  // 294: sys.Common.serviceInfoRead:input_type -> sys.WithCode
	90,  // 295: sys.Common.serviceInfoUpdate:input_type -> sys.ServiceInfo
	192, // 296: sys.Common.thirdDeptRead:input_type -> sys.ThirdDeptInfoReadReq
	191, // 297: sys.Common.thirdDeptIndex:input_type -> sys.ThirdDeptInfoIndexReq
	111, // 298: sys.Log.loginLogIndex:input_type -> sys.LoginLogIndexReq
	114, // 299: sys.Log.operLogIndex:input_type -> sys.OperLogIndexReq
	117, // 300: sys.Log.loginLogCreate:input_type -> sys.LoginLogCreateReq
	118, // 301: sys.Log.operLogCreate:input_type -> sys.OperLogCreateReq
	74,  // 302: sys.ProjectManage.projectInfoCreate:input_type -> sys.ProjectInfo
	74,  // 303: sys.ProjectManage.projectInfoUpdate:input_type -> sys.ProjectInfo
	73,  // 304: sys.ProjectManage.projectInfoDelete:input_type -> sys.ProjectWithID
	73,  // 305: sys.ProjectManage.projectInfoRead:input_type -> sys.ProjectWithID
	79,  // 306: sys.ProjectManage.projectInfoIndex:input_type -> sys.ProjectInfoIndexReq
	76,  // 307: sys.ProjectManage.projectProfileRead:input_type -> sys.ProjectProfileReadReq
	75,  // 308: sys.ProjectManage.projectProfileUpdate:input_type -> sys.ProjectProfile
	77,  // 309: sys.ProjectManage.projectProfileIndex:input_type -> sys.ProjectProfileIndexReq
	81,  // 310: sys.AreaManage.areaInfoCreate:input_type -> sys.AreaInfo
	81,  // 311: sys.AreaManage.areaInfoUpdate:input_type -> sys.AreaInfo
	82,  // 312: sys.AreaManage.areaInfoDelete:input_type -> sys.AreaWithID
	87,  // 313: sys.AreaManage.areaInfoRead:input_type -> sys.AreaInfoReadReq
	88,  // 314: sys.AreaManage.areaInfoIndex:input_type -> sys.AreaInfoIndexReq
	84,  // 315: sys.AreaManage.areaProfileRead:input_type -> sys.AreaProfileReadReq
	83,  // 316: sys.AreaManage.areaProfileUpdate:input_type -> sys.AreaProfile
	85,  // 317: sys.AreaManage.areaProfileIndex:input_type -> sys.AreaProfileIndexReq
	41,  // 318: sys.TenantManage.tenantInfoCreate:input_type -> sys.TenantInfoCreateReq
	42,  // 319: sys.TenantManage.tenantInfoUpdate:input_type -> sys.TenantInfo
	70,  // 320: sys.TenantManage.tenantInfoDelete:input_type -> sys.WithIDCode
	70,  // 321: sys.TenantManage.tenantInfoRead:input_type -> sys.WithIDCode
	43,  // 322: sys.TenantManage.tenantInfoIndex:input_type -> sys.TenantInfoIndexReq
	45,  // 323: sys.TenantManage.tenantConfigUpdate:input_type -> sys.TenantConfig
	71,  // 324: sys.TenantManage.tenantConfigRead:input_type -> sys.WithCode
	48,  // 325: sys.TenantManage.tenantAccessMultiDelete:input_type -> sys.TenantAccessMultiSaveReq
	48,  // 326: sys.TenantManage.tenantAccessMultiCreate:input_type -> sys.TenantAccessMultiSaveReq
	48,  // 327: sys.TenantManage.tenantAccessMultiUpdate:input_type -> sys.TenantAccessMultiSaveReq
	49,  // 328: sys.TenantManage.tenantAccessIndex:input_type -> sys.TenantAccessIndexReq
	54,  // 329: sys.TenantManage.tenantAppIndex:input_type -> sys.TenantAppIndexReq
	51,  // 330: sys.TenantManage.tenantAppCreate:input_type -> sys.TenantAppInfo
	52,  // 331: sys.TenantManage.tenantAppRead:input_type -> sys.TenantAppWithIDOrCode
	51,  // 332: sys.TenantManage.tenantAppUpdate:input_type -> sys.TenantAppInfo
	52,  // 333: sys.TenantManage.tenantAppDelete:input_type -> sys.TenantAppWithIDOrCode
	51,  // 334: sys.TenantManage.tenantAppModuleMultiCreate:input_type -> sys.TenantAppInfo
	62,  // 335: sys.TenantManage.tenantAppModuleCreate:input_type -> sys.TenantModuleCreateReq
	57,  // 336: sys.TenantManage.tenantAppModuleIndex:input_type -> sys.TenantModuleIndexReq
	63,  // 337: sys.TenantManage.tenantAppModuleDelete:input_type -> sys.TenantModuleWithIDOrCode
	61,  // 338: sys.TenantManage.tenantAppMenuCreate:input_type -> sys.TenantAppMenu
	59,  // 339: sys.TenantManage.tenantAppMenuIndex:input_type -> sys.TenantAppMenuIndexReq
	61,  // 340: sys.TenantManage.tenantAppMenuUpdate:input_type -> sys.TenantAppMenu
	72,  // 341: sys.TenantManage.tenantAppMenuDelete:input_type -> sys.WithAppCodeID
	26,  // 342: sys.TenantManage.tenantOpenCheckToken:input_type -> sys.TenantOpenCheckTokenReq
	71,  // 343: sys.TenantManage.tenantOpenWebHook:input_type -> sys.WithCode
	24,  // 344: sys.TenantManage.tenantAgreementIndex:input_type -> sys.TenantAgreementIndexReq
	23,  // 345: sys.TenantManage.tenantAgreementUpdate:input_type -> sys.TenantAgreement
	23,  // 346: sys.TenantManage.tenantAgreementCreate:input_type -> sys.TenantAgreement
	70,  // 347: sys.TenantManage.tenantAgreementRead:input_type -> sys.WithIDCode
	69,  // 348: sys.TenantManage.tenantAgreementDelete:input_type -> sys.WithID
	226, // 349: sys.ops.opsWorkOrderCreate:input_type -> sys.OpsWorkOrder
	226, // 350: sys.ops.opsWorkOrderUpdate:input_type -> sys.OpsWorkOrder
	227, // 351: sys.ops.opsWorkOrderIndex:input_type -> sys.OpsWorkOrderIndexReq
	229, // 352: sys.ops.opsFeedbackCreate:input_type -> sys.OpsFeedback
	229, // 353: sys.ops.opsFeedbackUpdate:input_type -> sys.OpsFeedback
	230, // 354: sys.ops.opsFeedbackIndex:input_type -> sys.OpsFeedbackIndexReq
	120, // 355: sys.UserManage.userInfoCreate:output_type -> sys.UserCreateResp
	131, // 356: sys.UserManage.userInfoIndex:output_type -> sys.UserInfoIndexResp
	65,  // 357: sys.UserManage.userInfoUpdate:output_type -> sys.Empty
	119, // 358: sys.UserManage.userInfoRead:output_type -> sys.UserInfo
	65,  // 359: sys.UserManage.userInfoDelete:output_type -> sys.Empty
	143, // 360: sys.UserManage.userLogin:output_type -> sys.UserLoginResp
	65,  // 361: sys.UserManage.userForgetPwd:output_type -> sys.Empty
	137, // 362: sys.UserManage.userCaptcha:output_type -> sys.UserCaptchaResp
	122, // 363: sys.UserManage.userCheckToken:output_type -> sys.UserCheckTokenResp
	145, // 364: sys.UserManage.userRegister:output_type -> sys.UserRegisterResp
	65,  // 365: sys.UserManage.userChangePwd:output_type -> sys.Empty
	140, // 366: sys.UserManage.userCodeToUserID:output_type -> sys.UserCodeToUserIDResp
	65,  // 367: sys.UserManage.userBindAccount:output_type -> sys.Empty
	148, // 368: sys.UserManage.userRoleIndex:output_type -> sys.UserRoleIndexResp
	65,  // 369: sys.UserManage.userRoleMultiUpdate:output_type -> sys.Empty
	65,  // 370: sys.UserManage.userRoleMultiCreate:output_type -> sys.Empty
	151, // 371: sys.UserManage.userDeptIndex:output_type -> sys.UserDeptIndexResp
	65,  // 372: sys.UserManage.userDeptMultiDelete:output_type -> sys.Empty
	65,  // 373: sys.UserManage.userDeptMultiCreate:output_type -> sys.Empty
	65,  // 374: sys.UserManage.userAreaApplyCreate:output_type -> sys.Empty
	65,  // 375: sys.UserManage.userMessageMultiIsRead:output_type -> sys.Empty
	39,  // 376: sys.UserManage.userMessageIndex:output_type -> sys.UserMessageIndexResp
	36,  // 377: sys.UserManage.userMessageStatistics:output_type -> sys.UserMessageStatisticsResp
	32,  // 378: sys.UserManage.userProfileRead:output_type -> sys.UserProfile
	65,  // 379: sys.UserManage.userProfileUpdate:output_type -> sys.Empty
	34,  // 380: sys.UserManage.userProfileIndex:output_type -> sys.UserProfileIndexResp
	65,  // 381: sys.DataManage.dataProjectCreate:output_type -> sys.Empty
	65,  // 382: sys.DataManage.dataProjectMultiCreate:output_type -> sys.Empty
	65,  // 383: sys.DataManage.dataProjectDelete:output_type -> sys.Empty
	65,  // 384: sys.DataManage.dataProjectMultiDelete:output_type -> sys.Empty
	165, // 385: sys.DataManage.dataProjectIndex:output_type -> sys.DataProjectIndexResp
	65,  // 386: sys.DataManage.dataAreaMultiUpdate:output_type -> sys.Empty
	169, // 387: sys.DataManage.dataAreaIndex:output_type -> sys.DataAreaIndexResp
	65,  // 388: sys.DataManage.dataAreaMultiDelete:output_type -> sys.Empty
	174, // 389: sys.DataManage.userAreaApplyIndex:output_type -> sys.UserAreaApplyIndexResp
	65,  // 390: sys.DataManage.userAreaApplyDeal:output_type -> sys.Empty
	31,  // 391: sys.DataManage.dataOpenAccessIndex:output_type -> sys.OpenAccessIndexResp
	29,  // 392: sys.DataManage.dataOpenAccessRead:output_type -> sys.OpenAccess
	65,  // 393: sys.DataManage.dataOpenAccessUpdate:output_type -> sys.Empty
	69,  // 394: sys.DataManage.dataOpenAccessCreate:output_type -> sys.WithID
	65,  // 395: sys.DataManage.dataOpenAccessDelete:output_type -> sys.Empty
	69,  // 396: sys.NotifyManage.messageInfoSend:output_type -> sys.WithID
	16,  // 397: sys.NotifyManage.messageInfoIndex:output_type -> sys.MessageInfoIndexResp
	65,  // 398: sys.NotifyManage.messageInfoUpdate:output_type -> sys.Empty
	65,  // 399: sys.NotifyManage.messageInfoDelete:output_type -> sys.Empty
	4,   // 400: sys.NotifyManage.notifyConfigRead:output_type -> sys.NotifyConfig
	69,  // 401: sys.NotifyManage.notifyConfigCreate:output_type -> sys.WithID
	65,  // 402: sys.NotifyManage.notifyConfigUpdate:output_type -> sys.Empty
	6,   // 403: sys.NotifyManage.notifyConfigIndex:output_type -> sys.NotifyConfigIndexResp
	65,  // 404: sys.NotifyManage.notifyConfigDelete:output_type -> sys.Empty
	65,  // 405: sys.NotifyManage.notifyConfigSend:output_type -> sys.Empty
	7,   // 406: sys.NotifyManage.notifyTemplateRead:output_type -> sys.NotifyTemplate
	69,  // 407: sys.NotifyManage.notifyTemplateCreate:output_type -> sys.WithID
	65,  // 408: sys.NotifyManage.notifyTemplateUpdate:output_type -> sys.Empty
	14,  // 409: sys.NotifyManage.notifyTemplateIndex:output_type -> sys.NotifyTemplateIndexResp
	65,  // 410: sys.NotifyManage.notifyTemplateDelete:output_type -> sys.Empty
	65,  // 411: sys.NotifyManage.notifyConfigTemplateUpdate:output_type -> sys.Empty
	65,  // 412: sys.NotifyManage.notifyConfigTemplateDelete:output_type -> sys.Empty
	21,  // 413: sys.NotifyManage.notifyConfigTemplateIndex:output_type -> sys.NotifyConfigTemplateIndexResp
	8,   // 414: sys.NotifyManage.notifyChannelRead:output_type -> sys.NotifyChannel
	69,  // 415: sys.NotifyManage.notifyChannelCreate:output_type -> sys.WithID
	65,  // 416: sys.NotifyManage.notifyChannelUpdate:output_type -> sys.Empty
	10,  // 417: sys.NotifyManage.notifyChannelIndex:output_type -> sys.NotifyChannelIndexResp
	65,  // 418: sys.NotifyManage.notifyChannelDelete:output_type -> sys.Empty
	69,  // 419: sys.AccessManage.apiInfoCreate:output_type -> sys.WithID
	220, // 420: sys.AccessManage.apiInfoIndex:output_type -> sys.ApiInfoIndexResp
	65,  // 421: sys.AccessManage.apiInfoUpdate:output_type -> sys.Empty
	65,  // 422: sys.AccessManage.apiInfoDelete:output_type -> sys.Empty
	222, // 423: sys.AccessManage.accessInfoMultiImport:output_type -> sys.AccessInfoMultiImportResp
	69,  // 424: sys.AccessManage.accessInfoCreate:output_type -> sys.WithID
	225, // 425: sys.AccessManage.accessInfoIndex:output_type -> sys.AccessInfoIndexResp
	65,  // 426: sys.AccessManage.accessInfoUpdate:output_type -> sys.Empty
	65,  // 427: sys.AccessManage.accessInfoDelete:output_type -> sys.Empty
	69,  // 428: sys.RoleManage.roleInfoCreate:output_type -> sys.WithID
	206, // 429: sys.RoleManage.roleInfoIndex:output_type -> sys.RoleInfoIndexResp
	65,  // 430: sys.RoleManage.roleInfoUpdate:output_type -> sys.Empty
	65,  // 431: sys.RoleManage.roleInfoDelete:output_type -> sys.Empty
	104, // 432: sys.RoleManage.roleMenuIndex:output_type -> sys.RoleMenuIndexResp
	65,  // 433: sys.RoleManage.roleMenuMultiUpdate:output_type -> sys.Empty
	106, // 434: sys.RoleManage.roleAppIndex:output_type -> sys.RoleAppIndexResp
	65,  // 435: sys.RoleManage.roleAppMultiUpdate:output_type -> sys.Empty
	108, // 436: sys.RoleManage.roleModuleIndex:output_type -> sys.RoleModuleIndexResp
	65,  // 437: sys.RoleManage.roleModuleMultiUpdate:output_type -> sys.Empty
	128, // 438: sys.RoleManage.roleApiAuth:output_type -> sys.RoleApiAuthResp
	65,  // 439: sys.RoleManage.roleAccessMultiUpdate:output_type -> sys.Empty
	102, // 440: sys.RoleManage.roleAccessIndex:output_type -> sys.RoleAccessIndexResp
	69,  // 441: sys.AppManage.appInfoCreate:output_type -> sys.WithID
	201, // 442: sys.AppManage.appInfoIndex:output_type -> sys.AppInfoIndexResp
	65,  // 443: sys.AppManage.appInfoUpdate:output_type -> sys.Empty
	65,  // 444: sys.AppManage.appInfoDelete:output_type -> sys.Empty
	199, // 445: sys.AppManage.appInfoRead:output_type -> sys.AppInfo
	204, // 446: sys.AppManage.appModuleIndex:output_type -> sys.AppModuleIndexResp
	65,  // 447: sys.AppManage.appModuleMultiUpdate:output_type -> sys.Empty
	69,  // 448: sys.ModuleManage.moduleInfoCreate:output_type -> sys.WithID
	198, // 449: sys.ModuleManage.moduleInfoIndex:output_type -> sys.ModuleInfoIndexResp
	65,  // 450: sys.ModuleManage.moduleInfoUpdate:output_type -> sys.Empty
	65,  // 451: sys.ModuleManage.moduleInfoDelete:output_type -> sys.Empty
	196, // 452: sys.ModuleManage.moduleInfoRead:output_type -> sys.ModuleInfo
	69,  // 453: sys.ModuleManage.moduleMenuCreate:output_type -> sys.WithID
	215, // 454: sys.ModuleManage.moduleMenuIndex:output_type -> sys.MenuInfoIndexResp
	65,  // 455: sys.ModuleManage.moduleMenuUpdate:output_type -> sys.Empty
	65,  // 456: sys.ModuleManage.moduleMenuDelete:output_type -> sys.Empty
	210, // 457: sys.ModuleManage.moduleMenuMultiImport:output_type -> sys.MenuMultiImportResp
	212, // 458: sys.ModuleManage.moduleMenuMultiExport:output_type -> sys.MenuMultiExportResp
	69,  // 459: sys.DictManage.dictInfoCreate:output_type -> sys.WithID
	179, // 460: sys.DictManage.dictInfoIndex:output_type -> sys.DictInfoIndexResp
	65,  // 461: sys.DictManage.dictInfoUpdate:output_type -> sys.Empty
	65,  // 462: sys.DictManage.dictInfoDelete:output_type -> sys.Empty
	176, // 463: sys.DictManage.dictInfoRead:output_type -> sys.DictInfo
	181, // 464: sys.DictManage.dictDetailRead:output_type -> sys.DictDetail
	69,  // 465: sys.DictManage.dictDetailCreate:output_type -> sys.WithID
	183, // 466: sys.DictManage.dictDetailIndex:output_type -> sys.DictDetailIndexResp
	65,  // 467: sys.DictManage.dictDetailUpdate:output_type -> sys.Empty
	65,  // 468: sys.DictManage.dictDetailDelete:output_type -> sys.Empty
	193, // 469: sys.DepartmentManage.deptInfoRead:output_type -> sys.DeptInfo
	69,  // 470: sys.DepartmentManage.deptInfoCreate:output_type -> sys.WithID
	195, // 471: sys.DepartmentManage.deptInfoIndex:output_type -> sys.DeptInfoIndexResp
	65,  // 472: sys.DepartmentManage.deptInfoUpdate:output_type -> sys.Empty
	65,  // 473: sys.DepartmentManage.deptInfoDelete:output_type -> sys.Empty
	154, // 474: sys.DepartmentManage.deptUserIndex:output_type -> sys.DeptUserIndexResp
	65,  // 475: sys.DepartmentManage.deptUserMultiDelete:output_type -> sys.Empty
	65,  // 476: sys.DepartmentManage.deptUserMultiCreate:output_type -> sys.Empty
	157, // 477: sys.DepartmentManage.deptRoleIndex:output_type -> sys.DeptRoleIndexResp
	65,  // 478: sys.DepartmentManage.deptRoleMultiDelete:output_type -> sys.Empty
	65,  // 479: sys.DepartmentManage.deptRoleMultiCreate:output_type -> sys.Empty
	190, // 480: sys.DepartmentManage.deptSyncJobExecute:output_type -> sys.DeptSyncJobExecuteResp
	185, // 481: sys.DepartmentManage.deptSyncJobRead:output_type -> sys.DeptSyncJob
	69,  // 482: sys.DepartmentManage.deptSyncJobCreate:output_type -> sys.WithID
	187, // 483: sys.DepartmentManage.deptSyncJobIndex:output_type -> sys.DeptSyncJobIndexResp
	65,  // 484: sys.DepartmentManage.deptSyncJobUpdate:output_type -> sys.Empty
	65,  // 485: sys.DepartmentManage.deptSyncJobDelete:output_type -> sys.Empty
	217, // 486: sys.Common.config:output_type -> sys.configResp
	96,  // 487: sys.Common.QRCodeRead:output_type -> sys.QRCodeReadResp
	94,  // 488: sys.Common.WeatherRead:output_type -> sys.WeatherReadResp
	98,  // 489: sys.Common.slotInfoIndex:output_type -> sys.SlotInfoIndexResp
	69,  // 490: sys.Common.slotInfoCreate:output_type -> sys.WithID
	65,  // 491: sys.Common.slotInfoUpdate:output_type -> sys.Empty
	65,  // 492: sys.Common.slotInfoDelete:output_type -> sys.Empty
	91,  // 493: sys.Common.slotInfoRead:output_type -> sys.SlotInfo
	90,  // 494: sys.Common.serviceInfoRead:output_type -> sys.ServiceInfo
	65,  // 495: sys.Common.serviceInfoUpdate:output_type -> sys.Empty
	193, // 496: sys.Common.thirdDeptRead:output_type -> sys.DeptInfo
	195, // 497: sys.Common.thirdDeptIndex:output_type -> sys.DeptInfoIndexResp
	113, // 498: sys.Log.loginLogIndex:output_type -> sys.LoginLogIndexResp
	116, // 499: sys.Log.operLogIndex:output_type -> sys.OperLogIndexResp
	65,  // 500: sys.Log.loginLogCreate:output_type -> sys.Empty
	65,  // 501: sys.Log.operLogCreate:output_type -> sys.Empty
	73,  // 502: sys.ProjectManage.projectInfoCreate:output_type -> sys.ProjectWithID
	65,  // 503: sys.ProjectManage.projectInfoUpdate:output_type -> sys.Empty
	65,  // 504: sys.ProjectManage.projectInfoDelete:output_type -> sys.Empty
	74,  // 505: sys.ProjectManage.projectInfoRead:output_type -> sys.ProjectInfo
	80,  // 506: sys.ProjectManage.projectInfoIndex:output_type -> sys.ProjectInfoIndexResp
	75,  // 507: sys.ProjectManage.projectProfileRead:output_type -> sys.ProjectProfile
	65,  // 508: sys.ProjectManage.projectProfileUpdate:output_type -> sys.Empty
	78,  // 509: sys.ProjectManage.projectProfileIndex:output_type -> sys.ProjectProfileIndexResp
	82,  // 510: sys.AreaManage.areaInfoCreate:output_type -> sys.AreaWithID
	65,  // 511: sys.AreaManage.areaInfoUpdate:output_type -> sys.Empty
	65,  // 512: sys.AreaManage.areaInfoDelete:output_type -> sys.Empty
	81,  // 513: sys.AreaManage.areaInfoRead:output_type -> sys.AreaInfo
	89,  // 514: sys.AreaManage.areaInfoIndex:output_type -> sys.AreaInfoIndexResp
	83,  // 515: sys.AreaManage.areaProfileRead:output_type -> sys.AreaProfile
	65,  // 516: sys.AreaManage.areaProfileUpdate:output_type -> sys.Empty
	86,  // 517: sys.AreaManage.areaProfileIndex:output_type -> sys.AreaProfileIndexResp
	69,  // 518: sys.TenantManage.tenantInfoCreate:output_type -> sys.WithID
	65,  // 519: sys.TenantManage.tenantInfoUpdate:output_type -> sys.Empty
	65,  // 520: sys.TenantManage.tenantInfoDelete:output_type -> sys.Empty
	42,  // 521: sys.TenantManage.tenantInfoRead:output_type -> sys.TenantInfo
	44,  // 522: sys.TenantManage.tenantInfoIndex:output_type -> sys.TenantInfoIndexResp
	65,  // 523: sys.TenantManage.tenantConfigUpdate:output_type -> sys.Empty
	45,  // 524: sys.TenantManage.tenantConfigRead:output_type -> sys.TenantConfig
	65,  // 525: sys.TenantManage.tenantAccessMultiDelete:output_type -> sys.Empty
	65,  // 526: sys.TenantManage.tenantAccessMultiCreate:output_type -> sys.Empty
	65,  // 527: sys.TenantManage.tenantAccessMultiUpdate:output_type -> sys.Empty
	50,  // 528: sys.TenantManage.tenantAccessIndex:output_type -> sys.TenantAccessIndexResp
	55,  // 529: sys.TenantManage.tenantAppIndex:output_type -> sys.TenantAppIndexResp
	65,  // 530: sys.TenantManage.tenantAppCreate:output_type -> sys.Empty
	51,  // 531: sys.TenantManage.tenantAppRead:output_type -> sys.TenantAppInfo
	65,  // 532: sys.TenantManage.tenantAppUpdate:output_type -> sys.Empty
	65,  // 533: sys.TenantManage.tenantAppDelete:output_type -> sys.Empty
	65,  // 534: sys.TenantManage.tenantAppModuleMultiCreate:output_type -> sys.Empty
	65,  // 535: sys.TenantManage.tenantAppModuleCreate:output_type -> sys.Empty
	58,  // 536: sys.TenantManage.tenantAppModuleIndex:output_type -> sys.TenantModuleIndexResp
	65,  // 537: sys.TenantManage.tenantAppModuleDelete:output_type -> sys.Empty
	69,  // 538: sys.TenantManage.tenantAppMenuCreate:output_type -> sys.WithID
	60,  // 539: sys.TenantManage.tenantAppMenuIndex:output_type -> sys.TenantAppMenuIndexResp
	65,  // 540: sys.TenantManage.tenantAppMenuUpdate:output_type -> sys.Empty
	65,  // 541: sys.TenantManage.tenantAppMenuDelete:output_type -> sys.Empty
	27,  // 542: sys.TenantManage.tenantOpenCheckToken:output_type -> sys.TenantOpenCheckTokenResp
	28,  // 543: sys.TenantManage.tenantOpenWebHook:output_type -> sys.TenantOpenWebHook
	25,  // 544: sys.TenantManage.tenantAgreementIndex:output_type -> sys.TenantAgreementIndexResp
	65,  // 545: sys.TenantManage.tenantAgreementUpdate:output_type -> sys.Empty
	69,  // 546: sys.TenantManage.tenantAgreementCreate:output_type -> sys.WithID
	23,  // 547: sys.TenantManage.tenantAgreementRead:output_type -> sys.TenantAgreement
	65,  // 548: sys.TenantManage.tenantAgreementDelete:output_type -> sys.Empty
	69,  // 549: sys.ops.opsWorkOrderCreate:output_type -> sys.WithID
	65,  // 550: sys.ops.opsWorkOrderUpdate:output_type -> sys.Empty
	228, // 551: sys.ops.opsWorkOrderIndex:output_type -> sys.OpsWorkOrderIndexResp
	69,  // 552: sys.ops.opsFeedbackCreate:output_type -> sys.WithID
	65,  // 553: sys.ops.opsFeedbackUpdate:output_type -> sys.Empty
	231, // 554: sys.ops.opsFeedbackIndex:output_type -> sys.OpsFeedbackIndexResp
	355, // [355:555] is the sub-list for method output_type
	155, // [155:355] is the sub-list for method input_type
	155, // [155:155] is the sub-list for extension type_name
	155, // [155:155] is the sub-list for extension extendee
	0,   // [0:155] is the sub-list for field type_name
}

func init() { file_proto_sys_proto_init() }
func file_proto_sys_proto_init() {
	if File_proto_sys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdAppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyChannelIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyChannelIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdSms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTemplateIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyTemplateIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfoSendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigTemplateDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigTemplateIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigTemplateIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAgreement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAgreementIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAgreementIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantOpenCheckTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantOpenCheckTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantOpenWebHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAccessIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAccessIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessageStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessageStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessageIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessageIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyConfigSendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantConfigRegisterAutoCreateProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantConfigRegisterAutoCreateArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAccessMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAccessIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAccessIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppWithIDOrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenuIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenuIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantAppMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModuleWithIDOrCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithIDCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithAppCodeID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectProfileReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectProfileIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectProfileIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaWithID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaProfileReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaProfileIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaProfileIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherAir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCodeReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAccessMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAccessIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAccessIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleModuleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleApiAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JwtToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCaptchaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCaptchaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserForgetPwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCodeToUserIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCodeToUserIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChangePwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBindAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRoleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeptIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeptIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeptMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptUserIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptUserIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptUserMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptRoleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptRoleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptRoleMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectMultiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectMultiSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProjectIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAreaMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAreaIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAreaIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAreaMultiDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaApplyCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaApplyIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaApplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaApplyIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAreaApplyDealReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetailReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetailIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDetailIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJobReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJobIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJobIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJobExecuteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptSyncJobExecuteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdDeptInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdDeptInfoReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleMultiUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppModuleIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleAppUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuMultiImportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuMultiImportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuMultiExportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuMultiExportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfoMultiImportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfoMultiImportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfoIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessInfoIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsWorkOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsWorkOrderIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsWorkOrderIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsFeedbackIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpsFeedbackIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sys_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo_OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sys_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   246,
			NumExtensions: 0,
			NumServices:   15,
		},
		GoTypes:           file_proto_sys_proto_goTypes,
		DependencyIndexes: file_proto_sys_proto_depIdxs,
		MessageInfos:      file_proto_sys_proto_msgTypes,
	}.Build()
	File_proto_sys_proto = out.File
	file_proto_sys_proto_rawDesc = nil
	file_proto_sys_proto_goTypes = nil
	file_proto_sys_proto_depIdxs = nil
}
