// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/accessmanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type AccessManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedAccessManageServer
}

func NewAccessManageServer(svcCtx *svc.ServiceContext) *AccessManageServer {
	return &AccessManageServer{
		svcCtx: svcCtx,
	}
}

func (s *AccessManageServer) ApiInfoCreate(ctx context.Context, in *sys.ApiInfo) (*sys.WithID, error) {
	l := accessmanagelogic.NewApiInfoCreateLogic(ctx, s.svcCtx)
	return l.ApiInfoCreate(in)
}

func (s *AccessManageServer) ApiInfoIndex(ctx context.Context, in *sys.ApiInfoIndexReq) (*sys.ApiInfoIndexResp, error) {
	l := accessmanagelogic.NewApiInfoIndexLogic(ctx, s.svcCtx)
	return l.ApiInfoIndex(in)
}

func (s *AccessManageServer) ApiInfoUpdate(ctx context.Context, in *sys.ApiInfo) (*sys.Response, error) {
	l := accessmanagelogic.NewApiInfoUpdateLogic(ctx, s.svcCtx)
	return l.ApiInfoUpdate(in)
}

func (s *AccessManageServer) ApiInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Response, error) {
	l := accessmanagelogic.NewApiInfoDeleteLogic(ctx, s.svcCtx)
	return l.ApiInfoDelete(in)
}

func (s *AccessManageServer) AccessInfoCreate(ctx context.Context, in *sys.AccessInfo) (*sys.WithID, error) {
	l := accessmanagelogic.NewAccessInfoCreateLogic(ctx, s.svcCtx)
	return l.AccessInfoCreate(in)
}

func (s *AccessManageServer) AccessInfoIndex(ctx context.Context, in *sys.AccessInfoIndexReq) (*sys.AccessInfoIndexResp, error) {
	l := accessmanagelogic.NewAccessInfoIndexLogic(ctx, s.svcCtx)
	return l.AccessInfoIndex(in)
}

func (s *AccessManageServer) AccessInfoUpdate(ctx context.Context, in *sys.AccessInfo) (*sys.Response, error) {
	l := accessmanagelogic.NewAccessInfoUpdateLogic(ctx, s.svcCtx)
	return l.AccessInfoUpdate(in)
}

func (s *AccessManageServer) AccessInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Response, error) {
	l := accessmanagelogic.NewAccessInfoDeleteLogic(ctx, s.svcCtx)
	return l.AccessInfoDelete(in)
}
