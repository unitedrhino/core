// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/notifymanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type NotifyManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedNotifyManageServer
}

func NewNotifyManageServer(svcCtx *svc.ServiceContext) *NotifyManageServer {
	return &NotifyManageServer{
		svcCtx: svcCtx,
	}
}

// 站内信
func (s *NotifyManageServer) MessageInfoSend(ctx context.Context, in *sys.MessageInfoSendReq) (*sys.WithID, error) {
	l := notifymanagelogic.NewMessageInfoSendLogic(ctx, s.svcCtx)
	return l.MessageInfoSend(in)
}

func (s *NotifyManageServer) MessageInfoIndex(ctx context.Context, in *sys.MessageInfoIndexReq) (*sys.MessageInfoIndexResp, error) {
	l := notifymanagelogic.NewMessageInfoIndexLogic(ctx, s.svcCtx)
	return l.MessageInfoIndex(in)
}

func (s *NotifyManageServer) MessageInfoUpdate(ctx context.Context, in *sys.MessageInfo) (*sys.Empty, error) {
	l := notifymanagelogic.NewMessageInfoUpdateLogic(ctx, s.svcCtx)
	return l.MessageInfoUpdate(in)
}

func (s *NotifyManageServer) MessageInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := notifymanagelogic.NewMessageInfoDeleteLogic(ctx, s.svcCtx)
	return l.MessageInfoDelete(in)
}

// 通知配置信息
func (s *NotifyManageServer) NotifyConfigRead(ctx context.Context, in *sys.WithIDCode) (*sys.NotifyConfig, error) {
	l := notifymanagelogic.NewNotifyConfigReadLogic(ctx, s.svcCtx)
	return l.NotifyConfigRead(in)
}

func (s *NotifyManageServer) NotifyConfigCreate(ctx context.Context, in *sys.NotifyConfig) (*sys.WithID, error) {
	l := notifymanagelogic.NewNotifyConfigCreateLogic(ctx, s.svcCtx)
	return l.NotifyConfigCreate(in)
}

func (s *NotifyManageServer) NotifyConfigUpdate(ctx context.Context, in *sys.NotifyConfig) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyConfigUpdateLogic(ctx, s.svcCtx)
	return l.NotifyConfigUpdate(in)
}

func (s *NotifyManageServer) NotifyConfigIndex(ctx context.Context, in *sys.NotifyConfigIndexReq) (*sys.NotifyConfigIndexResp, error) {
	l := notifymanagelogic.NewNotifyConfigIndexLogic(ctx, s.svcCtx)
	return l.NotifyConfigIndex(in)
}

func (s *NotifyManageServer) NotifyConfigDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyConfigDeleteLogic(ctx, s.svcCtx)
	return l.NotifyConfigDelete(in)
}

func (s *NotifyManageServer) NotifyConfigSend(ctx context.Context, in *sys.NotifyConfigSendReq) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyConfigSendLogic(ctx, s.svcCtx)
	return l.NotifyConfigSend(in)
}

// 通知模版
func (s *NotifyManageServer) NotifyTemplateRead(ctx context.Context, in *sys.WithID) (*sys.NotifyTemplate, error) {
	l := notifymanagelogic.NewNotifyTemplateReadLogic(ctx, s.svcCtx)
	return l.NotifyTemplateRead(in)
}

func (s *NotifyManageServer) NotifyTemplateCreate(ctx context.Context, in *sys.NotifyTemplate) (*sys.WithID, error) {
	l := notifymanagelogic.NewNotifyTemplateCreateLogic(ctx, s.svcCtx)
	return l.NotifyTemplateCreate(in)
}

func (s *NotifyManageServer) NotifyTemplateUpdate(ctx context.Context, in *sys.NotifyTemplate) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyTemplateUpdateLogic(ctx, s.svcCtx)
	return l.NotifyTemplateUpdate(in)
}

func (s *NotifyManageServer) NotifyTemplateIndex(ctx context.Context, in *sys.NotifyTemplateIndexReq) (*sys.NotifyTemplateIndexResp, error) {
	l := notifymanagelogic.NewNotifyTemplateIndexLogic(ctx, s.svcCtx)
	return l.NotifyTemplateIndex(in)
}

func (s *NotifyManageServer) NotifyTemplateDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyTemplateDeleteLogic(ctx, s.svcCtx)
	return l.NotifyTemplateDelete(in)
}

// 租户通知配置
func (s *NotifyManageServer) NotifyConfigTemplateUpdate(ctx context.Context, in *sys.NotifyConfigTemplate) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyConfigTemplateUpdateLogic(ctx, s.svcCtx)
	return l.NotifyConfigTemplateUpdate(in)
}

func (s *NotifyManageServer) NotifyConfigTemplateDelete(ctx context.Context, in *sys.NotifyConfigTemplateDeleteReq) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyConfigTemplateDeleteLogic(ctx, s.svcCtx)
	return l.NotifyConfigTemplateDelete(in)
}

func (s *NotifyManageServer) NotifyConfigTemplateIndex(ctx context.Context, in *sys.NotifyConfigTemplateIndexReq) (*sys.NotifyConfigTemplateIndexResp, error) {
	l := notifymanagelogic.NewNotifyConfigTemplateIndexLogic(ctx, s.svcCtx)
	return l.NotifyConfigTemplateIndex(in)
}

func (s *NotifyManageServer) NotifyChannelRead(ctx context.Context, in *sys.WithID) (*sys.NotifyChannel, error) {
	l := notifymanagelogic.NewNotifyChannelReadLogic(ctx, s.svcCtx)
	return l.NotifyChannelRead(in)
}

func (s *NotifyManageServer) NotifyChannelCreate(ctx context.Context, in *sys.NotifyChannel) (*sys.WithID, error) {
	l := notifymanagelogic.NewNotifyChannelCreateLogic(ctx, s.svcCtx)
	return l.NotifyChannelCreate(in)
}

func (s *NotifyManageServer) NotifyChannelUpdate(ctx context.Context, in *sys.NotifyChannel) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyChannelUpdateLogic(ctx, s.svcCtx)
	return l.NotifyChannelUpdate(in)
}

func (s *NotifyManageServer) NotifyChannelIndex(ctx context.Context, in *sys.NotifyChannelIndexReq) (*sys.NotifyChannelIndexResp, error) {
	l := notifymanagelogic.NewNotifyChannelIndexLogic(ctx, s.svcCtx)
	return l.NotifyChannelIndex(in)
}

func (s *NotifyManageServer) NotifyChannelDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := notifymanagelogic.NewNotifyChannelDeleteLogic(ctx, s.svcCtx)
	return l.NotifyChannelDelete(in)
}
