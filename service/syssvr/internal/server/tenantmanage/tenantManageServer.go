// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/tenantmanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type TenantManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedTenantManageServer
}

func NewTenantManageServer(svcCtx *svc.ServiceContext) *TenantManageServer {
	return &TenantManageServer{
		svcCtx: svcCtx,
	}
}

// 新增区域
func (s *TenantManageServer) TenantInfoCreate(ctx context.Context, in *sys.TenantInfoCreateReq) (*sys.WithID, error) {
	l := tenantmanagelogic.NewTenantInfoCreateLogic(ctx, s.svcCtx)
	return l.TenantInfoCreate(in)
}

// 更新区域
func (s *TenantManageServer) TenantInfoUpdate(ctx context.Context, in *sys.TenantInfo) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantInfoUpdateLogic(ctx, s.svcCtx)
	return l.TenantInfoUpdate(in)
}

// 删除区域
func (s *TenantManageServer) TenantInfoDelete(ctx context.Context, in *sys.WithIDCode) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantInfoDeleteLogic(ctx, s.svcCtx)
	return l.TenantInfoDelete(in)
}

// 获取租户信息详情
func (s *TenantManageServer) TenantInfoRead(ctx context.Context, in *sys.WithIDCode) (*sys.TenantInfo, error) {
	l := tenantmanagelogic.NewTenantInfoReadLogic(ctx, s.svcCtx)
	return l.TenantInfoRead(in)
}

// 获取租户信息列表
func (s *TenantManageServer) TenantInfoIndex(ctx context.Context, in *sys.TenantInfoIndexReq) (*sys.TenantInfoIndexResp, error) {
	l := tenantmanagelogic.NewTenantInfoIndexLogic(ctx, s.svcCtx)
	return l.TenantInfoIndex(in)
}

func (s *TenantManageServer) TenantAccessMultiUpdate(ctx context.Context, in *sys.TenantAccessMultiUpdateReq) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAccessMultiUpdateLogic(ctx, s.svcCtx)
	return l.TenantAccessMultiUpdate(in)
}

func (s *TenantManageServer) TenantAccessIndex(ctx context.Context, in *sys.TenantAccessIndexReq) (*sys.TenantAccessIndexResp, error) {
	l := tenantmanagelogic.NewTenantAccessIndexLogic(ctx, s.svcCtx)
	return l.TenantAccessIndex(in)
}

func (s *TenantManageServer) TenantAppIndex(ctx context.Context, in *sys.TenantAppIndexReq) (*sys.TenantAppIndexResp, error) {
	l := tenantmanagelogic.NewTenantAppIndexLogic(ctx, s.svcCtx)
	return l.TenantAppIndex(in)
}

func (s *TenantManageServer) TenantAppCreate(ctx context.Context, in *sys.TenantAppCreateReq) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppCreateLogic(ctx, s.svcCtx)
	return l.TenantAppCreate(in)
}

func (s *TenantManageServer) TenantAppDelete(ctx context.Context, in *sys.TenantAppWithIDOrCode) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppDeleteLogic(ctx, s.svcCtx)
	return l.TenantAppDelete(in)
}

func (s *TenantManageServer) TenantAppModuleMultiCreate(ctx context.Context, in *sys.TenantAppCreateReq) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppModuleMultiCreateLogic(ctx, s.svcCtx)
	return l.TenantAppModuleMultiCreate(in)
}

func (s *TenantManageServer) TenantAppModuleCreate(ctx context.Context, in *sys.TenantModuleCreateReq) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppModuleCreateLogic(ctx, s.svcCtx)
	return l.TenantAppModuleCreate(in)
}

func (s *TenantManageServer) TenantAppModuleIndex(ctx context.Context, in *sys.TenantModuleIndexReq) (*sys.TenantModuleIndexResp, error) {
	l := tenantmanagelogic.NewTenantAppModuleIndexLogic(ctx, s.svcCtx)
	return l.TenantAppModuleIndex(in)
}

func (s *TenantManageServer) TenantAppModuleDelete(ctx context.Context, in *sys.TenantModuleWithIDOrCode) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppModuleDeleteLogic(ctx, s.svcCtx)
	return l.TenantAppModuleDelete(in)
}

func (s *TenantManageServer) TenantAppMenuCreate(ctx context.Context, in *sys.TenantAppMenu) (*sys.WithID, error) {
	l := tenantmanagelogic.NewTenantAppMenuCreateLogic(ctx, s.svcCtx)
	return l.TenantAppMenuCreate(in)
}

func (s *TenantManageServer) TenantAppMenuIndex(ctx context.Context, in *sys.TenantAppMenuIndexReq) (*sys.TenantAppMenuIndexResp, error) {
	l := tenantmanagelogic.NewTenantAppMenuIndexLogic(ctx, s.svcCtx)
	return l.TenantAppMenuIndex(in)
}

func (s *TenantManageServer) TenantAppMenuUpdate(ctx context.Context, in *sys.TenantAppMenu) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppMenuUpdateLogic(ctx, s.svcCtx)
	return l.TenantAppMenuUpdate(in)
}

func (s *TenantManageServer) TenantAppMenuDelete(ctx context.Context, in *sys.WithAppCodeID) (*sys.Response, error) {
	l := tenantmanagelogic.NewTenantAppMenuDeleteLogic(ctx, s.svcCtx)
	return l.TenantAppMenuDelete(in)
}
