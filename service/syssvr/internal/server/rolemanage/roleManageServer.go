// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/rolemanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type RoleManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedRoleManageServer
}

func NewRoleManageServer(svcCtx *svc.ServiceContext) *RoleManageServer {
	return &RoleManageServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleManageServer) RoleInfoCreate(ctx context.Context, in *sys.RoleInfo) (*sys.WithID, error) {
	l := rolemanagelogic.NewRoleInfoCreateLogic(ctx, s.svcCtx)
	return l.RoleInfoCreate(in)
}

func (s *RoleManageServer) RoleInfoIndex(ctx context.Context, in *sys.RoleInfoIndexReq) (*sys.RoleInfoIndexResp, error) {
	l := rolemanagelogic.NewRoleInfoIndexLogic(ctx, s.svcCtx)
	return l.RoleInfoIndex(in)
}

func (s *RoleManageServer) RoleInfoUpdate(ctx context.Context, in *sys.RoleInfo) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleInfoUpdateLogic(ctx, s.svcCtx)
	return l.RoleInfoUpdate(in)
}

func (s *RoleManageServer) RoleInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleInfoDeleteLogic(ctx, s.svcCtx)
	return l.RoleInfoDelete(in)
}

func (s *RoleManageServer) RoleMenuIndex(ctx context.Context, in *sys.RoleMenuIndexReq) (*sys.RoleMenuIndexResp, error) {
	l := rolemanagelogic.NewRoleMenuIndexLogic(ctx, s.svcCtx)
	return l.RoleMenuIndex(in)
}

func (s *RoleManageServer) RoleMenuMultiUpdate(ctx context.Context, in *sys.RoleMenuMultiUpdateReq) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleMenuMultiUpdateLogic(ctx, s.svcCtx)
	return l.RoleMenuMultiUpdate(in)
}

func (s *RoleManageServer) RoleAppIndex(ctx context.Context, in *sys.RoleAppIndexReq) (*sys.RoleAppIndexResp, error) {
	l := rolemanagelogic.NewRoleAppIndexLogic(ctx, s.svcCtx)
	return l.RoleAppIndex(in)
}

func (s *RoleManageServer) RoleAppMultiUpdate(ctx context.Context, in *sys.RoleAppMultiUpdateReq) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleAppMultiUpdateLogic(ctx, s.svcCtx)
	return l.RoleAppMultiUpdate(in)
}

func (s *RoleManageServer) RoleModuleIndex(ctx context.Context, in *sys.RoleModuleIndexReq) (*sys.RoleModuleIndexResp, error) {
	l := rolemanagelogic.NewRoleModuleIndexLogic(ctx, s.svcCtx)
	return l.RoleModuleIndex(in)
}

func (s *RoleManageServer) RoleModuleMultiUpdate(ctx context.Context, in *sys.RoleModuleMultiUpdateReq) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleModuleMultiUpdateLogic(ctx, s.svcCtx)
	return l.RoleModuleMultiUpdate(in)
}

func (s *RoleManageServer) RoleApiAuth(ctx context.Context, in *sys.RoleApiAuthReq) (*sys.RoleApiAuthResp, error) {
	l := rolemanagelogic.NewRoleApiAuthLogic(ctx, s.svcCtx)
	return l.RoleApiAuth(in)
}

func (s *RoleManageServer) RoleAccessMultiUpdate(ctx context.Context, in *sys.RoleAccessMultiUpdateReq) (*sys.Empty, error) {
	l := rolemanagelogic.NewRoleAccessMultiUpdateLogic(ctx, s.svcCtx)
	return l.RoleAccessMultiUpdate(in)
}

func (s *RoleManageServer) RoleAccessIndex(ctx context.Context, in *sys.RoleAccessIndexReq) (*sys.RoleAccessIndexResp, error) {
	l := rolemanagelogic.NewRoleAccessIndexLogic(ctx, s.svcCtx)
	return l.RoleAccessIndex(in)
}
