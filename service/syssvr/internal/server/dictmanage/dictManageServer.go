// TemplateCode generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/dictmanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type DictManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedDictManageServer
}

func NewDictManageServer(svcCtx *svc.ServiceContext) *DictManageServer {
	return &DictManageServer{
		svcCtx: svcCtx,
	}
}

func (s *DictManageServer) DictInfoCreate(ctx context.Context, in *sys.DictInfo) (*sys.WithID, error) {
	l := dictmanagelogic.NewDictInfoCreateLogic(ctx, s.svcCtx)
	return l.DictInfoCreate(in)
}

func (s *DictManageServer) DictInfoIndex(ctx context.Context, in *sys.DictInfoIndexReq) (*sys.DictInfoIndexResp, error) {
	l := dictmanagelogic.NewDictInfoIndexLogic(ctx, s.svcCtx)
	return l.DictInfoIndex(in)
}

func (s *DictManageServer) DictInfoUpdate(ctx context.Context, in *sys.DictInfo) (*sys.Response, error) {
	l := dictmanagelogic.NewDictInfoUpdateLogic(ctx, s.svcCtx)
	return l.DictInfoUpdate(in)
}

func (s *DictManageServer) DictInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Response, error) {
	l := dictmanagelogic.NewDictInfoDeleteLogic(ctx, s.svcCtx)
	return l.DictInfoDelete(in)
}

func (s *DictManageServer) DictInfoRead(ctx context.Context, in *sys.DictInfoReadReq) (*sys.DictInfo, error) {
	l := dictmanagelogic.NewDictInfoReadLogic(ctx, s.svcCtx)
	return l.DictInfoRead(in)
}

func (s *DictManageServer) DictDetailCreate(ctx context.Context, in *sys.DictDetail) (*sys.WithID, error) {
	l := dictmanagelogic.NewDictDetailCreateLogic(ctx, s.svcCtx)
	return l.DictDetailCreate(in)
}

func (s *DictManageServer) DictDetailIndex(ctx context.Context, in *sys.DictDetailIndexReq) (*sys.DictDetailIndexResp, error) {
	l := dictmanagelogic.NewDictDetailIndexLogic(ctx, s.svcCtx)
	return l.DictDetailIndex(in)
}

func (s *DictManageServer) DictDetailUpdate(ctx context.Context, in *sys.DictDetail) (*sys.Response, error) {
	l := dictmanagelogic.NewDictDetailUpdateLogic(ctx, s.svcCtx)
	return l.DictDetailUpdate(in)
}

func (s *DictManageServer) DictDetailDelete(ctx context.Context, in *sys.WithID) (*sys.Response, error) {
	l := dictmanagelogic.NewDictDetailDeleteLogic(ctx, s.svcCtx)
	return l.DictDetailDelete(in)
}
