// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/modulemanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type ModuleManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedModuleManageServer
}

func NewModuleManageServer(svcCtx *svc.ServiceContext) *ModuleManageServer {
	return &ModuleManageServer{
		svcCtx: svcCtx,
	}
}

func (s *ModuleManageServer) ModuleInfoCreate(ctx context.Context, in *sys.ModuleInfo) (*sys.WithID, error) {
	l := modulemanagelogic.NewModuleInfoCreateLogic(ctx, s.svcCtx)
	return l.ModuleInfoCreate(in)
}

func (s *ModuleManageServer) ModuleInfoIndex(ctx context.Context, in *sys.ModuleInfoIndexReq) (*sys.ModuleInfoIndexResp, error) {
	l := modulemanagelogic.NewModuleInfoIndexLogic(ctx, s.svcCtx)
	return l.ModuleInfoIndex(in)
}

func (s *ModuleManageServer) ModuleInfoUpdate(ctx context.Context, in *sys.ModuleInfo) (*sys.Response, error) {
	l := modulemanagelogic.NewModuleInfoUpdateLogic(ctx, s.svcCtx)
	return l.ModuleInfoUpdate(in)
}

func (s *ModuleManageServer) ModuleInfoDelete(ctx context.Context, in *sys.WithIDCode) (*sys.Response, error) {
	l := modulemanagelogic.NewModuleInfoDeleteLogic(ctx, s.svcCtx)
	return l.ModuleInfoDelete(in)
}

func (s *ModuleManageServer) ModuleInfoRead(ctx context.Context, in *sys.WithIDCode) (*sys.ModuleInfo, error) {
	l := modulemanagelogic.NewModuleInfoReadLogic(ctx, s.svcCtx)
	return l.ModuleInfoRead(in)
}

func (s *ModuleManageServer) ModuleMenuCreate(ctx context.Context, in *sys.MenuInfo) (*sys.WithID, error) {
	l := modulemanagelogic.NewModuleMenuCreateLogic(ctx, s.svcCtx)
	return l.ModuleMenuCreate(in)
}

func (s *ModuleManageServer) ModuleMenuIndex(ctx context.Context, in *sys.MenuInfoIndexReq) (*sys.MenuInfoIndexResp, error) {
	l := modulemanagelogic.NewModuleMenuIndexLogic(ctx, s.svcCtx)
	return l.ModuleMenuIndex(in)
}

func (s *ModuleManageServer) ModuleMenuUpdate(ctx context.Context, in *sys.MenuInfo) (*sys.Response, error) {
	l := modulemanagelogic.NewModuleMenuUpdateLogic(ctx, s.svcCtx)
	return l.ModuleMenuUpdate(in)
}

func (s *ModuleManageServer) ModuleMenuDelete(ctx context.Context, in *sys.WithID) (*sys.Response, error) {
	l := modulemanagelogic.NewModuleMenuDeleteLogic(ctx, s.svcCtx)
	return l.ModuleMenuDelete(in)
}
