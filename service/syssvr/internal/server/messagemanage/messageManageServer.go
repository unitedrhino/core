// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/logic/messagemanage"
	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"
)

type MessageManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedMessageManageServer
}

func NewMessageManageServer(svcCtx *svc.ServiceContext) *MessageManageServer {
	return &MessageManageServer{
		svcCtx: svcCtx,
	}
}

// 站内信
func (s *MessageManageServer) MessageInfoSend(ctx context.Context, in *sys.MessageInfoSendReq) (*sys.WithID, error) {
	l := messagemanagelogic.NewMessageInfoSendLogic(ctx, s.svcCtx)
	return l.MessageInfoSend(in)
}

func (s *MessageManageServer) MessageInfoIndex(ctx context.Context, in *sys.MessageInfoIndexReq) (*sys.MessageInfoIndexResp, error) {
	l := messagemanagelogic.NewMessageInfoIndexLogic(ctx, s.svcCtx)
	return l.MessageInfoIndex(in)
}

func (s *MessageManageServer) MessageInfoUpdate(ctx context.Context, in *sys.MessageInfo) (*sys.Empty, error) {
	l := messagemanagelogic.NewMessageInfoUpdateLogic(ctx, s.svcCtx)
	return l.MessageInfoUpdate(in)
}

func (s *MessageManageServer) MessageInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := messagemanagelogic.NewMessageInfoDeleteLogic(ctx, s.svcCtx)
	return l.MessageInfoDelete(in)
}

// 通知配置信息
func (s *MessageManageServer) NotifyInfoRead(ctx context.Context, in *sys.WithIDCode) (*sys.NotifyInfo, error) {
	l := messagemanagelogic.NewNotifyInfoReadLogic(ctx, s.svcCtx)
	return l.NotifyInfoRead(in)
}

func (s *MessageManageServer) NotifyInfoCreate(ctx context.Context, in *sys.NotifyInfo) (*sys.WithID, error) {
	l := messagemanagelogic.NewNotifyInfoCreateLogic(ctx, s.svcCtx)
	return l.NotifyInfoCreate(in)
}

func (s *MessageManageServer) NotifyInfoUpdate(ctx context.Context, in *sys.NotifyInfo) (*sys.Empty, error) {
	l := messagemanagelogic.NewNotifyInfoUpdateLogic(ctx, s.svcCtx)
	return l.NotifyInfoUpdate(in)
}

func (s *MessageManageServer) NotifyInfoIndex(ctx context.Context, in *sys.NotifyInfoIndexReq) (*sys.NotifyInfoIndexResp, error) {
	l := messagemanagelogic.NewNotifyInfoIndexLogic(ctx, s.svcCtx)
	return l.NotifyInfoIndex(in)
}

func (s *MessageManageServer) NotifyInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := messagemanagelogic.NewNotifyInfoDeleteLogic(ctx, s.svcCtx)
	return l.NotifyInfoDelete(in)
}

func (s *MessageManageServer) NotifyInfoSend(ctx context.Context, in *sys.NotifyInfoSendReq) (*sys.Empty, error) {
	l := messagemanagelogic.NewNotifyInfoSendLogic(ctx, s.svcCtx)
	return l.NotifyInfoSend(in)
}

// 通知模版
func (s *MessageManageServer) NotifyTemplateRead(ctx context.Context, in *sys.WithID) (*sys.NotifyTemplate, error) {
	l := messagemanagelogic.NewNotifyTemplateReadLogic(ctx, s.svcCtx)
	return l.NotifyTemplateRead(in)
}

func (s *MessageManageServer) NotifyTemplateCreate(ctx context.Context, in *sys.NotifyTemplate) (*sys.WithID, error) {
	l := messagemanagelogic.NewNotifyTemplateCreateLogic(ctx, s.svcCtx)
	return l.NotifyTemplateCreate(in)
}

func (s *MessageManageServer) NotifyTemplateUpdate(ctx context.Context, in *sys.NotifyTemplate) (*sys.Empty, error) {
	l := messagemanagelogic.NewNotifyTemplateUpdateLogic(ctx, s.svcCtx)
	return l.NotifyTemplateUpdate(in)
}

func (s *MessageManageServer) NotifyTemplateIndex(ctx context.Context, in *sys.NotifyTemplateIndexReq) (*sys.NotifyTemplateIndexResp, error) {
	l := messagemanagelogic.NewNotifyTemplateIndexLogic(ctx, s.svcCtx)
	return l.NotifyTemplateIndex(in)
}

func (s *MessageManageServer) NotifyTemplateDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := messagemanagelogic.NewNotifyTemplateDeleteLogic(ctx, s.svcCtx)
	return l.NotifyTemplateDelete(in)
}
