// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.1
// Source: sys.proto

package server

import (
	"context"

	"gitee.com/unitedrhino/core/service/syssvr/internal/logic/departmentmanage"
	"gitee.com/unitedrhino/core/service/syssvr/internal/svc"
	"gitee.com/unitedrhino/core/service/syssvr/pb/sys"
)

type DepartmentManageServer struct {
	svcCtx *svc.ServiceContext
	sys.UnimplementedDepartmentManageServer
}

func NewDepartmentManageServer(svcCtx *svc.ServiceContext) *DepartmentManageServer {
	return &DepartmentManageServer{
		svcCtx: svcCtx,
	}
}

func (s *DepartmentManageServer) DeptInfoRead(ctx context.Context, in *sys.DeptInfoReadReq) (*sys.DeptInfo, error) {
	l := departmentmanagelogic.NewDeptInfoReadLogic(ctx, s.svcCtx)
	return l.DeptInfoRead(in)
}

func (s *DepartmentManageServer) DeptInfoCreate(ctx context.Context, in *sys.DeptInfo) (*sys.WithID, error) {
	l := departmentmanagelogic.NewDeptInfoCreateLogic(ctx, s.svcCtx)
	return l.DeptInfoCreate(in)
}

func (s *DepartmentManageServer) DeptInfoIndex(ctx context.Context, in *sys.DeptInfoIndexReq) (*sys.DeptInfoIndexResp, error) {
	l := departmentmanagelogic.NewDeptInfoIndexLogic(ctx, s.svcCtx)
	return l.DeptInfoIndex(in)
}

func (s *DepartmentManageServer) DeptInfoUpdate(ctx context.Context, in *sys.DeptInfo) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptInfoUpdateLogic(ctx, s.svcCtx)
	return l.DeptInfoUpdate(in)
}

func (s *DepartmentManageServer) DeptInfoDelete(ctx context.Context, in *sys.WithID) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptInfoDeleteLogic(ctx, s.svcCtx)
	return l.DeptInfoDelete(in)
}

func (s *DepartmentManageServer) DeptInfoSync(ctx context.Context, in *sys.DeptInfoSyncReq) (*sys.DeptInfoSyncResp, error) {
	l := departmentmanagelogic.NewDeptInfoSyncLogic(ctx, s.svcCtx)
	return l.DeptInfoSync(in)
}

func (s *DepartmentManageServer) DeptUserIndex(ctx context.Context, in *sys.DeptUserIndexReq) (*sys.DeptUserIndexResp, error) {
	l := departmentmanagelogic.NewDeptUserIndexLogic(ctx, s.svcCtx)
	return l.DeptUserIndex(in)
}

func (s *DepartmentManageServer) DeptUserMultiDelete(ctx context.Context, in *sys.DeptUserMultiSaveReq) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptUserMultiDeleteLogic(ctx, s.svcCtx)
	return l.DeptUserMultiDelete(in)
}

func (s *DepartmentManageServer) DeptUserMultiCreate(ctx context.Context, in *sys.DeptUserMultiSaveReq) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptUserMultiCreateLogic(ctx, s.svcCtx)
	return l.DeptUserMultiCreate(in)
}

func (s *DepartmentManageServer) DeptRoleIndex(ctx context.Context, in *sys.DeptRoleIndexReq) (*sys.DeptRoleIndexResp, error) {
	l := departmentmanagelogic.NewDeptRoleIndexLogic(ctx, s.svcCtx)
	return l.DeptRoleIndex(in)
}

func (s *DepartmentManageServer) DeptRoleMultiDelete(ctx context.Context, in *sys.DeptRoleMultiSaveReq) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptRoleMultiDeleteLogic(ctx, s.svcCtx)
	return l.DeptRoleMultiDelete(in)
}

func (s *DepartmentManageServer) DeptRoleMultiCreate(ctx context.Context, in *sys.DeptRoleMultiSaveReq) (*sys.Empty, error) {
	l := departmentmanagelogic.NewDeptRoleMultiCreateLogic(ctx, s.svcCtx)
	return l.DeptRoleMultiCreate(in)
}
