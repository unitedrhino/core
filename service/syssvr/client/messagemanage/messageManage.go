// Code generated by goctl. DO NOT EDIT.
// Source: sys.proto

package messagemanage

import (
	"context"

	"gitee.com/i-Things/core/service/syssvr/internal/svc"
	"gitee.com/i-Things/core/service/syssvr/pb/sys"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccessInfo                 = sys.AccessInfo
	AccessInfoIndexReq         = sys.AccessInfoIndexReq
	AccessInfoIndexResp        = sys.AccessInfoIndexResp
	ApiInfo                    = sys.ApiInfo
	ApiInfoIndexReq            = sys.ApiInfoIndexReq
	ApiInfoIndexResp           = sys.ApiInfoIndexResp
	AppInfo                    = sys.AppInfo
	AppInfoIndexReq            = sys.AppInfoIndexReq
	AppInfoIndexResp           = sys.AppInfoIndexResp
	AppModuleIndexReq          = sys.AppModuleIndexReq
	AppModuleIndexResp         = sys.AppModuleIndexResp
	AppModuleMultiUpdateReq    = sys.AppModuleMultiUpdateReq
	AreaInfo                   = sys.AreaInfo
	AreaInfoIndexReq           = sys.AreaInfoIndexReq
	AreaInfoIndexResp          = sys.AreaInfoIndexResp
	AreaInfoReadReq            = sys.AreaInfoReadReq
	AreaWithID                 = sys.AreaWithID
	AuthApiInfo                = sys.AuthApiInfo
	ConfigResp                 = sys.ConfigResp
	DataArea                   = sys.DataArea
	DataAreaIndexReq           = sys.DataAreaIndexReq
	DataAreaIndexResp          = sys.DataAreaIndexResp
	DataAreaMultiDeleteReq     = sys.DataAreaMultiDeleteReq
	DataAreaMultiUpdateReq     = sys.DataAreaMultiUpdateReq
	DataProject                = sys.DataProject
	DataProjectIndexReq        = sys.DataProjectIndexReq
	DataProjectIndexResp       = sys.DataProjectIndexResp
	DataProjectMultiUpdateReq  = sys.DataProjectMultiUpdateReq
	DateRange                  = sys.DateRange
	DictDetail                 = sys.DictDetail
	DictDetailIndexReq         = sys.DictDetailIndexReq
	DictDetailIndexResp        = sys.DictDetailIndexResp
	DictInfo                   = sys.DictInfo
	DictInfoIndexReq           = sys.DictInfoIndexReq
	DictInfoIndexResp          = sys.DictInfoIndexResp
	DictInfoReadReq            = sys.DictInfoReadReq
	Empty                      = sys.Empty
	IDList                     = sys.IDList
	JwtToken                   = sys.JwtToken
	LoginLogCreateReq          = sys.LoginLogCreateReq
	LoginLogIndexReq           = sys.LoginLogIndexReq
	LoginLogIndexResp          = sys.LoginLogIndexResp
	LoginLogInfo               = sys.LoginLogInfo
	Map                        = sys.Map
	MenuInfo                   = sys.MenuInfo
	MenuInfoIndexReq           = sys.MenuInfoIndexReq
	MenuInfoIndexResp          = sys.MenuInfoIndexResp
	MessageIndexReq            = sys.MessageIndexReq
	MessageIndexResp           = sys.MessageIndexResp
	MessageInfo                = sys.MessageInfo
	MessageSendReq             = sys.MessageSendReq
	ModuleInfo                 = sys.ModuleInfo
	ModuleInfoIndexReq         = sys.ModuleInfoIndexReq
	ModuleInfoIndexResp        = sys.ModuleInfoIndexResp
	NotifyInfo                 = sys.NotifyInfo
	NotifyInfoIndexReq         = sys.NotifyInfoIndexReq
	NotifyInfoIndexResp        = sys.NotifyInfoIndexResp
	NotifySendReq              = sys.NotifySendReq
	NotifyTemplate             = sys.NotifyTemplate
	NotifyTemplateIndexReq     = sys.NotifyTemplateIndexReq
	NotifyTemplateIndexResp    = sys.NotifyTemplateIndexResp
	OperLogCreateReq           = sys.OperLogCreateReq
	OperLogIndexReq            = sys.OperLogIndexReq
	OperLogIndexResp           = sys.OperLogIndexResp
	OperLogInfo                = sys.OperLogInfo
	PageInfo                   = sys.PageInfo
	PageInfo_OrderBy           = sys.PageInfo_OrderBy
	Point                      = sys.Point
	ProjectInfo                = sys.ProjectInfo
	ProjectInfoIndexReq        = sys.ProjectInfoIndexReq
	ProjectInfoIndexResp       = sys.ProjectInfoIndexResp
	ProjectWithID              = sys.ProjectWithID
	RoleAccessIndexReq         = sys.RoleAccessIndexReq
	RoleAccessIndexResp        = sys.RoleAccessIndexResp
	RoleAccessMultiUpdateReq   = sys.RoleAccessMultiUpdateReq
	RoleApiAuthReq             = sys.RoleApiAuthReq
	RoleAppIndexReq            = sys.RoleAppIndexReq
	RoleAppIndexResp           = sys.RoleAppIndexResp
	RoleAppMultiUpdateReq      = sys.RoleAppMultiUpdateReq
	RoleAppUpdateReq           = sys.RoleAppUpdateReq
	RoleInfo                   = sys.RoleInfo
	RoleInfoIndexReq           = sys.RoleInfoIndexReq
	RoleInfoIndexResp          = sys.RoleInfoIndexResp
	RoleMenuIndexReq           = sys.RoleMenuIndexReq
	RoleMenuIndexResp          = sys.RoleMenuIndexResp
	RoleMenuMultiUpdateReq     = sys.RoleMenuMultiUpdateReq
	RoleModuleIndexReq         = sys.RoleModuleIndexReq
	RoleModuleIndexResp        = sys.RoleModuleIndexResp
	RoleModuleMultiUpdateReq   = sys.RoleModuleMultiUpdateReq
	TenantAccessIndexReq       = sys.TenantAccessIndexReq
	TenantAccessIndexResp      = sys.TenantAccessIndexResp
	TenantAccessMultiUpdateReq = sys.TenantAccessMultiUpdateReq
	TenantAppCreateReq         = sys.TenantAppCreateReq
	TenantAppIndexReq          = sys.TenantAppIndexReq
	TenantAppIndexResp         = sys.TenantAppIndexResp
	TenantAppMenu              = sys.TenantAppMenu
	TenantAppMenuIndexReq      = sys.TenantAppMenuIndexReq
	TenantAppMenuIndexResp     = sys.TenantAppMenuIndexResp
	TenantAppModule            = sys.TenantAppModule
	TenantAppMultiUpdateReq    = sys.TenantAppMultiUpdateReq
	TenantAppWithIDOrCode      = sys.TenantAppWithIDOrCode
	TenantInfo                 = sys.TenantInfo
	TenantInfoCreateReq        = sys.TenantInfoCreateReq
	TenantInfoIndexReq         = sys.TenantInfoIndexReq
	TenantInfoIndexResp        = sys.TenantInfoIndexResp
	TenantModuleCreateReq      = sys.TenantModuleCreateReq
	TenantModuleIndexReq       = sys.TenantModuleIndexReq
	TenantModuleIndexResp      = sys.TenantModuleIndexResp
	TenantModuleWithIDOrCode   = sys.TenantModuleWithIDOrCode
	TenantNotify               = sys.TenantNotify
	TenantNotifyIndexReq       = sys.TenantNotifyIndexReq
	TenantNotifyIndexResp      = sys.TenantNotifyIndexResp
	TenantNotifyMultiUpdateReq = sys.TenantNotifyMultiUpdateReq
	UserAreaApplyCreateReq     = sys.UserAreaApplyCreateReq
	UserAreaApplyDealReq       = sys.UserAreaApplyDealReq
	UserAreaApplyIndexReq      = sys.UserAreaApplyIndexReq
	UserAreaApplyIndexResp     = sys.UserAreaApplyIndexResp
	UserAreaApplyInfo          = sys.UserAreaApplyInfo
	UserCaptchaReq             = sys.UserCaptchaReq
	UserCaptchaResp            = sys.UserCaptchaResp
	UserChangePwdReq           = sys.UserChangePwdReq
	UserCheckTokenReq          = sys.UserCheckTokenReq
	UserCheckTokenResp         = sys.UserCheckTokenResp
	UserCreateResp             = sys.UserCreateResp
	UserForgetPwdReq           = sys.UserForgetPwdReq
	UserInfo                   = sys.UserInfo
	UserInfoCreateReq          = sys.UserInfoCreateReq
	UserInfoDeleteReq          = sys.UserInfoDeleteReq
	UserInfoIndexReq           = sys.UserInfoIndexReq
	UserInfoIndexResp          = sys.UserInfoIndexResp
	UserInfoReadReq            = sys.UserInfoReadReq
	UserInfoUpdateReq          = sys.UserInfoUpdateReq
	UserLoginReq               = sys.UserLoginReq
	UserLoginResp              = sys.UserLoginResp
	UserMessage                = sys.UserMessage
	UserMessageIndexReq        = sys.UserMessageIndexReq
	UserMessageIndexResp       = sys.UserMessageIndexResp
	UserRegisterReq            = sys.UserRegisterReq
	UserRegisterResp           = sys.UserRegisterResp
	UserRoleIndexReq           = sys.UserRoleIndexReq
	UserRoleIndexResp          = sys.UserRoleIndexResp
	UserRoleMultiUpdateReq     = sys.UserRoleMultiUpdateReq
	WithAppCodeID              = sys.WithAppCodeID
	WithID                     = sys.WithID
	WithIDCode                 = sys.WithIDCode

	MessageManage interface {
		NotifySend(ctx context.Context, in *NotifySendReq, opts ...grpc.CallOption) (*Empty, error)
		MessageSend(ctx context.Context, in *MessageSendReq, opts ...grpc.CallOption) (*WithID, error)
		MessageIndex(ctx context.Context, in *MessageIndexReq, opts ...grpc.CallOption) (*MessageIndexResp, error)
		MessageUpdate(ctx context.Context, in *MessageInfo, opts ...grpc.CallOption) (*Empty, error)
		MessageDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error)
		// 通知配置信息
		NotifyInfoRead(ctx context.Context, in *WithIDCode, opts ...grpc.CallOption) (*NotifyInfo, error)
		NotifyInfoCreate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*WithID, error)
		NotifyInfoUpdate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*Empty, error)
		NotifyInfoIndex(ctx context.Context, in *NotifyInfoIndexReq, opts ...grpc.CallOption) (*NotifyInfoIndexResp, error)
		NotifyInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error)
		// 通知模版
		NotifyTemplateRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*NotifyTemplate, error)
		NotifyTemplateCreate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*WithID, error)
		NotifyTemplateUpdate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*Empty, error)
		NotifyTemplateIndex(ctx context.Context, in *NotifyTemplateIndexReq, opts ...grpc.CallOption) (*NotifyTemplateIndexResp, error)
		NotifyTemplateDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultMessageManage struct {
		cli zrpc.Client
	}

	directMessageManage struct {
		svcCtx *svc.ServiceContext
		svr    sys.MessageManageServer
	}
)

func NewMessageManage(cli zrpc.Client) MessageManage {
	return &defaultMessageManage{
		cli: cli,
	}
}

func NewDirectMessageManage(svcCtx *svc.ServiceContext, svr sys.MessageManageServer) MessageManage {
	return &directMessageManage{
		svr:    svr,
		svcCtx: svcCtx,
	}
}

func (m *defaultMessageManage) NotifySend(ctx context.Context, in *NotifySendReq, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifySend(ctx, in, opts...)
}

func (d *directMessageManage) NotifySend(ctx context.Context, in *NotifySendReq, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.NotifySend(ctx, in)
}

func (m *defaultMessageManage) MessageSend(ctx context.Context, in *MessageSendReq, opts ...grpc.CallOption) (*WithID, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.MessageSend(ctx, in, opts...)
}

func (d *directMessageManage) MessageSend(ctx context.Context, in *MessageSendReq, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.MessageSend(ctx, in)
}

func (m *defaultMessageManage) MessageIndex(ctx context.Context, in *MessageIndexReq, opts ...grpc.CallOption) (*MessageIndexResp, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.MessageIndex(ctx, in, opts...)
}

func (d *directMessageManage) MessageIndex(ctx context.Context, in *MessageIndexReq, opts ...grpc.CallOption) (*MessageIndexResp, error) {
	return d.svr.MessageIndex(ctx, in)
}

func (m *defaultMessageManage) MessageUpdate(ctx context.Context, in *MessageInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.MessageUpdate(ctx, in, opts...)
}

func (d *directMessageManage) MessageUpdate(ctx context.Context, in *MessageInfo, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.MessageUpdate(ctx, in)
}

func (m *defaultMessageManage) MessageDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.MessageDelete(ctx, in, opts...)
}

func (d *directMessageManage) MessageDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.MessageDelete(ctx, in)
}

// 通知配置信息
func (m *defaultMessageManage) NotifyInfoRead(ctx context.Context, in *WithIDCode, opts ...grpc.CallOption) (*NotifyInfo, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyInfoRead(ctx, in, opts...)
}

// 通知配置信息
func (d *directMessageManage) NotifyInfoRead(ctx context.Context, in *WithIDCode, opts ...grpc.CallOption) (*NotifyInfo, error) {
	return d.svr.NotifyInfoRead(ctx, in)
}

func (m *defaultMessageManage) NotifyInfoCreate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*WithID, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyInfoCreate(ctx, in, opts...)
}

func (d *directMessageManage) NotifyInfoCreate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.NotifyInfoCreate(ctx, in)
}

func (m *defaultMessageManage) NotifyInfoUpdate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyInfoUpdate(ctx, in, opts...)
}

func (d *directMessageManage) NotifyInfoUpdate(ctx context.Context, in *NotifyInfo, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.NotifyInfoUpdate(ctx, in)
}

func (m *defaultMessageManage) NotifyInfoIndex(ctx context.Context, in *NotifyInfoIndexReq, opts ...grpc.CallOption) (*NotifyInfoIndexResp, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyInfoIndex(ctx, in, opts...)
}

func (d *directMessageManage) NotifyInfoIndex(ctx context.Context, in *NotifyInfoIndexReq, opts ...grpc.CallOption) (*NotifyInfoIndexResp, error) {
	return d.svr.NotifyInfoIndex(ctx, in)
}

func (m *defaultMessageManage) NotifyInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyInfoDelete(ctx, in, opts...)
}

func (d *directMessageManage) NotifyInfoDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.NotifyInfoDelete(ctx, in)
}

// 通知模版
func (m *defaultMessageManage) NotifyTemplateRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*NotifyTemplate, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyTemplateRead(ctx, in, opts...)
}

// 通知模版
func (d *directMessageManage) NotifyTemplateRead(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*NotifyTemplate, error) {
	return d.svr.NotifyTemplateRead(ctx, in)
}

func (m *defaultMessageManage) NotifyTemplateCreate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*WithID, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyTemplateCreate(ctx, in, opts...)
}

func (d *directMessageManage) NotifyTemplateCreate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*WithID, error) {
	return d.svr.NotifyTemplateCreate(ctx, in)
}

func (m *defaultMessageManage) NotifyTemplateUpdate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyTemplateUpdate(ctx, in, opts...)
}

func (d *directMessageManage) NotifyTemplateUpdate(ctx context.Context, in *NotifyTemplate, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.NotifyTemplateUpdate(ctx, in)
}

func (m *defaultMessageManage) NotifyTemplateIndex(ctx context.Context, in *NotifyTemplateIndexReq, opts ...grpc.CallOption) (*NotifyTemplateIndexResp, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyTemplateIndex(ctx, in, opts...)
}

func (d *directMessageManage) NotifyTemplateIndex(ctx context.Context, in *NotifyTemplateIndexReq, opts ...grpc.CallOption) (*NotifyTemplateIndexResp, error) {
	return d.svr.NotifyTemplateIndex(ctx, in)
}

func (m *defaultMessageManage) NotifyTemplateDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	client := sys.NewMessageManageClient(m.cli.Conn())
	return client.NotifyTemplateDelete(ctx, in, opts...)
}

func (d *directMessageManage) NotifyTemplateDelete(ctx context.Context, in *WithID, opts ...grpc.CallOption) (*Empty, error) {
	return d.svr.NotifyTemplateDelete(ctx, in)
}
