// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	goViewproject "gitee.com/i-Things/core/service/viewsvr/internal/handler/goView/project"
	goViewprojectdetail "gitee.com/i-Things/core/service/viewsvr/internal/handler/goView/project/detail"
	"gitee.com/i-Things/core/service/viewsvr/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.SetupWare, serverCtx.CheckTokenWare, serverCtx.CheckApiWare, serverCtx.DataAuthWare, serverCtx.TeardownWare},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/create",
					Handler: goViewproject.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: goViewproject.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: goViewproject.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/index",
					Handler: goViewproject.IndexHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/read",
					Handler: goViewproject.ReadHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/view/go-view/project"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.SetupWare, serverCtx.CheckTokenWare, serverCtx.CheckApiWare, serverCtx.DataAuthWare, serverCtx.TeardownWare},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: goViewprojectdetail.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/read",
					Handler: goViewprojectdetail.ReadHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/view/go-view/project/detail"),
	)
}
